{"ast":null,"code":"import { mat4 } from 'gl-matrix';\nimport * as macro from 'vtk.js/Sources/macros';\nimport vtkViewNode from 'vtk.js/Sources/Rendering/SceneGraph/ViewNode';\nimport { registerOverride } from 'vtk.js/Sources/Rendering/OpenGL/ViewNodeFactory'; // ----------------------------------------------------------------------------\n// vtkOpenGLImageSlice methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLImageSlice(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLImageSlice'); // Builds myself.\n\n  publicAPI.buildPass = prepass => {\n    if (!model.renderable || !model.renderable.getVisibility()) {\n      return;\n    }\n\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n\n      model._openGLRenderWindow = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderWindow');\n      model.openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      model.context = model._openGLRenderWindow.getContext();\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.renderable.getMapper());\n      publicAPI.removeUnusedNodes();\n    }\n  };\n\n  publicAPI.traverseOpaqueZBufferPass = renderPass => {\n    publicAPI.traverseOpaquePass(renderPass);\n  }; // we draw textures, then mapper, then post pass textures\n\n\n  publicAPI.traverseOpaquePass = renderPass => {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || !model.renderable.getIsOpaque() || model.openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n\n    publicAPI.apply(renderPass, true);\n    model.children.forEach(child => {\n      child.traverse(renderPass);\n    });\n    publicAPI.apply(renderPass, false);\n  }; // we draw textures, then mapper, then post pass textures\n\n\n  publicAPI.traverseTranslucentPass = renderPass => {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || model.renderable.getIsOpaque() || model.openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n\n    publicAPI.apply(renderPass, true);\n    model.children.forEach(child => {\n      child.traverse(renderPass);\n    });\n    publicAPI.apply(renderPass, false);\n  };\n\n  publicAPI.queryPass = (prepass, renderPass) => {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      }\n\n      if (model.renderable.getIsOpaque()) {\n        renderPass.incrementOpaqueActorCount();\n      } else {\n        renderPass.incrementTranslucentActorCount();\n      }\n    }\n  };\n\n  publicAPI.opaqueZBufferPass = (prepass, renderPass) => publicAPI.opaquePass(prepass, renderPass); // Renders myself\n\n\n  publicAPI.opaquePass = (prepass, renderPass) => {\n    if (prepass) {\n      model.context.depthMask(true);\n    }\n  }; // Renders myself\n\n\n  publicAPI.translucentPass = (prepass, renderPass) => {\n    model.context.depthMask(!prepass);\n  };\n\n  publicAPI.getKeyMatrices = () => {\n    // has the actor changed?\n    if (model.renderable.getMTime() > model.keyMatrixTime.getMTime()) {\n      mat4.copy(model.keyMatrices.mcwc, model.renderable.getMatrix());\n      mat4.transpose(model.keyMatrices.mcwc, model.keyMatrices.mcwc);\n      model.keyMatrixTime.modified();\n    }\n\n    return model.keyMatrices;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nconst DEFAULT_VALUES = {\n  context: null,\n  keyMatrixTime: null,\n  keyMatrices: null\n}; // ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.keyMatrixTime = {};\n  macro.obj(model.keyMatrixTime, {\n    mtime: 0\n  });\n  model.keyMatrices = {\n    mcwc: mat4.identity(new Float64Array(16))\n  }; // Build VTK API\n\n  macro.setGet(publicAPI, model, ['context']); // Object methods\n\n  vtkOpenGLImageSlice(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkOpenGLImageSlice'); // ----------------------------------------------------------------------------\n\nexport default {\n  newInstance,\n  extend\n}; // Register ourself to OpenGL backend if imported\n\nregisterOverride('vtkImageSlice', newInstance);","map":{"version":3,"names":["mat4","macro","vtkViewNode","registerOverride","vtkOpenGLImageSlice","publicAPI","model","classHierarchy","push","buildPass","prepass","renderable","getVisibility","_openGLRenderWindow","getFirstAncestorOfType","openGLRenderer","context","getContext","prepareNodes","addMissingNode","getMapper","removeUnusedNodes","traverseOpaqueZBufferPass","renderPass","traverseOpaquePass","getNestedVisibility","getIsOpaque","getSelector","getNestedPickable","apply","children","forEach","child","traverse","traverseTranslucentPass","queryPass","incrementOpaqueActorCount","incrementTranslucentActorCount","opaqueZBufferPass","opaquePass","depthMask","translucentPass","getKeyMatrices","getMTime","keyMatrixTime","copy","keyMatrices","mcwc","getMatrix","transpose","modified","DEFAULT_VALUES","extend","initialValues","Object","assign","obj","mtime","identity","Float64Array","setGet","newInstance"],"sources":["/Users/nicolerussack/CSCI401/CSCI401TissueSimulation/my-version/node_modules/vtk.js/Sources/Rendering/OpenGL/ImageSlice/index.js"],"sourcesContent":["import { mat4 } from 'gl-matrix';\n\nimport * as macro from 'vtk.js/Sources/macros';\nimport vtkViewNode from 'vtk.js/Sources/Rendering/SceneGraph/ViewNode';\n\nimport { registerOverride } from 'vtk.js/Sources/Rendering/OpenGL/ViewNodeFactory';\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLImageSlice methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLImageSlice(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLImageSlice');\n\n  // Builds myself.\n  publicAPI.buildPass = (prepass) => {\n    if (!model.renderable || !model.renderable.getVisibility()) {\n      return;\n    }\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n      model._openGLRenderWindow = publicAPI.getFirstAncestorOfType(\n        'vtkOpenGLRenderWindow'\n      );\n      model.openGLRenderer =\n        publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      model.context = model._openGLRenderWindow.getContext();\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.renderable.getMapper());\n      publicAPI.removeUnusedNodes();\n    }\n  };\n\n  publicAPI.traverseOpaqueZBufferPass = (renderPass) => {\n    publicAPI.traverseOpaquePass(renderPass);\n  };\n\n  // we draw textures, then mapper, then post pass textures\n  publicAPI.traverseOpaquePass = (renderPass) => {\n    if (\n      !model.renderable ||\n      !model.renderable.getNestedVisibility() ||\n      !model.renderable.getIsOpaque() ||\n      (model.openGLRenderer.getSelector() &&\n        !model.renderable.getNestedPickable())\n    ) {\n      return;\n    }\n\n    publicAPI.apply(renderPass, true);\n    model.children.forEach((child) => {\n      child.traverse(renderPass);\n    });\n    publicAPI.apply(renderPass, false);\n  };\n\n  // we draw textures, then mapper, then post pass textures\n  publicAPI.traverseTranslucentPass = (renderPass) => {\n    if (\n      !model.renderable ||\n      !model.renderable.getNestedVisibility() ||\n      model.renderable.getIsOpaque() ||\n      (model.openGLRenderer.getSelector() &&\n        !model.renderable.getNestedPickable())\n    ) {\n      return;\n    }\n\n    publicAPI.apply(renderPass, true);\n    model.children.forEach((child) => {\n      child.traverse(renderPass);\n    });\n    publicAPI.apply(renderPass, false);\n  };\n\n  publicAPI.queryPass = (prepass, renderPass) => {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      }\n      if (model.renderable.getIsOpaque()) {\n        renderPass.incrementOpaqueActorCount();\n      } else {\n        renderPass.incrementTranslucentActorCount();\n      }\n    }\n  };\n\n  publicAPI.opaqueZBufferPass = (prepass, renderPass) =>\n    publicAPI.opaquePass(prepass, renderPass);\n\n  // Renders myself\n  publicAPI.opaquePass = (prepass, renderPass) => {\n    if (prepass) {\n      model.context.depthMask(true);\n    }\n  };\n\n  // Renders myself\n  publicAPI.translucentPass = (prepass, renderPass) => {\n    model.context.depthMask(!prepass);\n  };\n\n  publicAPI.getKeyMatrices = () => {\n    // has the actor changed?\n    if (model.renderable.getMTime() > model.keyMatrixTime.getMTime()) {\n      mat4.copy(model.keyMatrices.mcwc, model.renderable.getMatrix());\n      mat4.transpose(model.keyMatrices.mcwc, model.keyMatrices.mcwc);\n      model.keyMatrixTime.modified();\n    }\n\n    return model.keyMatrices;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null,\n  keyMatrixTime: null,\n  keyMatrices: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n\n  model.keyMatrixTime = {};\n  macro.obj(model.keyMatrixTime, { mtime: 0 });\n  model.keyMatrices = {\n    mcwc: mat4.identity(new Float64Array(16)),\n  };\n\n  // Build VTK API\n  macro.setGet(publicAPI, model, ['context']);\n\n  // Object methods\n  vtkOpenGLImageSlice(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkOpenGLImageSlice');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkImageSlice', newInstance);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}