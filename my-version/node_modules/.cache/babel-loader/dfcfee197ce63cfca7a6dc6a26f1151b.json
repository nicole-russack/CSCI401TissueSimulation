{"ast":null,"code":"import vtk from 'vtk.js/Sources/vtk';\nimport macro from 'vtk.js/Sources/macros';\nimport vtkDataSet from 'vtk.js/Sources/Common/DataModel/DataSet';\nimport vtkPoints from 'vtk.js/Sources/Common/Core/Points'; // ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n// ----------------------------------------------------------------------------\n// vtkPointSet methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPointSet(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPointSet'); // Create empty points\n\n  if (!model.points) {\n    model.points = vtkPoints.newInstance();\n  } else {\n    model.points = vtk(model.points);\n  }\n\n  publicAPI.getNumberOfPoints = () => model.points.getNumberOfPoints();\n\n  publicAPI.getBounds = () => model.points.getBounds();\n\n  publicAPI.computeBounds = () => {\n    publicAPI.getBounds();\n  };\n\n  const superShallowCopy = publicAPI.shallowCopy;\n\n  publicAPI.shallowCopy = function (other) {\n    let debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    superShallowCopy(other, debug);\n    model.points = vtkPoints.newInstance();\n    model.points.shallowCopy(other.getPoints());\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nconst DEFAULT_VALUES = {// points: null,\n}; // ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkDataSet.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['points']); // Object specific methods\n\n  vtkPointSet(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkPointSet'); // ----------------------------------------------------------------------------\n\nexport default {\n  newInstance,\n  extend\n};","map":{"version":3,"names":["vtk","macro","vtkDataSet","vtkPoints","vtkPointSet","publicAPI","model","classHierarchy","push","points","newInstance","getNumberOfPoints","getBounds","computeBounds","superShallowCopy","shallowCopy","other","debug","getPoints","DEFAULT_VALUES","extend","initialValues","Object","assign","setGet"],"sources":["/Users/nicolerussack/CSCI401/CSCI401TissueSimulation/my-version/node_modules/vtk.js/Sources/Common/DataModel/PointSet/index.js"],"sourcesContent":["import vtk from 'vtk.js/Sources/vtk';\nimport macro from 'vtk.js/Sources/macros';\nimport vtkDataSet from 'vtk.js/Sources/Common/DataModel/DataSet';\nimport vtkPoints from 'vtk.js/Sources/Common/Core/Points';\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n// vtkPointSet methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPointSet(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPointSet');\n\n  // Create empty points\n  if (!model.points) {\n    model.points = vtkPoints.newInstance();\n  } else {\n    model.points = vtk(model.points);\n  }\n\n  publicAPI.getNumberOfPoints = () => model.points.getNumberOfPoints();\n\n  publicAPI.getBounds = () => model.points.getBounds();\n\n  publicAPI.computeBounds = () => {\n    publicAPI.getBounds();\n  };\n\n  const superShallowCopy = publicAPI.shallowCopy;\n  publicAPI.shallowCopy = (other, debug = false) => {\n    superShallowCopy(other, debug);\n    model.points = vtkPoints.newInstance();\n    model.points.shallowCopy(other.getPoints());\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // points: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkDataSet.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['points']);\n\n  // Object specific methods\n  vtkPointSet(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkPointSet');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,oBAAhB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AACA,OAAOC,SAAP,MAAsB,mCAAtB,C,CAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA,SAASC,WAAT,CAAqBC,SAArB,EAAgCC,KAAhC,EAAuC;EACrC;EACAA,KAAK,CAACC,cAAN,CAAqBC,IAArB,CAA0B,aAA1B,EAFqC,CAIrC;;EACA,IAAI,CAACF,KAAK,CAACG,MAAX,EAAmB;IACjBH,KAAK,CAACG,MAAN,GAAeN,SAAS,CAACO,WAAV,EAAf;EACD,CAFD,MAEO;IACLJ,KAAK,CAACG,MAAN,GAAeT,GAAG,CAACM,KAAK,CAACG,MAAP,CAAlB;EACD;;EAEDJ,SAAS,CAACM,iBAAV,GAA8B,MAAML,KAAK,CAACG,MAAN,CAAaE,iBAAb,EAApC;;EAEAN,SAAS,CAACO,SAAV,GAAsB,MAAMN,KAAK,CAACG,MAAN,CAAaG,SAAb,EAA5B;;EAEAP,SAAS,CAACQ,aAAV,GAA0B,MAAM;IAC9BR,SAAS,CAACO,SAAV;EACD,CAFD;;EAIA,MAAME,gBAAgB,GAAGT,SAAS,CAACU,WAAnC;;EACAV,SAAS,CAACU,WAAV,GAAwB,UAACC,KAAD,EAA0B;IAAA,IAAlBC,KAAkB,uEAAV,KAAU;IAChDH,gBAAgB,CAACE,KAAD,EAAQC,KAAR,CAAhB;IACAX,KAAK,CAACG,MAAN,GAAeN,SAAS,CAACO,WAAV,EAAf;IACAJ,KAAK,CAACG,MAAN,CAAaM,WAAb,CAAyBC,KAAK,CAACE,SAAN,EAAzB;EACD,CAJD;AAKD,C,CAED;AACA;AACA;;;AAEA,MAAMC,cAAc,GAAG,CACrB;AADqB,CAAvB,C,CAIA;;AAEA,OAAO,SAASC,MAAT,CAAgBf,SAAhB,EAA2BC,KAA3B,EAAsD;EAAA,IAApBe,aAAoB,uEAAJ,EAAI;EAC3DC,MAAM,CAACC,MAAP,CAAcjB,KAAd,EAAqBa,cAArB,EAAqCE,aAArC,EAD2D,CAG3D;;EACAnB,UAAU,CAACkB,MAAX,CAAkBf,SAAlB,EAA6BC,KAA7B,EAAoCe,aAApC;EACApB,KAAK,CAACuB,MAAN,CAAanB,SAAb,EAAwBC,KAAxB,EAA+B,CAAC,QAAD,CAA/B,EAL2D,CAO3D;;EACAF,WAAW,CAACC,SAAD,EAAYC,KAAZ,CAAX;AACD,C,CAED;;AAEA,OAAO,MAAMI,WAAW,GAAGT,KAAK,CAACS,WAAN,CAAkBU,MAAlB,EAA0B,aAA1B,CAApB,C,CAEP;;AAEA,eAAe;EAAEV,WAAF;EAAeU;AAAf,CAAf"},"metadata":{},"sourceType":"module"}