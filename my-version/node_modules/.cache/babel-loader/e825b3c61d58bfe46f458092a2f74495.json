{"ast":null,"code":"import macro from 'vtk.js/Sources/macros';\nimport vtkInteractorStyle from 'vtk.js/Sources/Rendering/Core/InteractorStyle';\nimport vtkInteractorStyleConstants from 'vtk.js/Sources/Rendering/Core/InteractorStyle/Constants';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport { Device, Input } from 'vtk.js/Sources/Rendering/Core/RenderWindowInteractor/Constants';\nconst {\n  States\n} = vtkInteractorStyleConstants;\n/* eslint-disable no-lonely-if */\n// ----------------------------------------------------------------------------\n// vtkInteractorStyleTrackballCamera methods\n// ----------------------------------------------------------------------------\n\nfunction vtkInteractorStyleTrackballCamera(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkInteractorStyleTrackballCamera'); // Public API methods\n\n  publicAPI.handleMouseMove = callData => {\n    const pos = callData.position;\n    const renderer = callData.pokedRenderer;\n\n    switch (model.state) {\n      case States.IS_ROTATE:\n        publicAPI.handleMouseRotate(renderer, pos);\n        publicAPI.invokeInteractionEvent({\n          type: 'InteractionEvent'\n        });\n        break;\n\n      case States.IS_PAN:\n        publicAPI.handleMousePan(renderer, pos);\n        publicAPI.invokeInteractionEvent({\n          type: 'InteractionEvent'\n        });\n        break;\n\n      case States.IS_DOLLY:\n        publicAPI.handleMouseDolly(renderer, pos);\n        publicAPI.invokeInteractionEvent({\n          type: 'InteractionEvent'\n        });\n        break;\n\n      case States.IS_SPIN:\n        publicAPI.handleMouseSpin(renderer, pos);\n        publicAPI.invokeInteractionEvent({\n          type: 'InteractionEvent'\n        });\n        break;\n\n      default:\n        break;\n    }\n\n    model.previousPosition = pos;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.handleButton3D = ed => {\n    if (ed && ed.pressed && ed.device === Device.RightController && (ed.input === Input.Trigger || ed.input === Input.TrackPad)) {\n      publicAPI.startCameraPose();\n      return;\n    }\n\n    if (ed && !ed.pressed && ed.device === Device.RightController && (ed.input === Input.Trigger || ed.input === Input.TrackPad) && model.state === States.IS_CAMERA_POSE) {\n      publicAPI.endCameraPose(); // return;\n    }\n  };\n\n  publicAPI.handleMove3D = ed => {\n    switch (model.state) {\n      case States.IS_CAMERA_POSE:\n        publicAPI.updateCameraPose(ed);\n        break;\n\n      default:\n    }\n  };\n\n  publicAPI.updateCameraPose = ed => {\n    // move the world in the direction of the\n    // controller\n    const camera = ed.pokedRenderer.getActiveCamera();\n    const oldTrans = camera.getPhysicalTranslation(); // look at the y axis to determine how fast / what direction to move\n\n    const speed = 0.5; // ed.gamepad.axes[1];\n    // 0.05 meters / frame movement\n\n    const pscale = speed * 0.05 * camera.getPhysicalScale(); // convert orientation to world coordinate direction\n\n    const dir = camera.physicalOrientationToWorldDirection([ed.orientation.x, ed.orientation.y, ed.orientation.z, ed.orientation.w]);\n    camera.setPhysicalTranslation(oldTrans[0] + dir[0] * pscale, oldTrans[1] + dir[1] * pscale, oldTrans[2] + dir[2] * pscale);\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.handleLeftButtonPress = callData => {\n    const pos = callData.position;\n    model.previousPosition = pos;\n\n    if (callData.shiftKey) {\n      if (callData.controlKey || callData.altKey) {\n        publicAPI.startDolly();\n      } else {\n        publicAPI.startPan();\n      }\n    } else {\n      if (callData.controlKey || callData.altKey) {\n        publicAPI.startSpin();\n      } else {\n        publicAPI.startRotate();\n      }\n    }\n  }; //--------------------------------------------------------------------------\n\n\n  publicAPI.handleLeftButtonRelease = () => {\n    switch (model.state) {\n      case States.IS_DOLLY:\n        publicAPI.endDolly();\n        break;\n\n      case States.IS_PAN:\n        publicAPI.endPan();\n        break;\n\n      case States.IS_SPIN:\n        publicAPI.endSpin();\n        break;\n\n      case States.IS_ROTATE:\n        publicAPI.endRotate();\n        break;\n\n      default:\n        break;\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.handleStartMouseWheel = callData => {\n    publicAPI.startDolly();\n    publicAPI.handleMouseWheel(callData);\n  }; //--------------------------------------------------------------------------\n\n\n  publicAPI.handleEndMouseWheel = () => {\n    publicAPI.endDolly();\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.handleStartPinch = callData => {\n    model.previousScale = callData.scale;\n    publicAPI.startDolly();\n  }; //--------------------------------------------------------------------------\n\n\n  publicAPI.handleEndPinch = () => {\n    publicAPI.endDolly();\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.handleStartRotate = callData => {\n    model.previousRotation = callData.rotation;\n    publicAPI.startRotate();\n  }; //--------------------------------------------------------------------------\n\n\n  publicAPI.handleEndRotate = () => {\n    publicAPI.endRotate();\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.handleStartPan = callData => {\n    model.previousTranslation = callData.translation;\n    publicAPI.startPan();\n  }; //--------------------------------------------------------------------------\n\n\n  publicAPI.handleEndPan = () => {\n    publicAPI.endPan();\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.handlePinch = callData => {\n    publicAPI.dollyByFactor(callData.pokedRenderer, callData.scale / model.previousScale);\n    model.previousScale = callData.scale;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.handlePan = callData => {\n    const camera = callData.pokedRenderer.getActiveCamera(); // Calculate the focal depth since we'll be using it a lot\n\n    let viewFocus = camera.getFocalPoint();\n    viewFocus = publicAPI.computeWorldToDisplay(callData.pokedRenderer, viewFocus[0], viewFocus[1], viewFocus[2]);\n    const focalDepth = viewFocus[2];\n    const trans = callData.translation;\n    const lastTrans = model.previousTranslation;\n    const newPickPoint = publicAPI.computeDisplayToWorld(callData.pokedRenderer, viewFocus[0] + trans[0] - lastTrans[0], viewFocus[1] + trans[1] - lastTrans[1], focalDepth); // Has to recalc old mouse point since the viewport has moved,\n    // so can't move it outside the loop\n\n    const oldPickPoint = publicAPI.computeDisplayToWorld(callData.pokedRenderer, viewFocus[0], viewFocus[1], focalDepth); // Camera motion is reversed\n\n    const motionVector = [];\n    motionVector[0] = oldPickPoint[0] - newPickPoint[0];\n    motionVector[1] = oldPickPoint[1] - newPickPoint[1];\n    motionVector[2] = oldPickPoint[2] - newPickPoint[2];\n    viewFocus = camera.getFocalPoint();\n    const viewPoint = camera.getPosition();\n    camera.setFocalPoint(motionVector[0] + viewFocus[0], motionVector[1] + viewFocus[1], motionVector[2] + viewFocus[2]);\n    camera.setPosition(motionVector[0] + viewPoint[0], motionVector[1] + viewPoint[1], motionVector[2] + viewPoint[2]);\n\n    if (model._interactor.getLightFollowCamera()) {\n      callData.pokedRenderer.updateLightsGeometryToFollowCamera();\n    }\n\n    camera.orthogonalizeViewUp();\n    model.previousTranslation = callData.translation;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.handleRotate = callData => {\n    const camera = callData.pokedRenderer.getActiveCamera();\n    camera.roll(callData.rotation - model.previousRotation);\n    camera.orthogonalizeViewUp();\n    model.previousRotation = callData.rotation;\n  }; //--------------------------------------------------------------------------\n\n\n  publicAPI.handleMouseRotate = (renderer, position) => {\n    if (!model.previousPosition) {\n      return;\n    }\n\n    const rwi = model._interactor;\n    const dx = position.x - model.previousPosition.x;\n    const dy = position.y - model.previousPosition.y;\n    const size = rwi.getView().getViewportSize(renderer);\n    let deltaElevation = -0.1;\n    let deltaAzimuth = -0.1;\n\n    if (size[0] && size[1]) {\n      deltaElevation = -20.0 / size[1];\n      deltaAzimuth = -20.0 / size[0];\n    }\n\n    const rxf = dx * deltaAzimuth * model.motionFactor;\n    const ryf = dy * deltaElevation * model.motionFactor;\n    const camera = renderer.getActiveCamera();\n\n    if (!Number.isNaN(rxf) && !Number.isNaN(ryf)) {\n      camera.azimuth(rxf);\n      camera.elevation(ryf);\n      camera.orthogonalizeViewUp();\n    }\n\n    if (model.autoAdjustCameraClippingRange) {\n      renderer.resetCameraClippingRange();\n    }\n\n    if (rwi.getLightFollowCamera()) {\n      renderer.updateLightsGeometryToFollowCamera();\n    }\n  }; //--------------------------------------------------------------------------\n\n\n  publicAPI.handleMouseSpin = (renderer, position) => {\n    if (!model.previousPosition) {\n      return;\n    }\n\n    const rwi = model._interactor;\n    const camera = renderer.getActiveCamera();\n    const center = rwi.getView().getViewportCenter(renderer);\n    const oldAngle = vtkMath.degreesFromRadians(Math.atan2(model.previousPosition.y - center[1], model.previousPosition.x - center[0]));\n    const newAngle = vtkMath.degreesFromRadians(Math.atan2(position.y - center[1], position.x - center[0])) - oldAngle;\n\n    if (!Number.isNaN(newAngle)) {\n      camera.roll(newAngle);\n      camera.orthogonalizeViewUp();\n    }\n  }; //--------------------------------------------------------------------------\n\n\n  publicAPI.handleMousePan = (renderer, position) => {\n    if (!model.previousPosition) {\n      return;\n    }\n\n    const camera = renderer.getActiveCamera(); // Calculate the focal depth since we'll be using it a lot\n\n    let viewFocus = camera.getFocalPoint();\n    viewFocus = publicAPI.computeWorldToDisplay(renderer, viewFocus[0], viewFocus[1], viewFocus[2]);\n    const focalDepth = viewFocus[2];\n    const newPickPoint = publicAPI.computeDisplayToWorld(renderer, position.x, position.y, focalDepth); // Has to recalc old mouse point since the viewport has moved,\n    // so can't move it outside the loop\n\n    const oldPickPoint = publicAPI.computeDisplayToWorld(renderer, model.previousPosition.x, model.previousPosition.y, focalDepth); // Camera motion is reversed\n\n    const motionVector = [];\n    motionVector[0] = oldPickPoint[0] - newPickPoint[0];\n    motionVector[1] = oldPickPoint[1] - newPickPoint[1];\n    motionVector[2] = oldPickPoint[2] - newPickPoint[2];\n    viewFocus = camera.getFocalPoint();\n    const viewPoint = camera.getPosition();\n    camera.setFocalPoint(motionVector[0] + viewFocus[0], motionVector[1] + viewFocus[1], motionVector[2] + viewFocus[2]);\n    camera.setPosition(motionVector[0] + viewPoint[0], motionVector[1] + viewPoint[1], motionVector[2] + viewPoint[2]);\n\n    if (model._interactor.getLightFollowCamera()) {\n      renderer.updateLightsGeometryToFollowCamera();\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.handleMouseDolly = (renderer, position) => {\n    if (!model.previousPosition) {\n      return;\n    }\n\n    const dy = position.y - model.previousPosition.y;\n    const rwi = model._interactor;\n    const center = rwi.getView().getViewportCenter(renderer);\n    const dyf = model.motionFactor * dy / center[1];\n    publicAPI.dollyByFactor(renderer, 1.1 ** dyf);\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.handleMouseWheel = callData => {\n    const dyf = 1 - callData.spinY / model.zoomFactor;\n    publicAPI.dollyByFactor(callData.pokedRenderer, dyf);\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.dollyByFactor = (renderer, factor) => {\n    if (Number.isNaN(factor)) {\n      return;\n    }\n\n    const camera = renderer.getActiveCamera();\n\n    if (camera.getParallelProjection()) {\n      camera.setParallelScale(camera.getParallelScale() / factor);\n    } else {\n      camera.dolly(factor);\n\n      if (model.autoAdjustCameraClippingRange) {\n        renderer.resetCameraClippingRange();\n      }\n    }\n\n    if (model._interactor.getLightFollowCamera()) {\n      renderer.updateLightsGeometryToFollowCamera();\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nconst DEFAULT_VALUES = {\n  motionFactor: 10.0,\n  zoomFactor: 10.0\n}; // ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkInteractorStyle.extend(publicAPI, model, initialValues); // Create get-set macros\n\n  macro.setGet(publicAPI, model, ['motionFactor', 'zoomFactor']); // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n\n  vtkInteractorStyleTrackballCamera(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkInteractorStyleTrackballCamera'); // ----------------------------------------------------------------------------\n\nexport default {\n  newInstance,\n  extend\n};","map":{"version":3,"names":["macro","vtkInteractorStyle","vtkInteractorStyleConstants","vtkMath","Device","Input","States","vtkInteractorStyleTrackballCamera","publicAPI","model","classHierarchy","push","handleMouseMove","callData","pos","position","renderer","pokedRenderer","state","IS_ROTATE","handleMouseRotate","invokeInteractionEvent","type","IS_PAN","handleMousePan","IS_DOLLY","handleMouseDolly","IS_SPIN","handleMouseSpin","previousPosition","handleButton3D","ed","pressed","device","RightController","input","Trigger","TrackPad","startCameraPose","IS_CAMERA_POSE","endCameraPose","handleMove3D","updateCameraPose","camera","getActiveCamera","oldTrans","getPhysicalTranslation","speed","pscale","getPhysicalScale","dir","physicalOrientationToWorldDirection","orientation","x","y","z","w","setPhysicalTranslation","handleLeftButtonPress","shiftKey","controlKey","altKey","startDolly","startPan","startSpin","startRotate","handleLeftButtonRelease","endDolly","endPan","endSpin","endRotate","handleStartMouseWheel","handleMouseWheel","handleEndMouseWheel","handleStartPinch","previousScale","scale","handleEndPinch","handleStartRotate","previousRotation","rotation","handleEndRotate","handleStartPan","previousTranslation","translation","handleEndPan","handlePinch","dollyByFactor","handlePan","viewFocus","getFocalPoint","computeWorldToDisplay","focalDepth","trans","lastTrans","newPickPoint","computeDisplayToWorld","oldPickPoint","motionVector","viewPoint","getPosition","setFocalPoint","setPosition","_interactor","getLightFollowCamera","updateLightsGeometryToFollowCamera","orthogonalizeViewUp","handleRotate","roll","rwi","dx","dy","size","getView","getViewportSize","deltaElevation","deltaAzimuth","rxf","motionFactor","ryf","Number","isNaN","azimuth","elevation","autoAdjustCameraClippingRange","resetCameraClippingRange","center","getViewportCenter","oldAngle","degreesFromRadians","Math","atan2","newAngle","dyf","spinY","zoomFactor","factor","getParallelProjection","setParallelScale","getParallelScale","dolly","DEFAULT_VALUES","extend","initialValues","Object","assign","setGet","newInstance"],"sources":["/Users/nicolerussack/CSCI401/CSCI401TissueSimulation/my-version/node_modules/vtk.js/Sources/Interaction/Style/InteractorStyleTrackballCamera/index.js"],"sourcesContent":["import macro from 'vtk.js/Sources/macros';\nimport vtkInteractorStyle from 'vtk.js/Sources/Rendering/Core/InteractorStyle';\nimport vtkInteractorStyleConstants from 'vtk.js/Sources/Rendering/Core/InteractorStyle/Constants';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport {\n  Device,\n  Input,\n} from 'vtk.js/Sources/Rendering/Core/RenderWindowInteractor/Constants';\n\nconst { States } = vtkInteractorStyleConstants;\n\n/* eslint-disable no-lonely-if */\n\n// ----------------------------------------------------------------------------\n// vtkInteractorStyleTrackballCamera methods\n// ----------------------------------------------------------------------------\n\nfunction vtkInteractorStyleTrackballCamera(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkInteractorStyleTrackballCamera');\n\n  // Public API methods\n  publicAPI.handleMouseMove = (callData) => {\n    const pos = callData.position;\n    const renderer = callData.pokedRenderer;\n\n    switch (model.state) {\n      case States.IS_ROTATE:\n        publicAPI.handleMouseRotate(renderer, pos);\n        publicAPI.invokeInteractionEvent({ type: 'InteractionEvent' });\n        break;\n\n      case States.IS_PAN:\n        publicAPI.handleMousePan(renderer, pos);\n        publicAPI.invokeInteractionEvent({ type: 'InteractionEvent' });\n        break;\n\n      case States.IS_DOLLY:\n        publicAPI.handleMouseDolly(renderer, pos);\n        publicAPI.invokeInteractionEvent({ type: 'InteractionEvent' });\n        break;\n\n      case States.IS_SPIN:\n        publicAPI.handleMouseSpin(renderer, pos);\n        publicAPI.invokeInteractionEvent({ type: 'InteractionEvent' });\n        break;\n\n      default:\n        break;\n    }\n\n    model.previousPosition = pos;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleButton3D = (ed) => {\n    if (\n      ed &&\n      ed.pressed &&\n      ed.device === Device.RightController &&\n      (ed.input === Input.Trigger || ed.input === Input.TrackPad)\n    ) {\n      publicAPI.startCameraPose();\n      return;\n    }\n    if (\n      ed &&\n      !ed.pressed &&\n      ed.device === Device.RightController &&\n      (ed.input === Input.Trigger || ed.input === Input.TrackPad) &&\n      model.state === States.IS_CAMERA_POSE\n    ) {\n      publicAPI.endCameraPose();\n      // return;\n    }\n  };\n\n  publicAPI.handleMove3D = (ed) => {\n    switch (model.state) {\n      case States.IS_CAMERA_POSE:\n        publicAPI.updateCameraPose(ed);\n        break;\n      default:\n    }\n  };\n\n  publicAPI.updateCameraPose = (ed) => {\n    // move the world in the direction of the\n    // controller\n    const camera = ed.pokedRenderer.getActiveCamera();\n    const oldTrans = camera.getPhysicalTranslation();\n\n    // look at the y axis to determine how fast / what direction to move\n    const speed = 0.5; // ed.gamepad.axes[1];\n\n    // 0.05 meters / frame movement\n    const pscale = speed * 0.05 * camera.getPhysicalScale();\n\n    // convert orientation to world coordinate direction\n    const dir = camera.physicalOrientationToWorldDirection([\n      ed.orientation.x,\n      ed.orientation.y,\n      ed.orientation.z,\n      ed.orientation.w,\n    ]);\n\n    camera.setPhysicalTranslation(\n      oldTrans[0] + dir[0] * pscale,\n      oldTrans[1] + dir[1] * pscale,\n      oldTrans[2] + dir[2] * pscale\n    );\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleLeftButtonPress = (callData) => {\n    const pos = callData.position;\n    model.previousPosition = pos;\n\n    if (callData.shiftKey) {\n      if (callData.controlKey || callData.altKey) {\n        publicAPI.startDolly();\n      } else {\n        publicAPI.startPan();\n      }\n    } else {\n      if (callData.controlKey || callData.altKey) {\n        publicAPI.startSpin();\n      } else {\n        publicAPI.startRotate();\n      }\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.handleLeftButtonRelease = () => {\n    switch (model.state) {\n      case States.IS_DOLLY:\n        publicAPI.endDolly();\n        break;\n      case States.IS_PAN:\n        publicAPI.endPan();\n        break;\n      case States.IS_SPIN:\n        publicAPI.endSpin();\n        break;\n      case States.IS_ROTATE:\n        publicAPI.endRotate();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleStartMouseWheel = (callData) => {\n    publicAPI.startDolly();\n    publicAPI.handleMouseWheel(callData);\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.handleEndMouseWheel = () => {\n    publicAPI.endDolly();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleStartPinch = (callData) => {\n    model.previousScale = callData.scale;\n    publicAPI.startDolly();\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.handleEndPinch = () => {\n    publicAPI.endDolly();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleStartRotate = (callData) => {\n    model.previousRotation = callData.rotation;\n    publicAPI.startRotate();\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.handleEndRotate = () => {\n    publicAPI.endRotate();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleStartPan = (callData) => {\n    model.previousTranslation = callData.translation;\n    publicAPI.startPan();\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.handleEndPan = () => {\n    publicAPI.endPan();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handlePinch = (callData) => {\n    publicAPI.dollyByFactor(\n      callData.pokedRenderer,\n      callData.scale / model.previousScale\n    );\n    model.previousScale = callData.scale;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handlePan = (callData) => {\n    const camera = callData.pokedRenderer.getActiveCamera();\n\n    // Calculate the focal depth since we'll be using it a lot\n    let viewFocus = camera.getFocalPoint();\n\n    viewFocus = publicAPI.computeWorldToDisplay(\n      callData.pokedRenderer,\n      viewFocus[0],\n      viewFocus[1],\n      viewFocus[2]\n    );\n    const focalDepth = viewFocus[2];\n\n    const trans = callData.translation;\n    const lastTrans = model.previousTranslation;\n    const newPickPoint = publicAPI.computeDisplayToWorld(\n      callData.pokedRenderer,\n      viewFocus[0] + trans[0] - lastTrans[0],\n      viewFocus[1] + trans[1] - lastTrans[1],\n      focalDepth\n    );\n\n    // Has to recalc old mouse point since the viewport has moved,\n    // so can't move it outside the loop\n    const oldPickPoint = publicAPI.computeDisplayToWorld(\n      callData.pokedRenderer,\n      viewFocus[0],\n      viewFocus[1],\n      focalDepth\n    );\n\n    // Camera motion is reversed\n    const motionVector = [];\n    motionVector[0] = oldPickPoint[0] - newPickPoint[0];\n    motionVector[1] = oldPickPoint[1] - newPickPoint[1];\n    motionVector[2] = oldPickPoint[2] - newPickPoint[2];\n\n    viewFocus = camera.getFocalPoint();\n    const viewPoint = camera.getPosition();\n    camera.setFocalPoint(\n      motionVector[0] + viewFocus[0],\n      motionVector[1] + viewFocus[1],\n      motionVector[2] + viewFocus[2]\n    );\n\n    camera.setPosition(\n      motionVector[0] + viewPoint[0],\n      motionVector[1] + viewPoint[1],\n      motionVector[2] + viewPoint[2]\n    );\n\n    if (model._interactor.getLightFollowCamera()) {\n      callData.pokedRenderer.updateLightsGeometryToFollowCamera();\n    }\n\n    camera.orthogonalizeViewUp();\n\n    model.previousTranslation = callData.translation;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleRotate = (callData) => {\n    const camera = callData.pokedRenderer.getActiveCamera();\n    camera.roll(callData.rotation - model.previousRotation);\n    camera.orthogonalizeViewUp();\n    model.previousRotation = callData.rotation;\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.handleMouseRotate = (renderer, position) => {\n    if (!model.previousPosition) {\n      return;\n    }\n\n    const rwi = model._interactor;\n\n    const dx = position.x - model.previousPosition.x;\n    const dy = position.y - model.previousPosition.y;\n\n    const size = rwi.getView().getViewportSize(renderer);\n\n    let deltaElevation = -0.1;\n    let deltaAzimuth = -0.1;\n    if (size[0] && size[1]) {\n      deltaElevation = -20.0 / size[1];\n      deltaAzimuth = -20.0 / size[0];\n    }\n\n    const rxf = dx * deltaAzimuth * model.motionFactor;\n    const ryf = dy * deltaElevation * model.motionFactor;\n\n    const camera = renderer.getActiveCamera();\n    if (!Number.isNaN(rxf) && !Number.isNaN(ryf)) {\n      camera.azimuth(rxf);\n      camera.elevation(ryf);\n      camera.orthogonalizeViewUp();\n    }\n\n    if (model.autoAdjustCameraClippingRange) {\n      renderer.resetCameraClippingRange();\n    }\n\n    if (rwi.getLightFollowCamera()) {\n      renderer.updateLightsGeometryToFollowCamera();\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.handleMouseSpin = (renderer, position) => {\n    if (!model.previousPosition) {\n      return;\n    }\n\n    const rwi = model._interactor;\n    const camera = renderer.getActiveCamera();\n    const center = rwi.getView().getViewportCenter(renderer);\n\n    const oldAngle = vtkMath.degreesFromRadians(\n      Math.atan2(\n        model.previousPosition.y - center[1],\n        model.previousPosition.x - center[0]\n      )\n    );\n    const newAngle =\n      vtkMath.degreesFromRadians(\n        Math.atan2(position.y - center[1], position.x - center[0])\n      ) - oldAngle;\n\n    if (!Number.isNaN(newAngle)) {\n      camera.roll(newAngle);\n      camera.orthogonalizeViewUp();\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.handleMousePan = (renderer, position) => {\n    if (!model.previousPosition) {\n      return;\n    }\n\n    const camera = renderer.getActiveCamera();\n\n    // Calculate the focal depth since we'll be using it a lot\n    let viewFocus = camera.getFocalPoint();\n    viewFocus = publicAPI.computeWorldToDisplay(\n      renderer,\n      viewFocus[0],\n      viewFocus[1],\n      viewFocus[2]\n    );\n    const focalDepth = viewFocus[2];\n\n    const newPickPoint = publicAPI.computeDisplayToWorld(\n      renderer,\n      position.x,\n      position.y,\n      focalDepth\n    );\n\n    // Has to recalc old mouse point since the viewport has moved,\n    // so can't move it outside the loop\n    const oldPickPoint = publicAPI.computeDisplayToWorld(\n      renderer,\n      model.previousPosition.x,\n      model.previousPosition.y,\n      focalDepth\n    );\n\n    // Camera motion is reversed\n    const motionVector = [];\n    motionVector[0] = oldPickPoint[0] - newPickPoint[0];\n    motionVector[1] = oldPickPoint[1] - newPickPoint[1];\n    motionVector[2] = oldPickPoint[2] - newPickPoint[2];\n\n    viewFocus = camera.getFocalPoint();\n    const viewPoint = camera.getPosition();\n    camera.setFocalPoint(\n      motionVector[0] + viewFocus[0],\n      motionVector[1] + viewFocus[1],\n      motionVector[2] + viewFocus[2]\n    );\n\n    camera.setPosition(\n      motionVector[0] + viewPoint[0],\n      motionVector[1] + viewPoint[1],\n      motionVector[2] + viewPoint[2]\n    );\n\n    if (model._interactor.getLightFollowCamera()) {\n      renderer.updateLightsGeometryToFollowCamera();\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleMouseDolly = (renderer, position) => {\n    if (!model.previousPosition) {\n      return;\n    }\n\n    const dy = position.y - model.previousPosition.y;\n    const rwi = model._interactor;\n    const center = rwi.getView().getViewportCenter(renderer);\n    const dyf = (model.motionFactor * dy) / center[1];\n\n    publicAPI.dollyByFactor(renderer, 1.1 ** dyf);\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleMouseWheel = (callData) => {\n    const dyf = 1 - callData.spinY / model.zoomFactor;\n    publicAPI.dollyByFactor(callData.pokedRenderer, dyf);\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.dollyByFactor = (renderer, factor) => {\n    if (Number.isNaN(factor)) {\n      return;\n    }\n\n    const camera = renderer.getActiveCamera();\n    if (camera.getParallelProjection()) {\n      camera.setParallelScale(camera.getParallelScale() / factor);\n    } else {\n      camera.dolly(factor);\n      if (model.autoAdjustCameraClippingRange) {\n        renderer.resetCameraClippingRange();\n      }\n    }\n\n    if (model._interactor.getLightFollowCamera()) {\n      renderer.updateLightsGeometryToFollowCamera();\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  motionFactor: 10.0,\n  zoomFactor: 10.0,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkInteractorStyle.extend(publicAPI, model, initialValues);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['motionFactor', 'zoomFactor']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n\n  // Object specific methods\n  vtkInteractorStyleTrackballCamera(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(\n  extend,\n  'vtkInteractorStyleTrackballCamera'\n);\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}