{"ast":null,"code":"import macro from 'vtk.js/Sources/macros';\nimport vtkWebGPUShaderCache from 'vtk.js/Sources/Rendering/WebGPU/ShaderCache'; // ----------------------------------------------------------------------------\n// vtkWebGPUShaderDescription methods\n// ----------------------------------------------------------------------------\n// shader description\n\nfunction vtkWebGPUShaderDescription(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUShaderDescription');\n\n  publicAPI.hasOutput = name => model.outputNames.includes(name);\n\n  publicAPI.addOutput = function (type, name) {\n    let interpolation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n    model.outputTypes.push(type);\n    model.outputNames.push(name);\n    model.outputInterpolations.push(interpolation);\n  };\n\n  publicAPI.addBuiltinOutput = (type, name) => {\n    model.builtinOutputTypes.push(type);\n    model.builtinOutputNames.push(name);\n  };\n\n  publicAPI.addBuiltinInput = (type, name) => {\n    model.builtinInputTypes.push(type);\n    model.builtinInputNames.push(name);\n  }; // perform shader replacements for the input and outputs\n  // of this shader. That includes vertex inputs if specified\n\n\n  publicAPI.replaceShaderCode = (priorStage, vertexInput) => {\n    const inputImpl = [];\n    let iodec = [];\n\n    if (vertexInput) {\n      inputImpl.push(vertexInput.getShaderCode());\n    }\n\n    if (priorStage || model.builtinInputNames.length) {\n      const inputStruct = [];\n      inputStruct.push(`struct ${model.type}Input\\n{`);\n\n      if (priorStage) {\n        const inputNames = priorStage.getOutputNamesByReference();\n        const inputTypes = priorStage.getOutputTypesByReference();\n        const inputInterpolations = priorStage.getOutputInterpolationsByReference();\n\n        for (let i = 0; i < inputNames.length; i++) {\n          if (inputInterpolations[i] !== undefined) {\n            inputStruct.push(`  @location(${i}) @interpolate(${inputInterpolations[i]}) ${inputNames[i]} : ${inputTypes[i]},`);\n          } else {\n            inputStruct.push(`  @location(${i}) ${inputNames[i]} : ${inputTypes[i]},`);\n          }\n        }\n      }\n\n      for (let i = 0; i < model.builtinInputNames.length; i++) {\n        inputStruct.push(`  ${model.builtinInputNames[i]} : ${model.builtinInputTypes[i]},`);\n      }\n\n      if (inputStruct.length > 1) {\n        inputStruct.push('};');\n        iodec = inputStruct;\n        inputImpl[inputImpl.length - 1] += ',';\n        inputImpl.push(`input: ${model.type}Input`);\n      }\n    }\n\n    if (inputImpl.length) {\n      model.code = vtkWebGPUShaderCache.substitute(model.code, '//VTK::IOStructs::Input', inputImpl).result;\n    }\n\n    if (model.outputNames.length + model.builtinOutputNames.length) {\n      const outputStruct = [`struct ${model.type}Output\\n{`];\n\n      for (let i = 0; i < model.outputNames.length; i++) {\n        if (model.outputInterpolations[i] !== undefined) {\n          outputStruct.push(`  @location(${i}) @interpolate(${model.outputInterpolations[i]}) ${model.outputNames[i]} : ${model.outputTypes[i]},`);\n        } else {\n          outputStruct.push(`  @location(${i}) ${model.outputNames[i]} : ${model.outputTypes[i]},`);\n        }\n      }\n\n      for (let i = 0; i < model.builtinOutputNames.length; i++) {\n        outputStruct.push(`  ${model.builtinOutputNames[i]} : ${model.builtinOutputTypes[i]},`);\n      }\n\n      outputStruct.push('};');\n      iodec = iodec.concat(outputStruct);\n      model.code = vtkWebGPUShaderCache.substitute(model.code, '//VTK::IOStructs::Output', [`-> ${model.type}Output`]).result;\n    }\n\n    model.code = vtkWebGPUShaderCache.substitute(model.code, '//VTK::IOStructs::Dec', iodec).result;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nconst DEFAULT_VALUES = {\n  type: null,\n  // 'vertex' or 'fragment'\n  hash: null,\n  code: null,\n  outputNames: null,\n  outputTypes: null\n}; // ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  model.outputNames = [];\n  model.outputTypes = [];\n  model.outputInterpolations = [];\n  model.builtinOutputNames = [];\n  model.builtinOutputTypes = [];\n  model.builtinInputNames = [];\n  model.builtinInputTypes = []; // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['type', 'hash', 'code']);\n  macro.getArray(publicAPI, model, ['outputTypes', 'outputNames', 'outputInterpolations']); // Object methods\n\n  vtkWebGPUShaderDescription(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkWebGPUShaderDescription'); // ----------------------------------------------------------------------------\n\nexport default {\n  newInstance,\n  extend\n};","map":{"version":3,"names":["macro","vtkWebGPUShaderCache","vtkWebGPUShaderDescription","publicAPI","model","classHierarchy","push","hasOutput","name","outputNames","includes","addOutput","type","interpolation","undefined","outputTypes","outputInterpolations","addBuiltinOutput","builtinOutputTypes","builtinOutputNames","addBuiltinInput","builtinInputTypes","builtinInputNames","replaceShaderCode","priorStage","vertexInput","inputImpl","iodec","getShaderCode","length","inputStruct","inputNames","getOutputNamesByReference","inputTypes","getOutputTypesByReference","inputInterpolations","getOutputInterpolationsByReference","i","code","substitute","result","outputStruct","concat","DEFAULT_VALUES","hash","extend","initialValues","Object","assign","obj","setGet","getArray","newInstance"],"sources":["/Users/nicolerussack/CSCI401/CSCI401TissueSimulation/my-version/node_modules/vtk.js/Sources/Rendering/WebGPU/ShaderDescription/index.js"],"sourcesContent":["import macro from 'vtk.js/Sources/macros';\nimport vtkWebGPUShaderCache from 'vtk.js/Sources/Rendering/WebGPU/ShaderCache';\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUShaderDescription methods\n// ----------------------------------------------------------------------------\n\n// shader description\n\nfunction vtkWebGPUShaderDescription(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUShaderDescription');\n\n  publicAPI.hasOutput = (name) => model.outputNames.includes(name);\n\n  publicAPI.addOutput = (type, name, interpolation = undefined) => {\n    model.outputTypes.push(type);\n    model.outputNames.push(name);\n    model.outputInterpolations.push(interpolation);\n  };\n\n  publicAPI.addBuiltinOutput = (type, name) => {\n    model.builtinOutputTypes.push(type);\n    model.builtinOutputNames.push(name);\n  };\n\n  publicAPI.addBuiltinInput = (type, name) => {\n    model.builtinInputTypes.push(type);\n    model.builtinInputNames.push(name);\n  };\n\n  // perform shader replacements for the input and outputs\n  // of this shader. That includes vertex inputs if specified\n  publicAPI.replaceShaderCode = (priorStage, vertexInput) => {\n    const inputImpl = [];\n    let iodec = [];\n    if (vertexInput) {\n      inputImpl.push(vertexInput.getShaderCode());\n    }\n    if (priorStage || model.builtinInputNames.length) {\n      const inputStruct = [];\n      inputStruct.push(`struct ${model.type}Input\\n{`);\n      if (priorStage) {\n        const inputNames = priorStage.getOutputNamesByReference();\n        const inputTypes = priorStage.getOutputTypesByReference();\n        const inputInterpolations =\n          priorStage.getOutputInterpolationsByReference();\n        for (let i = 0; i < inputNames.length; i++) {\n          if (inputInterpolations[i] !== undefined) {\n            inputStruct.push(\n              `  @location(${i}) @interpolate(${inputInterpolations[i]}) ${inputNames[i]} : ${inputTypes[i]},`\n            );\n          } else {\n            inputStruct.push(\n              `  @location(${i}) ${inputNames[i]} : ${inputTypes[i]},`\n            );\n          }\n        }\n      }\n      for (let i = 0; i < model.builtinInputNames.length; i++) {\n        inputStruct.push(\n          `  ${model.builtinInputNames[i]} : ${model.builtinInputTypes[i]},`\n        );\n      }\n      if (inputStruct.length > 1) {\n        inputStruct.push('};');\n        iodec = inputStruct;\n        inputImpl[inputImpl.length - 1] += ',';\n        inputImpl.push(`input: ${model.type}Input`);\n      }\n    }\n    if (inputImpl.length) {\n      model.code = vtkWebGPUShaderCache.substitute(\n        model.code,\n        '//VTK::IOStructs::Input',\n        inputImpl\n      ).result;\n    }\n\n    if (model.outputNames.length + model.builtinOutputNames.length) {\n      const outputStruct = [`struct ${model.type}Output\\n{`];\n      for (let i = 0; i < model.outputNames.length; i++) {\n        if (model.outputInterpolations[i] !== undefined) {\n          outputStruct.push(\n            `  @location(${i}) @interpolate(${model.outputInterpolations[i]}) ${model.outputNames[i]} : ${model.outputTypes[i]},`\n          );\n        } else {\n          outputStruct.push(\n            `  @location(${i}) ${model.outputNames[i]} : ${model.outputTypes[i]},`\n          );\n        }\n      }\n      for (let i = 0; i < model.builtinOutputNames.length; i++) {\n        outputStruct.push(\n          `  ${model.builtinOutputNames[i]} : ${model.builtinOutputTypes[i]},`\n        );\n      }\n      outputStruct.push('};');\n      iodec = iodec.concat(outputStruct);\n      model.code = vtkWebGPUShaderCache.substitute(\n        model.code,\n        '//VTK::IOStructs::Output',\n        [`-> ${model.type}Output`]\n      ).result;\n    }\n\n    model.code = vtkWebGPUShaderCache.substitute(\n      model.code,\n      '//VTK::IOStructs::Dec',\n      iodec\n    ).result;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  type: null, // 'vertex' or 'fragment'\n  hash: null,\n  code: null,\n  outputNames: null,\n  outputTypes: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  model.outputNames = [];\n  model.outputTypes = [];\n  model.outputInterpolations = [];\n  model.builtinOutputNames = [];\n  model.builtinOutputTypes = [];\n  model.builtinInputNames = [];\n  model.builtinInputTypes = [];\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['type', 'hash', 'code']);\n  macro.getArray(publicAPI, model, [\n    'outputTypes',\n    'outputNames',\n    'outputInterpolations',\n  ]);\n\n  // Object methods\n  vtkWebGPUShaderDescription(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(\n  extend,\n  'vtkWebGPUShaderDescription'\n);\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}