{"ast":null,"code":"/**\n * Converts a binary buffer in an ArrayBuffer to a string.\n *\n * Note this does not take encoding into consideration, so don't\n * expect proper Unicode or any other encoding.\n */\nfunction arrayBufferToString(arrayBuffer) {\n  const decoder = new TextDecoder('latin1');\n  return decoder.decode(arrayBuffer);\n}\n/**\n * Extracts binary data out of a file ArrayBuffer given a prefix/suffix.\n */\n\n\nfunction extractBinary(arrayBuffer, prefixRegex) {\n  let suffixRegex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  const str = arrayBufferToString(arrayBuffer);\n  const prefixMatch = prefixRegex.exec(str);\n\n  if (!prefixMatch) {\n    return {\n      text: str\n    };\n  }\n\n  const dataStartIndex = prefixMatch.index + prefixMatch[0].length;\n  const strFirstHalf = str.substring(0, dataStartIndex);\n  let retVal = null;\n  const suffixMatch = suffixRegex ? suffixRegex.exec(str) : null;\n\n  if (suffixMatch) {\n    const strSecondHalf = str.substr(suffixMatch.index);\n    retVal = {\n      text: strFirstHalf + strSecondHalf,\n      binaryBuffer: arrayBuffer.slice(dataStartIndex, suffixMatch.index)\n    };\n  } else {\n    // no suffix, so just take all the data starting from dataStartIndex\n    retVal = {\n      text: strFirstHalf,\n      binaryBuffer: arrayBuffer.slice(dataStartIndex)\n    };\n  }\n\n  return retVal;\n}\n\nexport default {\n  arrayBufferToString,\n  extractBinary\n};","map":{"version":3,"names":["arrayBufferToString","arrayBuffer","decoder","TextDecoder","decode","extractBinary","prefixRegex","suffixRegex","str","prefixMatch","exec","text","dataStartIndex","index","length","strFirstHalf","substring","retVal","suffixMatch","strSecondHalf","substr","binaryBuffer","slice"],"sources":["/Users/nicolerussack/CSCI401/CSCI401TissueSimulation/my-version/node_modules/vtk.js/Sources/IO/Core/BinaryHelper/index.js"],"sourcesContent":["/**\n * Converts a binary buffer in an ArrayBuffer to a string.\n *\n * Note this does not take encoding into consideration, so don't\n * expect proper Unicode or any other encoding.\n */\nfunction arrayBufferToString(arrayBuffer) {\n  const decoder = new TextDecoder('latin1');\n  return decoder.decode(arrayBuffer);\n}\n\n/**\n * Extracts binary data out of a file ArrayBuffer given a prefix/suffix.\n */\nfunction extractBinary(arrayBuffer, prefixRegex, suffixRegex = null) {\n  const str = arrayBufferToString(arrayBuffer);\n\n  const prefixMatch = prefixRegex.exec(str);\n  if (!prefixMatch) {\n    return { text: str };\n  }\n\n  const dataStartIndex = prefixMatch.index + prefixMatch[0].length;\n  const strFirstHalf = str.substring(0, dataStartIndex);\n  let retVal = null;\n\n  const suffixMatch = suffixRegex ? suffixRegex.exec(str) : null;\n  if (suffixMatch) {\n    const strSecondHalf = str.substr(suffixMatch.index);\n    retVal = {\n      text: strFirstHalf + strSecondHalf,\n      binaryBuffer: arrayBuffer.slice(dataStartIndex, suffixMatch.index),\n    };\n  } else {\n    // no suffix, so just take all the data starting from dataStartIndex\n    retVal = {\n      text: strFirstHalf,\n      binaryBuffer: arrayBuffer.slice(dataStartIndex),\n    };\n  }\n\n  return retVal;\n}\n\nexport default {\n  arrayBufferToString,\n  extractBinary,\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,mBAAT,CAA6BC,WAA7B,EAA0C;EACxC,MAAMC,OAAO,GAAG,IAAIC,WAAJ,CAAgB,QAAhB,CAAhB;EACA,OAAOD,OAAO,CAACE,MAAR,CAAeH,WAAf,CAAP;AACD;AAED;AACA;AACA;;;AACA,SAASI,aAAT,CAAuBJ,WAAvB,EAAoCK,WAApC,EAAqE;EAAA,IAApBC,WAAoB,uEAAN,IAAM;EACnE,MAAMC,GAAG,GAAGR,mBAAmB,CAACC,WAAD,CAA/B;EAEA,MAAMQ,WAAW,GAAGH,WAAW,CAACI,IAAZ,CAAiBF,GAAjB,CAApB;;EACA,IAAI,CAACC,WAAL,EAAkB;IAChB,OAAO;MAAEE,IAAI,EAAEH;IAAR,CAAP;EACD;;EAED,MAAMI,cAAc,GAAGH,WAAW,CAACI,KAAZ,GAAoBJ,WAAW,CAAC,CAAD,CAAX,CAAeK,MAA1D;EACA,MAAMC,YAAY,GAAGP,GAAG,CAACQ,SAAJ,CAAc,CAAd,EAAiBJ,cAAjB,CAArB;EACA,IAAIK,MAAM,GAAG,IAAb;EAEA,MAAMC,WAAW,GAAGX,WAAW,GAAGA,WAAW,CAACG,IAAZ,CAAiBF,GAAjB,CAAH,GAA2B,IAA1D;;EACA,IAAIU,WAAJ,EAAiB;IACf,MAAMC,aAAa,GAAGX,GAAG,CAACY,MAAJ,CAAWF,WAAW,CAACL,KAAvB,CAAtB;IACAI,MAAM,GAAG;MACPN,IAAI,EAAEI,YAAY,GAAGI,aADd;MAEPE,YAAY,EAAEpB,WAAW,CAACqB,KAAZ,CAAkBV,cAAlB,EAAkCM,WAAW,CAACL,KAA9C;IAFP,CAAT;EAID,CAND,MAMO;IACL;IACAI,MAAM,GAAG;MACPN,IAAI,EAAEI,YADC;MAEPM,YAAY,EAAEpB,WAAW,CAACqB,KAAZ,CAAkBV,cAAlB;IAFP,CAAT;EAID;;EAED,OAAOK,MAAP;AACD;;AAED,eAAe;EACbjB,mBADa;EAEbK;AAFa,CAAf"},"metadata":{},"sourceType":"module"}