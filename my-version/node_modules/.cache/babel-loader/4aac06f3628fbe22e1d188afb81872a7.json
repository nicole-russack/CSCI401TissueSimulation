{"ast":null,"code":"import macro from 'vtk.js/Sources/macros';\nimport Constants from 'vtk.js/Sources/Rendering/WebGPU/BufferManager/Constants'; // methods we forward to the handle\n\nconst forwarded = ['getMappedRange', 'mapAsync', 'unmap'];\n\nfunction bufferSubData(device, destBuffer, destOffset, srcArrayBuffer) {\n  const byteCount = srcArrayBuffer.byteLength;\n  const srcBuffer = device.createBuffer({\n    size: byteCount,\n\n    /* eslint-disable no-undef */\n    usage: GPUBufferUsage.COPY_SRC,\n\n    /* eslint-enable no-undef */\n    mappedAtCreation: true\n  });\n  const arrayBuffer = srcBuffer.getMappedRange(0, byteCount);\n  new Uint8Array(arrayBuffer).set(new Uint8Array(srcArrayBuffer)); // memcpy\n\n  srcBuffer.unmap();\n  const encoder = device.createCommandEncoder();\n  encoder.copyBufferToBuffer(srcBuffer, 0, destBuffer, destOffset, byteCount);\n  const commandBuffer = encoder.finish();\n  const queue = device.queue;\n  queue.submit([commandBuffer]);\n  srcBuffer.destroy();\n} // ----------------------------------------------------------------------------\n// vtkWebGPUBufferManager methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkWebGPUBuffer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUBuffer');\n\n  publicAPI.create = (sizeInBytes, usage) => {\n    model.handle = model.device.getHandle().createBuffer({\n      size: sizeInBytes,\n      usage,\n      label: model.label\n    });\n    model.sizeInBytes = sizeInBytes;\n    model.usage = usage;\n  };\n\n  publicAPI.write = data => {\n    bufferSubData(model.device.getHandle(), model.handle, 0, data.buffer);\n  };\n\n  publicAPI.createAndWrite = (data, usage) => {\n    model.handle = model.device.getHandle().createBuffer({\n      size: data.byteLength,\n      usage,\n      mappedAtCreation: true,\n      label: model.label\n    });\n    model.sizeInBytes = data.byteLength;\n    model.usage = usage;\n    new Uint8Array(model.handle.getMappedRange()).set(new Uint8Array(data.buffer)); // memcpy\n\n    model.handle.unmap();\n  }; // simple forwarders\n\n\n  for (let i = 0; i < forwarded.length; i++) {\n    publicAPI[forwarded[i]] = function () {\n      return model.handle[forwarded[i]](...arguments);\n    };\n  }\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nconst DEFAULT_VALUES = {\n  device: null,\n  handle: null,\n  sizeInBytes: 0,\n  strideInBytes: 0,\n  arrayInformation: null,\n  usage: null,\n  label: null,\n  sourceTime: null\n}; // ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['handle', 'sizeInBytes', 'usage']);\n  macro.setGet(publicAPI, model, ['strideInBytes', 'device', 'arrayInformation', 'label', 'sourceTime']);\n  vtkWebGPUBuffer(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend); // ----------------------------------------------------------------------------\n\nexport default {\n  newInstance,\n  extend,\n  ...Constants\n};","map":{"version":3,"names":["macro","Constants","forwarded","bufferSubData","device","destBuffer","destOffset","srcArrayBuffer","byteCount","byteLength","srcBuffer","createBuffer","size","usage","GPUBufferUsage","COPY_SRC","mappedAtCreation","arrayBuffer","getMappedRange","Uint8Array","set","unmap","encoder","createCommandEncoder","copyBufferToBuffer","commandBuffer","finish","queue","submit","destroy","vtkWebGPUBuffer","publicAPI","model","classHierarchy","push","create","sizeInBytes","handle","getHandle","label","write","data","buffer","createAndWrite","i","length","DEFAULT_VALUES","strideInBytes","arrayInformation","sourceTime","extend","initialValues","Object","assign","obj","get","setGet","newInstance"],"sources":["/Users/nicolerussack/CSCI401/CSCI401TissueSimulation/my-version/node_modules/vtk.js/Sources/Rendering/WebGPU/Buffer/index.js"],"sourcesContent":["import macro from 'vtk.js/Sources/macros';\nimport Constants from 'vtk.js/Sources/Rendering/WebGPU/BufferManager/Constants';\n\n// methods we forward to the handle\nconst forwarded = ['getMappedRange', 'mapAsync', 'unmap'];\n\nfunction bufferSubData(device, destBuffer, destOffset, srcArrayBuffer) {\n  const byteCount = srcArrayBuffer.byteLength;\n  const srcBuffer = device.createBuffer({\n    size: byteCount,\n    /* eslint-disable no-undef */\n    usage: GPUBufferUsage.COPY_SRC,\n    /* eslint-enable no-undef */\n    mappedAtCreation: true,\n  });\n  const arrayBuffer = srcBuffer.getMappedRange(0, byteCount);\n  new Uint8Array(arrayBuffer).set(new Uint8Array(srcArrayBuffer)); // memcpy\n  srcBuffer.unmap();\n\n  const encoder = device.createCommandEncoder();\n  encoder.copyBufferToBuffer(srcBuffer, 0, destBuffer, destOffset, byteCount);\n  const commandBuffer = encoder.finish();\n  const queue = device.queue;\n  queue.submit([commandBuffer]);\n\n  srcBuffer.destroy();\n}\n// ----------------------------------------------------------------------------\n// vtkWebGPUBufferManager methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUBuffer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUBuffer');\n\n  publicAPI.create = (sizeInBytes, usage) => {\n    model.handle = model.device.getHandle().createBuffer({\n      size: sizeInBytes,\n      usage,\n      label: model.label,\n    });\n    model.sizeInBytes = sizeInBytes;\n    model.usage = usage;\n  };\n\n  publicAPI.write = (data) => {\n    bufferSubData(model.device.getHandle(), model.handle, 0, data.buffer);\n  };\n\n  publicAPI.createAndWrite = (data, usage) => {\n    model.handle = model.device.getHandle().createBuffer({\n      size: data.byteLength,\n      usage,\n      mappedAtCreation: true,\n      label: model.label,\n    });\n    model.sizeInBytes = data.byteLength;\n    model.usage = usage;\n    new Uint8Array(model.handle.getMappedRange()).set(\n      new Uint8Array(data.buffer)\n    ); // memcpy\n    model.handle.unmap();\n  };\n\n  // simple forwarders\n  for (let i = 0; i < forwarded.length; i++) {\n    publicAPI[forwarded[i]] = (...args) => model.handle[forwarded[i]](...args);\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  device: null,\n  handle: null,\n  sizeInBytes: 0,\n  strideInBytes: 0,\n  arrayInformation: null,\n  usage: null,\n  label: null,\n  sourceTime: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n\n  macro.get(publicAPI, model, ['handle', 'sizeInBytes', 'usage']);\n  macro.setGet(publicAPI, model, [\n    'strideInBytes',\n    'device',\n    'arrayInformation',\n    'label',\n    'sourceTime',\n  ]);\n\n  vtkWebGPUBuffer(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend, ...Constants };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}