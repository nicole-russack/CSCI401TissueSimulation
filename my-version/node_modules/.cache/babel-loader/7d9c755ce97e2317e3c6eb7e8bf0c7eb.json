{"ast":null,"code":"import globalThisShim from 'globalthis';\nexport const vtkGlobal = globalThisShim(); // returns native globalThis if compliant\n\nconst factoryMapping = {\n  vtkObject: () => null\n};\nexport default function vtk(obj) {\n  if (obj === null || obj === undefined) {\n    return obj;\n  }\n\n  if (obj.isA) {\n    return obj;\n  }\n\n  if (!obj.vtkClass) {\n    if (vtkGlobal.console && vtkGlobal.console.error) {\n      vtkGlobal.console.error('Invalid VTK object');\n    }\n\n    return null;\n  }\n\n  const constructor = factoryMapping[obj.vtkClass];\n\n  if (!constructor) {\n    if (vtkGlobal.console && vtkGlobal.console.error) {\n      vtkGlobal.console.error(`No vtk class found for Object of type ${obj.vtkClass}`);\n    }\n\n    return null;\n  } // Shallow copy object\n\n\n  const model = { ...obj\n  }; // Convert into vtkObject any nested key\n\n  Object.keys(model).forEach(keyName => {\n    if (model[keyName] && typeof model[keyName] === 'object' && model[keyName].vtkClass) {\n      model[keyName] = vtk(model[keyName]);\n    }\n  }); // Return the root\n\n  const newInst = constructor(model);\n\n  if (newInst && newInst.modified) {\n    newInst.modified();\n  }\n\n  return newInst;\n}\n\nfunction register(vtkClassName, constructor) {\n  factoryMapping[vtkClassName] = constructor;\n} // Nest register method under the vtk function\n\n\nvtk.register = register;","map":{"version":3,"names":["globalThisShim","vtkGlobal","factoryMapping","vtkObject","vtk","obj","undefined","isA","vtkClass","console","error","constructor","model","Object","keys","forEach","keyName","newInst","modified","register","vtkClassName"],"sources":["/Users/nicolerussack/CSCI401/CSCI401TissueSimulation/my-version/node_modules/vtk.js/Sources/vtk.js"],"sourcesContent":["import globalThisShim from 'globalthis';\n\nexport const vtkGlobal = globalThisShim(); // returns native globalThis if compliant\n\nconst factoryMapping = {\n  vtkObject: () => null,\n};\n\nexport default function vtk(obj) {\n  if (obj === null || obj === undefined) {\n    return obj;\n  }\n  if (obj.isA) {\n    return obj;\n  }\n  if (!obj.vtkClass) {\n    if (vtkGlobal.console && vtkGlobal.console.error) {\n      vtkGlobal.console.error('Invalid VTK object');\n    }\n    return null;\n  }\n  const constructor = factoryMapping[obj.vtkClass];\n  if (!constructor) {\n    if (vtkGlobal.console && vtkGlobal.console.error) {\n      vtkGlobal.console.error(\n        `No vtk class found for Object of type ${obj.vtkClass}`\n      );\n    }\n    return null;\n  }\n\n  // Shallow copy object\n  const model = { ...obj };\n\n  // Convert into vtkObject any nested key\n  Object.keys(model).forEach((keyName) => {\n    if (\n      model[keyName] &&\n      typeof model[keyName] === 'object' &&\n      model[keyName].vtkClass\n    ) {\n      model[keyName] = vtk(model[keyName]);\n    }\n  });\n\n  // Return the root\n  const newInst = constructor(model);\n  if (newInst && newInst.modified) {\n    newInst.modified();\n  }\n  return newInst;\n}\n\nfunction register(vtkClassName, constructor) {\n  factoryMapping[vtkClassName] = constructor;\n}\n\n// Nest register method under the vtk function\nvtk.register = register;\n"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,YAA3B;AAEA,OAAO,MAAMC,SAAS,GAAGD,cAAc,EAAhC,C,CAAoC;;AAE3C,MAAME,cAAc,GAAG;EACrBC,SAAS,EAAE,MAAM;AADI,CAAvB;AAIA,eAAe,SAASC,GAAT,CAAaC,GAAb,EAAkB;EAC/B,IAAIA,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKC,SAA5B,EAAuC;IACrC,OAAOD,GAAP;EACD;;EACD,IAAIA,GAAG,CAACE,GAAR,EAAa;IACX,OAAOF,GAAP;EACD;;EACD,IAAI,CAACA,GAAG,CAACG,QAAT,EAAmB;IACjB,IAAIP,SAAS,CAACQ,OAAV,IAAqBR,SAAS,CAACQ,OAAV,CAAkBC,KAA3C,EAAkD;MAChDT,SAAS,CAACQ,OAAV,CAAkBC,KAAlB,CAAwB,oBAAxB;IACD;;IACD,OAAO,IAAP;EACD;;EACD,MAAMC,WAAW,GAAGT,cAAc,CAACG,GAAG,CAACG,QAAL,CAAlC;;EACA,IAAI,CAACG,WAAL,EAAkB;IAChB,IAAIV,SAAS,CAACQ,OAAV,IAAqBR,SAAS,CAACQ,OAAV,CAAkBC,KAA3C,EAAkD;MAChDT,SAAS,CAACQ,OAAV,CAAkBC,KAAlB,CACG,yCAAwCL,GAAG,CAACG,QAAS,EADxD;IAGD;;IACD,OAAO,IAAP;EACD,CArB8B,CAuB/B;;;EACA,MAAMI,KAAK,GAAG,EAAE,GAAGP;EAAL,CAAd,CAxB+B,CA0B/B;;EACAQ,MAAM,CAACC,IAAP,CAAYF,KAAZ,EAAmBG,OAAnB,CAA4BC,OAAD,IAAa;IACtC,IACEJ,KAAK,CAACI,OAAD,CAAL,IACA,OAAOJ,KAAK,CAACI,OAAD,CAAZ,KAA0B,QAD1B,IAEAJ,KAAK,CAACI,OAAD,CAAL,CAAeR,QAHjB,EAIE;MACAI,KAAK,CAACI,OAAD,CAAL,GAAiBZ,GAAG,CAACQ,KAAK,CAACI,OAAD,CAAN,CAApB;IACD;EACF,CARD,EA3B+B,CAqC/B;;EACA,MAAMC,OAAO,GAAGN,WAAW,CAACC,KAAD,CAA3B;;EACA,IAAIK,OAAO,IAAIA,OAAO,CAACC,QAAvB,EAAiC;IAC/BD,OAAO,CAACC,QAAR;EACD;;EACD,OAAOD,OAAP;AACD;;AAED,SAASE,QAAT,CAAkBC,YAAlB,EAAgCT,WAAhC,EAA6C;EAC3CT,cAAc,CAACkB,YAAD,CAAd,GAA+BT,WAA/B;AACD,C,CAED;;;AACAP,GAAG,CAACe,QAAJ,GAAeA,QAAf"},"metadata":{},"sourceType":"module"}