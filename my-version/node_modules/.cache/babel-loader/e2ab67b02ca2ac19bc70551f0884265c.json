{"ast":null,"code":"import macro from 'vtk.js/Sources/macros';\nimport style from 'vtk.js/Sources/Interaction/UI/FPSMonitor/FPSMonitor.module.css';\nconst noOp = Function.prototype;\n\nfunction formatNumbers(n) {\n  const sections = [];\n  let size = n;\n\n  while (size > 1000) {\n    sections.push(`000${size % 1000}`.slice(-3));\n    size = Math.floor(size / 1000);\n  }\n\n  if (size > 0) {\n    sections.push(size);\n  }\n\n  sections.reverse();\n  return sections.join(\"'\");\n} // ----------------------------------------------------------------------------\n// vtkFPSMonitor methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkFPSMonitor(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkFPSMonitor');\n  model.fpsMonitorContainer = document.createElement('div');\n  model.fpsMonitorContainer.setAttribute('class', model.orientationClass);\n  model.fpsMonitorContainer.innerHTML = `\n    <div class=\"${style.leftPane}\">\n      <div class=\"js-title ${style.title}\">Mean N/A - Current N/A</div>\n      <canvas class=\"js-graph ${style.graph}\"></canvas>\n    </div>\n    <div class=\"js-info ${style.rightPane}\">\n    </div>`; // Extract various containers\n\n  model.canvas = model.fpsMonitorContainer.querySelector('.js-graph');\n  model.title = model.fpsMonitorContainer.querySelector('.js-title');\n  model.info = model.fpsMonitorContainer.querySelector('.js-info'); // --------------------------------------------------------------------------\n  // Private methods\n  // --------------------------------------------------------------------------\n\n  function renderTitle() {\n    model.title.style.display = model.titleVisibility ? 'block' : 'none';\n\n    if (!model.titleVisibility) {\n      return;\n    }\n\n    const nextFPS = model.buffer[model.buffer.length - 1];\n    const newTxt = `Mean: ${Math.round(model.fpsSum / model.buffer.length)} - Current: ${Math.round(nextFPS)}`;\n\n    if (newTxt !== model.lastText) {\n      model.lastText = newTxt;\n      model.title.innerHTML = newTxt;\n    }\n  }\n\n  function renderInfo() {\n    model.info.style.display = model.infoVisibility ? 'grid' : 'none';\n\n    if (!model.infoVisibility) {\n      return;\n    }\n\n    const infoItems = [];\n\n    if (model.renderWindow) {\n      const realView = model.renderWindow.getViews()[0];\n\n      if (realView && realView.getSize) {\n        infoItems.push(`<label class=\"${style.label}\">Resolution</label><span class=\"${style.value}\">${realView.getSize().join('x')}</span>`);\n      }\n\n      const stats = { ...model.renderWindow.getStatistics(),\n        ...model.addOnStats\n      };\n      const keys = Object.keys(stats);\n      keys.sort();\n\n      for (let i = 0; i < keys.length; i++) {\n        if (keys[i] === 'str') {\n          continue; // eslint-disable-line\n        }\n\n        if (stats[keys[i]]) {\n          infoItems.push(`<label class=\"${style.label}\">${keys[i]}</label><span class=\"${style.value}\">${formatNumbers(stats[keys[i]])}</span>`);\n        }\n      }\n    }\n\n    model.info.innerHTML = infoItems.join('');\n  }\n\n  function renderCanvas() {\n    model.canvas.style.display = model.canvasVisibility ? 'block' : 'none';\n\n    if (!model.canvasVisibility) {\n      return;\n    } // Although this is called frequently, setting an attribute to the same value is a no-op\n\n\n    model.canvas.setAttribute('width', model.bufferSize);\n    model.canvas.setAttribute('height', model.graphHeight);\n    const ctx = model.canvas.getContext('2d');\n    const {\n      width,\n      height\n    } = model.canvas;\n    ctx.clearRect(0, 0, width, height); // Current fps\n\n    ctx.strokeStyle = 'green';\n    ctx.beginPath();\n    ctx.moveTo(0, height - model.buffer[0]);\n\n    for (let i = 1; i < model.buffer.length; i++) {\n      ctx.lineTo(i, height - model.buffer[i]);\n    }\n\n    ctx.stroke(); // 60 fps ref\n\n    ctx.strokeStyle = 'black';\n    ctx.beginPath();\n    ctx.moveTo(0, height - 60);\n    ctx.lineTo(width, height - 60);\n    ctx.stroke();\n  }\n\n  function frameChanged() {\n    if (!model.interactor) {\n      return;\n    }\n\n    const nextFPS = 1 / model.interactor.getLastFrameTime();\n    model.buffer.push(nextFPS);\n    model.fpsSum += nextFPS;\n\n    while (model.buffer.length > model.bufferSize) {\n      model.fpsSum -= model.buffer.shift();\n    }\n\n    renderTitle();\n    renderCanvas();\n  } // --------------------------------------------------------------------------\n  // Public methods\n  // --------------------------------------------------------------------------\n\n\n  publicAPI.update = () => {\n    publicAPI.render();\n  }; // --------------------------------------------------------------------------\n\n\n  publicAPI.setRenderWindow = rw => {\n    while (model.subscriptions.length) {\n      model.subscriptions.pop().unsubscribe();\n    }\n\n    model.renderWindow = rw;\n    model.interactor = rw ? rw.getInteractor() : null;\n\n    if (model.interactor) {\n      model.subscriptions.push(model.interactor.onAnimation(frameChanged));\n    }\n  }; // --------------------------------------------------------------------------\n\n\n  publicAPI.setContainer = el => {\n    if (model.container && model.container !== el) {\n      model.container.removeChild(model.fpsMonitorContainer);\n    }\n\n    if (model.container !== el) {\n      model.container = el;\n\n      if (model.container) {\n        model.container.appendChild(model.fpsMonitorContainer);\n        publicAPI.resize();\n      }\n\n      publicAPI.modified();\n    }\n  }; // --------------------------------------------------------------------------\n\n\n  publicAPI.render = () => {\n    renderTitle();\n    renderInfo();\n    renderCanvas();\n  }; // --------------------------------------------------------------------------\n\n\n  publicAPI.resize = noOp; // --------------------------------------------------------------------------\n\n  publicAPI.setOrientationToHorizontal = () => {\n    model.fpsMonitorContainer.classList.remove(model.orientationClass);\n    model.orientationClass = style.horizontalContainer;\n    model.fpsMonitorContainer.classList.add(model.orientationClass);\n  }; // --------------------------------------------------------------------------\n\n\n  publicAPI.setOrientationToVertical = () => {\n    model.fpsMonitorContainer.classList.remove(model.orientationClass);\n    model.orientationClass = style.verticalContainer;\n    model.fpsMonitorContainer.classList.add(model.orientationClass);\n  }; // --------------------------------------------------------------------------\n\n\n  publicAPI.setOrientation = function () {\n    let mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'horizontal';\n\n    if (mode === 'horizontal') {\n      publicAPI.setOrientationToHorizontal();\n    } else {\n      publicAPI.setOrientationToVertical();\n    }\n  }; // --------------------------------------------------------------------------\n\n\n  publicAPI.setAddOnStats = addOn => {\n    if (!model.addOnStats) {\n      model.addOnStats = {};\n    }\n\n    Object.assign(model.addOnStats, addOn);\n    renderInfo();\n  }; // --------------------------------------------------------------------------\n\n\n  publicAPI.setMonitorVisibility = function () {\n    let title = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    let graph = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let info = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    publicAPI.setCanvasVisibility(graph);\n    publicAPI.setInfoVisibility(info);\n    publicAPI.setTitleVisibility(title);\n  }; // --------------------------------------------------------------------------\n\n\n  const superDelete = publicAPI.delete;\n\n  publicAPI.delete = () => {\n    publicAPI.setRenderWindow(null);\n    publicAPI.setContainer(null);\n    superDelete();\n  }; // --------------------------------------------------------------------------\n\n\n  model.subscriptions.push(publicAPI.onModified(publicAPI.update));\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nconst DEFAULT_VALUES = {\n  bufferSize: 200,\n  graphHeight: 120,\n  buffer: [60],\n  subscriptions: [],\n  fpsSum: 0,\n  orientationClass: style.horizontalContainer,\n  canvasVisibility: true,\n  titleVisibility: true,\n  infoVisibility: true\n}; // ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['fpsMonitorContainer', 'renderWindow', 'addOnStats']);\n  macro.setGet(publicAPI, model, ['bufferSize', 'canvasVisibility', 'infoVisibility', 'titleVisibility']); // Object specific methods\n\n  vtkFPSMonitor(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkFPSMonitor'); // ----------------------------------------------------------------------------\n\nexport default {\n  newInstance,\n  extend\n};","map":{"version":3,"names":["macro","style","noOp","Function","prototype","formatNumbers","n","sections","size","push","slice","Math","floor","reverse","join","vtkFPSMonitor","publicAPI","model","classHierarchy","fpsMonitorContainer","document","createElement","setAttribute","orientationClass","innerHTML","leftPane","title","graph","rightPane","canvas","querySelector","info","renderTitle","display","titleVisibility","nextFPS","buffer","length","newTxt","round","fpsSum","lastText","renderInfo","infoVisibility","infoItems","renderWindow","realView","getViews","getSize","label","value","stats","getStatistics","addOnStats","keys","Object","sort","i","renderCanvas","canvasVisibility","bufferSize","graphHeight","ctx","getContext","width","height","clearRect","strokeStyle","beginPath","moveTo","lineTo","stroke","frameChanged","interactor","getLastFrameTime","shift","update","render","setRenderWindow","rw","subscriptions","pop","unsubscribe","getInteractor","onAnimation","setContainer","el","container","removeChild","appendChild","resize","modified","setOrientationToHorizontal","classList","remove","horizontalContainer","add","setOrientationToVertical","verticalContainer","setOrientation","mode","setAddOnStats","addOn","assign","setMonitorVisibility","setCanvasVisibility","setInfoVisibility","setTitleVisibility","superDelete","delete","onModified","DEFAULT_VALUES","extend","initialValues","obj","get","setGet","newInstance"],"sources":["/Users/nicolerussack/CSCI401/CSCI401TissueSimulation/my-version/node_modules/vtk.js/Sources/Interaction/UI/FPSMonitor/index.js"],"sourcesContent":["import macro from 'vtk.js/Sources/macros';\nimport style from 'vtk.js/Sources/Interaction/UI/FPSMonitor/FPSMonitor.module.css';\n\nconst noOp = Function.prototype;\n\nfunction formatNumbers(n) {\n  const sections = [];\n  let size = n;\n  while (size > 1000) {\n    sections.push(`000${size % 1000}`.slice(-3));\n    size = Math.floor(size / 1000);\n  }\n  if (size > 0) {\n    sections.push(size);\n  }\n  sections.reverse();\n  return sections.join(\"'\");\n}\n\n// ----------------------------------------------------------------------------\n// vtkFPSMonitor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkFPSMonitor(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkFPSMonitor');\n\n  model.fpsMonitorContainer = document.createElement('div');\n  model.fpsMonitorContainer.setAttribute('class', model.orientationClass);\n  model.fpsMonitorContainer.innerHTML = `\n    <div class=\"${style.leftPane}\">\n      <div class=\"js-title ${style.title}\">Mean N/A - Current N/A</div>\n      <canvas class=\"js-graph ${style.graph}\"></canvas>\n    </div>\n    <div class=\"js-info ${style.rightPane}\">\n    </div>`;\n\n  // Extract various containers\n  model.canvas = model.fpsMonitorContainer.querySelector('.js-graph');\n  model.title = model.fpsMonitorContainer.querySelector('.js-title');\n  model.info = model.fpsMonitorContainer.querySelector('.js-info');\n\n  // --------------------------------------------------------------------------\n  // Private methods\n  // --------------------------------------------------------------------------\n\n  function renderTitle() {\n    model.title.style.display = model.titleVisibility ? 'block' : 'none';\n    if (!model.titleVisibility) {\n      return;\n    }\n    const nextFPS = model.buffer[model.buffer.length - 1];\n    const newTxt = `Mean: ${Math.round(\n      model.fpsSum / model.buffer.length\n    )} - Current: ${Math.round(nextFPS)}`;\n    if (newTxt !== model.lastText) {\n      model.lastText = newTxt;\n      model.title.innerHTML = newTxt;\n    }\n  }\n\n  function renderInfo() {\n    model.info.style.display = model.infoVisibility ? 'grid' : 'none';\n    if (!model.infoVisibility) {\n      return;\n    }\n    const infoItems = [];\n    if (model.renderWindow) {\n      const realView = model.renderWindow.getViews()[0];\n      if (realView && realView.getSize) {\n        infoItems.push(\n          `<label class=\"${style.label}\">Resolution</label><span class=\"${\n            style.value\n          }\">${realView.getSize().join('x')}</span>`\n        );\n      }\n\n      const stats = {\n        ...model.renderWindow.getStatistics(),\n        ...model.addOnStats,\n      };\n      const keys = Object.keys(stats);\n      keys.sort();\n      for (let i = 0; i < keys.length; i++) {\n        if (keys[i] === 'str') {\n          continue; // eslint-disable-line\n        }\n        if (stats[keys[i]]) {\n          infoItems.push(\n            `<label class=\"${style.label}\">${keys[i]}</label><span class=\"${\n              style.value\n            }\">${formatNumbers(stats[keys[i]])}</span>`\n          );\n        }\n      }\n    }\n    model.info.innerHTML = infoItems.join('');\n  }\n\n  function renderCanvas() {\n    model.canvas.style.display = model.canvasVisibility ? 'block' : 'none';\n    if (!model.canvasVisibility) {\n      return;\n    }\n    // Although this is called frequently, setting an attribute to the same value is a no-op\n    model.canvas.setAttribute('width', model.bufferSize);\n    model.canvas.setAttribute('height', model.graphHeight);\n    const ctx = model.canvas.getContext('2d');\n    const { width, height } = model.canvas;\n    ctx.clearRect(0, 0, width, height);\n    // Current fps\n    ctx.strokeStyle = 'green';\n    ctx.beginPath();\n    ctx.moveTo(0, height - model.buffer[0]);\n    for (let i = 1; i < model.buffer.length; i++) {\n      ctx.lineTo(i, height - model.buffer[i]);\n    }\n    ctx.stroke();\n    // 60 fps ref\n    ctx.strokeStyle = 'black';\n    ctx.beginPath();\n    ctx.moveTo(0, height - 60);\n    ctx.lineTo(width, height - 60);\n    ctx.stroke();\n  }\n\n  function frameChanged() {\n    if (!model.interactor) {\n      return;\n    }\n    const nextFPS = 1 / model.interactor.getLastFrameTime();\n    model.buffer.push(nextFPS);\n    model.fpsSum += nextFPS;\n    while (model.buffer.length > model.bufferSize) {\n      model.fpsSum -= model.buffer.shift();\n    }\n    renderTitle();\n    renderCanvas();\n  }\n\n  // --------------------------------------------------------------------------\n  // Public methods\n  // --------------------------------------------------------------------------\n\n  publicAPI.update = () => {\n    publicAPI.render();\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.setRenderWindow = (rw) => {\n    while (model.subscriptions.length) {\n      model.subscriptions.pop().unsubscribe();\n    }\n    model.renderWindow = rw;\n    model.interactor = rw ? rw.getInteractor() : null;\n\n    if (model.interactor) {\n      model.subscriptions.push(model.interactor.onAnimation(frameChanged));\n    }\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.setContainer = (el) => {\n    if (model.container && model.container !== el) {\n      model.container.removeChild(model.fpsMonitorContainer);\n    }\n    if (model.container !== el) {\n      model.container = el;\n      if (model.container) {\n        model.container.appendChild(model.fpsMonitorContainer);\n        publicAPI.resize();\n      }\n      publicAPI.modified();\n    }\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.render = () => {\n    renderTitle();\n    renderInfo();\n    renderCanvas();\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.resize = noOp;\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.setOrientationToHorizontal = () => {\n    model.fpsMonitorContainer.classList.remove(model.orientationClass);\n    model.orientationClass = style.horizontalContainer;\n    model.fpsMonitorContainer.classList.add(model.orientationClass);\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.setOrientationToVertical = () => {\n    model.fpsMonitorContainer.classList.remove(model.orientationClass);\n    model.orientationClass = style.verticalContainer;\n    model.fpsMonitorContainer.classList.add(model.orientationClass);\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.setOrientation = (mode = 'horizontal') => {\n    if (mode === 'horizontal') {\n      publicAPI.setOrientationToHorizontal();\n    } else {\n      publicAPI.setOrientationToVertical();\n    }\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.setAddOnStats = (addOn) => {\n    if (!model.addOnStats) {\n      model.addOnStats = {};\n    }\n    Object.assign(model.addOnStats, addOn);\n    renderInfo();\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.setMonitorVisibility = (\n    title = true,\n    graph = true,\n    info = true\n  ) => {\n    publicAPI.setCanvasVisibility(graph);\n    publicAPI.setInfoVisibility(info);\n    publicAPI.setTitleVisibility(title);\n  };\n\n  // --------------------------------------------------------------------------\n\n  const superDelete = publicAPI.delete;\n  publicAPI.delete = () => {\n    publicAPI.setRenderWindow(null);\n    publicAPI.setContainer(null);\n    superDelete();\n  };\n\n  // --------------------------------------------------------------------------\n\n  model.subscriptions.push(publicAPI.onModified(publicAPI.update));\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  bufferSize: 200,\n  graphHeight: 120,\n  buffer: [60],\n  subscriptions: [],\n  fpsSum: 0,\n  orientationClass: style.horizontalContainer,\n  canvasVisibility: true,\n  titleVisibility: true,\n  infoVisibility: true,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, [\n    'fpsMonitorContainer',\n    'renderWindow',\n    'addOnStats',\n  ]);\n  macro.setGet(publicAPI, model, [\n    'bufferSize',\n    'canvasVisibility',\n    'infoVisibility',\n    'titleVisibility',\n  ]);\n\n  // Object specific methods\n  vtkFPSMonitor(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkFPSMonitor');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}