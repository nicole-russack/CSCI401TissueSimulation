{"ast":null,"code":"import { mat4 } from 'gl-matrix';\nimport * as macro from 'vtk.js/Sources/macros';\nimport vtkViewNode from 'vtk.js/Sources/Rendering/SceneGraph/ViewNode';\nimport { registerOverride } from 'vtk.js/Sources/Rendering/WebGPU/ViewNodeFactory'; // ----------------------------------------------------------------------------\n// vtkWebGPUImageSlice methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUImageSlice(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUImageSlice'); // Builds myself.\n\n  publicAPI.buildPass = prepass => {\n    if (!model.renderable || !model.renderable.getVisibility()) {\n      return;\n    }\n\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n\n      model.WebGPURenderer = publicAPI.getFirstAncestorOfType('vtkWebGPURenderer');\n      model.WebGPURenderWindow = model.WebGPURenderer.getFirstAncestorOfType('vtkWebGPURenderWindow');\n\n      if (model.propID === undefined) {\n        model.propID = model.WebGPURenderWindow.getUniquePropID();\n      }\n\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.renderable.getMapper());\n      publicAPI.removeUnusedNodes();\n    }\n  }; // we draw textures, then mapper, then post pass textures\n\n\n  publicAPI.traverseOpaquePass = renderPass => {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || !model.renderable.getIsOpaque() || model.WebGPURenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n\n    publicAPI.apply(renderPass, true);\n    model.children.forEach(child => {\n      child.traverse(renderPass);\n    });\n    publicAPI.apply(renderPass, false);\n  };\n\n  publicAPI.traverseTranslucentPass = renderPass => {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || model.renderable.getIsOpaque() || model.WebGPURenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n\n    publicAPI.apply(renderPass, true);\n    model.children.forEach(child => {\n      child.traverse(renderPass);\n    });\n    publicAPI.apply(renderPass, false);\n  };\n\n  publicAPI.queryPass = (prepass, renderPass) => {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      }\n\n      if (model.renderable.getIsOpaque()) {\n        renderPass.incrementOpaqueActorCount();\n      } else {\n        renderPass.incrementTranslucentActorCount();\n      }\n    }\n  };\n\n  publicAPI.getBufferShift = wgpuRen => {\n    publicAPI.getKeyMatrices(wgpuRen);\n    return model.bufferShift;\n  };\n\n  publicAPI.getKeyMatrices = wgpuRen => {\n    // has the actor or stabilization center changed?\n    if (Math.max(model.renderable.getMTime(), wgpuRen.getStabilizedTime()) > model.keyMatricesTime.getMTime()) {\n      model.renderable.computeMatrix();\n      const mcwc = model.renderable.getMatrix(); // compute the net shift\n\n      const center = wgpuRen.getStabilizedCenterByReference();\n      model.bufferShift[0] = mcwc[3] - center[0];\n      model.bufferShift[1] = mcwc[7] - center[1];\n      model.bufferShift[2] = mcwc[11] - center[2];\n      mat4.transpose(model.keyMatrices.bcwc, mcwc);\n\n      if (model.renderable.getIsIdentity()) {\n        mat4.identity(model.keyMatrices.normalMatrix);\n      } else {\n        // we use bcwc BEFORE the translate below (just to get transposed mcvc)\n        mat4.copy(model.keyMatrices.normalMatrix, model.keyMatrices.bcwc); // zero out translation\n\n        model.keyMatrices.normalMatrix[3] = 0.0;\n        model.keyMatrices.normalMatrix[7] = 0.0;\n        model.keyMatrices.normalMatrix[11] = 0.0;\n        mat4.invert(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\n        mat4.transpose(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\n      } // only meed the buffer shift to get to world\n\n\n      mat4.translate(model.keyMatrices.bcwc, model.keyMatrices.bcwc, [-model.bufferShift[0], -model.bufferShift[1], -model.bufferShift[2]]); // to get to stabilized we also need the center\n\n      mat4.translate(model.keyMatrices.bcsc, model.keyMatrices.bcwc, [-center[0], -center[1], -center[2]]);\n      model.keyMatricesTime.modified();\n    }\n\n    return model.keyMatrices;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nconst DEFAULT_VALUES = {\n  bufferShift: undefined,\n  keyMatrixTime: null,\n  keyMatrices: null,\n  propID: undefined\n}; // ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.keyMatricesTime = {};\n  macro.obj(model.keyMatricesTime, {\n    mtime: 0\n  });\n  model.keyMatrices = {\n    normalMatrix: new Float64Array(16),\n    bcwc: new Float64Array(16),\n    bcsc: new Float64Array(16)\n  };\n  model.keyMatrixTime = {};\n  macro.obj(model.keyMatrixTime, {\n    mtime: 0\n  });\n  model.keyMatrices = {\n    mcwc: mat4.identity(new Float64Array(16))\n  };\n  model.bufferShift = [0, 0, 0, 0];\n  macro.get(publicAPI, model, ['propID', 'keyMatricesTime']); // Object methods\n\n  vtkWebGPUImageSlice(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkWebGPUImageSlice'); // ----------------------------------------------------------------------------\n\nexport default {\n  newInstance,\n  extend\n}; // Register ourself to WebGPU backend if imported\n\nregisterOverride('vtkImageSlice', newInstance);","map":{"version":3,"names":["mat4","macro","vtkViewNode","registerOverride","vtkWebGPUImageSlice","publicAPI","model","classHierarchy","push","buildPass","prepass","renderable","getVisibility","WebGPURenderer","getFirstAncestorOfType","WebGPURenderWindow","propID","undefined","getUniquePropID","prepareNodes","addMissingNode","getMapper","removeUnusedNodes","traverseOpaquePass","renderPass","getNestedVisibility","getIsOpaque","getSelector","getNestedPickable","apply","children","forEach","child","traverse","traverseTranslucentPass","queryPass","incrementOpaqueActorCount","incrementTranslucentActorCount","getBufferShift","wgpuRen","getKeyMatrices","bufferShift","Math","max","getMTime","getStabilizedTime","keyMatricesTime","computeMatrix","mcwc","getMatrix","center","getStabilizedCenterByReference","transpose","keyMatrices","bcwc","getIsIdentity","identity","normalMatrix","copy","invert","translate","bcsc","modified","DEFAULT_VALUES","keyMatrixTime","extend","initialValues","Object","assign","obj","mtime","Float64Array","get","newInstance"],"sources":["/Users/nicolerussack/CSCI401/CSCI401TissueSimulation/my-version/node_modules/vtk.js/Sources/Rendering/WebGPU/ImageSlice/index.js"],"sourcesContent":["import { mat4 } from 'gl-matrix';\n\nimport * as macro from 'vtk.js/Sources/macros';\nimport vtkViewNode from 'vtk.js/Sources/Rendering/SceneGraph/ViewNode';\n\nimport { registerOverride } from 'vtk.js/Sources/Rendering/WebGPU/ViewNodeFactory';\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUImageSlice methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUImageSlice(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUImageSlice');\n\n  // Builds myself.\n  publicAPI.buildPass = (prepass) => {\n    if (!model.renderable || !model.renderable.getVisibility()) {\n      return;\n    }\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n\n      model.WebGPURenderer =\n        publicAPI.getFirstAncestorOfType('vtkWebGPURenderer');\n      model.WebGPURenderWindow = model.WebGPURenderer.getFirstAncestorOfType(\n        'vtkWebGPURenderWindow'\n      );\n      if (model.propID === undefined) {\n        model.propID = model.WebGPURenderWindow.getUniquePropID();\n      }\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.renderable.getMapper());\n      publicAPI.removeUnusedNodes();\n    }\n  };\n\n  // we draw textures, then mapper, then post pass textures\n  publicAPI.traverseOpaquePass = (renderPass) => {\n    if (\n      !model.renderable ||\n      !model.renderable.getNestedVisibility() ||\n      !model.renderable.getIsOpaque() ||\n      (model.WebGPURenderer.getSelector() &&\n        !model.renderable.getNestedPickable())\n    ) {\n      return;\n    }\n\n    publicAPI.apply(renderPass, true);\n    model.children.forEach((child) => {\n      child.traverse(renderPass);\n    });\n    publicAPI.apply(renderPass, false);\n  };\n\n  publicAPI.traverseTranslucentPass = (renderPass) => {\n    if (\n      !model.renderable ||\n      !model.renderable.getNestedVisibility() ||\n      model.renderable.getIsOpaque() ||\n      (model.WebGPURenderer.getSelector() &&\n        !model.renderable.getNestedPickable())\n    ) {\n      return;\n    }\n\n    publicAPI.apply(renderPass, true);\n    model.children.forEach((child) => {\n      child.traverse(renderPass);\n    });\n    publicAPI.apply(renderPass, false);\n  };\n\n  publicAPI.queryPass = (prepass, renderPass) => {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      }\n      if (model.renderable.getIsOpaque()) {\n        renderPass.incrementOpaqueActorCount();\n      } else {\n        renderPass.incrementTranslucentActorCount();\n      }\n    }\n  };\n\n  publicAPI.getBufferShift = (wgpuRen) => {\n    publicAPI.getKeyMatrices(wgpuRen);\n    return model.bufferShift;\n  };\n\n  publicAPI.getKeyMatrices = (wgpuRen) => {\n    // has the actor or stabilization center changed?\n    if (\n      Math.max(model.renderable.getMTime(), wgpuRen.getStabilizedTime()) >\n      model.keyMatricesTime.getMTime()\n    ) {\n      model.renderable.computeMatrix();\n\n      const mcwc = model.renderable.getMatrix();\n\n      // compute the net shift\n      const center = wgpuRen.getStabilizedCenterByReference();\n      model.bufferShift[0] = mcwc[3] - center[0];\n      model.bufferShift[1] = mcwc[7] - center[1];\n      model.bufferShift[2] = mcwc[11] - center[2];\n\n      mat4.transpose(model.keyMatrices.bcwc, mcwc);\n\n      if (model.renderable.getIsIdentity()) {\n        mat4.identity(model.keyMatrices.normalMatrix);\n      } else {\n        // we use bcwc BEFORE the translate below (just to get transposed mcvc)\n        mat4.copy(model.keyMatrices.normalMatrix, model.keyMatrices.bcwc);\n        // zero out translation\n        model.keyMatrices.normalMatrix[3] = 0.0;\n        model.keyMatrices.normalMatrix[7] = 0.0;\n        model.keyMatrices.normalMatrix[11] = 0.0;\n        mat4.invert(\n          model.keyMatrices.normalMatrix,\n          model.keyMatrices.normalMatrix\n        );\n        mat4.transpose(\n          model.keyMatrices.normalMatrix,\n          model.keyMatrices.normalMatrix\n        );\n      }\n\n      // only meed the buffer shift to get to world\n      mat4.translate(model.keyMatrices.bcwc, model.keyMatrices.bcwc, [\n        -model.bufferShift[0],\n        -model.bufferShift[1],\n        -model.bufferShift[2],\n      ]);\n\n      // to get to stabilized we also need the center\n      mat4.translate(model.keyMatrices.bcsc, model.keyMatrices.bcwc, [\n        -center[0],\n        -center[1],\n        -center[2],\n      ]);\n\n      model.keyMatricesTime.modified();\n    }\n\n    return model.keyMatrices;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  bufferShift: undefined,\n  keyMatrixTime: null,\n  keyMatrices: null,\n  propID: undefined,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n\n  model.keyMatricesTime = {};\n  macro.obj(model.keyMatricesTime, { mtime: 0 });\n  model.keyMatrices = {\n    normalMatrix: new Float64Array(16),\n    bcwc: new Float64Array(16),\n    bcsc: new Float64Array(16),\n  };\n\n  model.keyMatrixTime = {};\n  macro.obj(model.keyMatrixTime, { mtime: 0 });\n  model.keyMatrices = {\n    mcwc: mat4.identity(new Float64Array(16)),\n  };\n\n  model.bufferShift = [0, 0, 0, 0];\n\n  macro.get(publicAPI, model, ['propID', 'keyMatricesTime']);\n\n  // Object methods\n  vtkWebGPUImageSlice(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkWebGPUImageSlice');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n\n// Register ourself to WebGPU backend if imported\nregisterOverride('vtkImageSlice', newInstance);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}