{"ast":null,"code":"import * as macro from 'vtk.js/Sources/macros';\nimport vtkOpenGLTexture from 'vtk.js/Sources/Rendering/OpenGL/Texture';\nimport { VtkDataTypes } from 'vtk.js/Sources/Common/Core/DataArray/Constants';\nimport { Filter } from 'vtk.js/Sources/Rendering/OpenGL/Texture/Constants'; // ----------------------------------------------------------------------------\n// vtkFramebuffer methods\n// ----------------------------------------------------------------------------\n\nfunction vtkFramebuffer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkFramebuffer');\n\n  publicAPI.getBothMode = () => model.context.FRAMEBUFFER; // publicAPI.getDrawMode = () => model.context.DRAW_FRAMEBUFFER;\n  // publicAPI.getReadMode = () => model.context.READ_FRAMEBUFFER;\n\n\n  publicAPI.saveCurrentBindingsAndBuffers = modeIn => {\n    const mode = typeof modeIn !== 'undefined' ? modeIn : publicAPI.getBothMode();\n    publicAPI.saveCurrentBindings(mode);\n    publicAPI.saveCurrentBuffers(mode);\n  };\n\n  publicAPI.saveCurrentBindings = modeIn => {\n    if (!model.context) {\n      macro.vtkErrorMacro('you must set the OpenGLRenderWindow before calling saveCurrentBindings');\n      return;\n    }\n\n    const gl = model.context;\n    model.previousDrawBinding = gl.getParameter(model.context.FRAMEBUFFER_BINDING);\n    model.previousActiveFramebuffer = model._openGLRenderWindow.getActiveFramebuffer();\n  };\n\n  publicAPI.saveCurrentBuffers = modeIn => {// noop on webgl 1\n  };\n\n  publicAPI.restorePreviousBindingsAndBuffers = modeIn => {\n    const mode = typeof modeIn !== 'undefined' ? modeIn : publicAPI.getBothMode();\n    publicAPI.restorePreviousBindings(mode);\n    publicAPI.restorePreviousBuffers(mode);\n  };\n\n  publicAPI.restorePreviousBindings = modeIn => {\n    if (!model.context) {\n      macro.vtkErrorMacro('you must set the OpenGLRenderWindow before calling restorePreviousBindings');\n      return;\n    }\n\n    const gl = model.context;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, model.previousDrawBinding);\n\n    model._openGLRenderWindow.setActiveFramebuffer(model.previousActiveFramebuffer);\n  };\n\n  publicAPI.restorePreviousBuffers = modeIn => {// currently a noop on webgl1\n  };\n\n  publicAPI.bind = function () {\n    let modeArg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let mode = modeArg;\n\n    if (mode === null) {\n      mode = model.context.FRAMEBUFFER;\n    }\n\n    model.context.bindFramebuffer(mode, model.glFramebuffer);\n\n    for (let i = 0; i < model.colorBuffers.length; i++) {\n      model.colorBuffers[i].bind();\n    }\n\n    model._openGLRenderWindow.setActiveFramebuffer(publicAPI);\n  };\n\n  publicAPI.create = (width, height) => {\n    if (!model.context) {\n      macro.vtkErrorMacro('you must set the OpenGLRenderWindow before calling create');\n      return;\n    }\n\n    model.glFramebuffer = model.context.createFramebuffer();\n    model.glFramebuffer.width = width;\n    model.glFramebuffer.height = height;\n  };\n\n  publicAPI.setColorBuffer = function (texture) {\n    let attachment = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    const gl = model.context;\n\n    if (!gl) {\n      macro.vtkErrorMacro('you must set the OpenGLRenderWindow before calling setColorBuffer');\n      return;\n    }\n\n    let glAttachment = gl.COLOR_ATTACHMENT0;\n\n    if (attachment > 0) {\n      if (model._openGLRenderWindow.getWebgl2()) {\n        glAttachment += attachment;\n      } else {\n        macro.vtkErrorMacro('Using multiple framebuffer attachments requires WebGL 2');\n        return;\n      }\n    }\n\n    model.colorBuffers[attachment] = texture;\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, glAttachment, gl.TEXTURE_2D, texture.getHandle(), 0);\n  };\n\n  publicAPI.removeColorBuffer = function () {\n    let attachment = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    const gl = model.context;\n\n    if (!gl) {\n      macro.vtkErrorMacro('you must set the OpenGLRenderWindow before calling removeColorBuffer');\n      return;\n    }\n\n    let glAttachment = gl.COLOR_ATTACHMENT0;\n\n    if (attachment > 0) {\n      if (model._openGLRenderWindow.getWebgl2()) {\n        glAttachment += attachment;\n      } else {\n        macro.vtkErrorMacro('Using multiple framebuffer attachments requires WebGL 2');\n        return;\n      }\n    }\n\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, glAttachment, gl.TEXTURE_2D, null, 0);\n    model.colorBuffers = model.colorBuffers.splice(attachment, 1);\n  };\n\n  publicAPI.setDepthBuffer = texture => {\n    if (!model.context) {\n      macro.vtkErrorMacro('you must set the OpenGLRenderWindow before calling setDepthBuffer');\n      return;\n    }\n\n    if (model._openGLRenderWindow.getWebgl2()) {\n      const gl = model.context;\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, texture.getHandle(), 0);\n    } else {\n      macro.vtkErrorMacro('Attaching depth buffer textures to fbo requires WebGL 2');\n    }\n  };\n\n  publicAPI.removeDepthBuffer = () => {\n    if (!model.context) {\n      macro.vtkErrorMacro('you must set the OpenGLRenderWindow before calling removeDepthBuffer');\n      return;\n    }\n\n    if (model._openGLRenderWindow.getWebgl2()) {\n      const gl = model.context;\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, null, 0);\n    } else {\n      macro.vtkErrorMacro('Attaching depth buffer textures to framebuffers requires WebGL 2');\n    }\n  };\n\n  publicAPI.getGLFramebuffer = () => model.glFramebuffer;\n\n  publicAPI.setOpenGLRenderWindow = rw => {\n    if (model._openGLRenderWindow === rw) {\n      return;\n    }\n\n    publicAPI.releaseGraphicsResources();\n    model._openGLRenderWindow = rw;\n    model.context = null;\n\n    if (rw) {\n      model.context = model._openGLRenderWindow.getContext();\n    }\n  };\n\n  publicAPI.releaseGraphicsResources = () => {\n    if (model.glFramebuffer) {\n      model.context.deleteFramebuffer(model.glFramebuffer);\n    }\n  };\n\n  publicAPI.getSize = () => {\n    const size = [0, 0];\n\n    if (model.glFramebuffer !== null) {\n      size[0] = model.glFramebuffer.width;\n      size[1] = model.glFramebuffer.height;\n    }\n\n    return size;\n  };\n\n  publicAPI.populateFramebuffer = () => {\n    if (!model.context) {\n      macro.vtkErrorMacro('you must set the OpenGLRenderWindow before calling populateFrameBuffer');\n      return;\n    }\n\n    publicAPI.bind();\n    const gl = model.context;\n    const texture = vtkOpenGLTexture.newInstance();\n    texture.setOpenGLRenderWindow(model._openGLRenderWindow);\n    texture.setMinificationFilter(Filter.LINEAR);\n    texture.setMagnificationFilter(Filter.LINEAR);\n    texture.create2DFromRaw(model.glFramebuffer.width, model.glFramebuffer.height, 4, VtkDataTypes.UNSIGNED_CHAR, null);\n    publicAPI.setColorBuffer(texture); // for now do not count on having a depth buffer texture\n    // as they are not standard webgl 1\n\n    model.depthTexture = gl.createRenderbuffer();\n    gl.bindRenderbuffer(gl.RENDERBUFFER, model.depthTexture);\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, model.glFramebuffer.width, model.glFramebuffer.height);\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, model.depthTexture);\n  }; // For backwards compatibility. Use getColorBuffers()[0] going forward.\n\n\n  publicAPI.getColorTexture = () => model.colorBuffers[0];\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nconst DEFAULT_VALUES = {\n  // _openGLRenderWindow: null,\n  glFramebuffer: null,\n  colorBuffers: null,\n  depthTexture: null,\n  previousDrawBinding: 0,\n  previousReadBinding: 0,\n  previousDrawBuffer: 0,\n  previousReadBuffer: 0,\n  previousActiveFramebuffer: null\n}; // ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n\n  if (model.colorBuffers) {\n    macro.vtkErrorMacro('you cannot initialize colorBuffers through the constructor. You should call setColorBuffer() instead.');\n  }\n\n  model.colorBuffers = [];\n  macro.getArray(publicAPI, model, ['colorBuffers']); // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n\n  vtkFramebuffer(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkFramebuffer'); // ----------------------------------------------------------------------------\n\nexport default {\n  newInstance,\n  extend\n};","map":{"version":3,"names":["macro","vtkOpenGLTexture","VtkDataTypes","Filter","vtkFramebuffer","publicAPI","model","classHierarchy","push","getBothMode","context","FRAMEBUFFER","saveCurrentBindingsAndBuffers","modeIn","mode","saveCurrentBindings","saveCurrentBuffers","vtkErrorMacro","gl","previousDrawBinding","getParameter","FRAMEBUFFER_BINDING","previousActiveFramebuffer","_openGLRenderWindow","getActiveFramebuffer","restorePreviousBindingsAndBuffers","restorePreviousBindings","restorePreviousBuffers","bindFramebuffer","setActiveFramebuffer","bind","modeArg","glFramebuffer","i","colorBuffers","length","create","width","height","createFramebuffer","setColorBuffer","texture","attachment","glAttachment","COLOR_ATTACHMENT0","getWebgl2","framebufferTexture2D","TEXTURE_2D","getHandle","removeColorBuffer","splice","setDepthBuffer","DEPTH_ATTACHMENT","removeDepthBuffer","getGLFramebuffer","setOpenGLRenderWindow","rw","releaseGraphicsResources","getContext","deleteFramebuffer","getSize","size","populateFramebuffer","newInstance","setMinificationFilter","LINEAR","setMagnificationFilter","create2DFromRaw","UNSIGNED_CHAR","depthTexture","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","getColorTexture","DEFAULT_VALUES","previousReadBinding","previousDrawBuffer","previousReadBuffer","extend","initialValues","Object","assign","obj","getArray"],"sources":["/Users/nicolerussack/CSCI401/CSCI401TissueSimulation/my-version/node_modules/vtk.js/Sources/Rendering/OpenGL/Framebuffer/index.js"],"sourcesContent":["import * as macro from 'vtk.js/Sources/macros';\nimport vtkOpenGLTexture from 'vtk.js/Sources/Rendering/OpenGL/Texture';\nimport { VtkDataTypes } from 'vtk.js/Sources/Common/Core/DataArray/Constants';\nimport { Filter } from 'vtk.js/Sources/Rendering/OpenGL/Texture/Constants';\n\n// ----------------------------------------------------------------------------\n// vtkFramebuffer methods\n// ----------------------------------------------------------------------------\nfunction vtkFramebuffer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkFramebuffer');\n\n  publicAPI.getBothMode = () => model.context.FRAMEBUFFER;\n  // publicAPI.getDrawMode = () => model.context.DRAW_FRAMEBUFFER;\n  // publicAPI.getReadMode = () => model.context.READ_FRAMEBUFFER;\n\n  publicAPI.saveCurrentBindingsAndBuffers = (modeIn) => {\n    const mode =\n      typeof modeIn !== 'undefined' ? modeIn : publicAPI.getBothMode();\n    publicAPI.saveCurrentBindings(mode);\n    publicAPI.saveCurrentBuffers(mode);\n  };\n\n  publicAPI.saveCurrentBindings = (modeIn) => {\n    if (!model.context) {\n      macro.vtkErrorMacro(\n        'you must set the OpenGLRenderWindow before calling saveCurrentBindings'\n      );\n      return;\n    }\n\n    const gl = model.context;\n    model.previousDrawBinding = gl.getParameter(\n      model.context.FRAMEBUFFER_BINDING\n    );\n    model.previousActiveFramebuffer =\n      model._openGLRenderWindow.getActiveFramebuffer();\n  };\n\n  publicAPI.saveCurrentBuffers = (modeIn) => {\n    // noop on webgl 1\n  };\n\n  publicAPI.restorePreviousBindingsAndBuffers = (modeIn) => {\n    const mode =\n      typeof modeIn !== 'undefined' ? modeIn : publicAPI.getBothMode();\n    publicAPI.restorePreviousBindings(mode);\n    publicAPI.restorePreviousBuffers(mode);\n  };\n\n  publicAPI.restorePreviousBindings = (modeIn) => {\n    if (!model.context) {\n      macro.vtkErrorMacro(\n        'you must set the OpenGLRenderWindow before calling restorePreviousBindings'\n      );\n      return;\n    }\n\n    const gl = model.context;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, model.previousDrawBinding);\n    model._openGLRenderWindow.setActiveFramebuffer(\n      model.previousActiveFramebuffer\n    );\n  };\n\n  publicAPI.restorePreviousBuffers = (modeIn) => {\n    // currently a noop on webgl1\n  };\n\n  publicAPI.bind = (modeArg = null) => {\n    let mode = modeArg;\n    if (mode === null) {\n      mode = model.context.FRAMEBUFFER;\n    }\n    model.context.bindFramebuffer(mode, model.glFramebuffer);\n    for (let i = 0; i < model.colorBuffers.length; i++) {\n      model.colorBuffers[i].bind();\n    }\n    model._openGLRenderWindow.setActiveFramebuffer(publicAPI);\n  };\n\n  publicAPI.create = (width, height) => {\n    if (!model.context) {\n      macro.vtkErrorMacro(\n        'you must set the OpenGLRenderWindow before calling create'\n      );\n      return;\n    }\n\n    model.glFramebuffer = model.context.createFramebuffer();\n    model.glFramebuffer.width = width;\n    model.glFramebuffer.height = height;\n  };\n\n  publicAPI.setColorBuffer = (texture, attachment = 0) => {\n    const gl = model.context;\n\n    if (!gl) {\n      macro.vtkErrorMacro(\n        'you must set the OpenGLRenderWindow before calling setColorBuffer'\n      );\n      return;\n    }\n\n    let glAttachment = gl.COLOR_ATTACHMENT0;\n    if (attachment > 0) {\n      if (model._openGLRenderWindow.getWebgl2()) {\n        glAttachment += attachment;\n      } else {\n        macro.vtkErrorMacro(\n          'Using multiple framebuffer attachments requires WebGL 2'\n        );\n        return;\n      }\n    }\n    model.colorBuffers[attachment] = texture;\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      glAttachment,\n      gl.TEXTURE_2D,\n      texture.getHandle(),\n      0\n    );\n  };\n\n  publicAPI.removeColorBuffer = (attachment = 0) => {\n    const gl = model.context;\n\n    if (!gl) {\n      macro.vtkErrorMacro(\n        'you must set the OpenGLRenderWindow before calling removeColorBuffer'\n      );\n      return;\n    }\n\n    let glAttachment = gl.COLOR_ATTACHMENT0;\n    if (attachment > 0) {\n      if (model._openGLRenderWindow.getWebgl2()) {\n        glAttachment += attachment;\n      } else {\n        macro.vtkErrorMacro(\n          'Using multiple framebuffer attachments requires WebGL 2'\n        );\n        return;\n      }\n    }\n\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      glAttachment,\n      gl.TEXTURE_2D,\n      null,\n      0\n    );\n\n    model.colorBuffers = model.colorBuffers.splice(attachment, 1);\n  };\n\n  publicAPI.setDepthBuffer = (texture) => {\n    if (!model.context) {\n      macro.vtkErrorMacro(\n        'you must set the OpenGLRenderWindow before calling setDepthBuffer'\n      );\n      return;\n    }\n\n    if (model._openGLRenderWindow.getWebgl2()) {\n      const gl = model.context;\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.DEPTH_ATTACHMENT,\n        gl.TEXTURE_2D,\n        texture.getHandle(),\n        0\n      );\n    } else {\n      macro.vtkErrorMacro(\n        'Attaching depth buffer textures to fbo requires WebGL 2'\n      );\n    }\n  };\n\n  publicAPI.removeDepthBuffer = () => {\n    if (!model.context) {\n      macro.vtkErrorMacro(\n        'you must set the OpenGLRenderWindow before calling removeDepthBuffer'\n      );\n      return;\n    }\n\n    if (model._openGLRenderWindow.getWebgl2()) {\n      const gl = model.context;\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.DEPTH_ATTACHMENT,\n        gl.TEXTURE_2D,\n        null,\n        0\n      );\n    } else {\n      macro.vtkErrorMacro(\n        'Attaching depth buffer textures to framebuffers requires WebGL 2'\n      );\n    }\n  };\n\n  publicAPI.getGLFramebuffer = () => model.glFramebuffer;\n\n  publicAPI.setOpenGLRenderWindow = (rw) => {\n    if (model._openGLRenderWindow === rw) {\n      return;\n    }\n    publicAPI.releaseGraphicsResources();\n    model._openGLRenderWindow = rw;\n    model.context = null;\n    if (rw) {\n      model.context = model._openGLRenderWindow.getContext();\n    }\n  };\n\n  publicAPI.releaseGraphicsResources = () => {\n    if (model.glFramebuffer) {\n      model.context.deleteFramebuffer(model.glFramebuffer);\n    }\n  };\n\n  publicAPI.getSize = () => {\n    const size = [0, 0];\n    if (model.glFramebuffer !== null) {\n      size[0] = model.glFramebuffer.width;\n      size[1] = model.glFramebuffer.height;\n    }\n    return size;\n  };\n\n  publicAPI.populateFramebuffer = () => {\n    if (!model.context) {\n      macro.vtkErrorMacro(\n        'you must set the OpenGLRenderWindow before calling populateFrameBuffer'\n      );\n      return;\n    }\n\n    publicAPI.bind();\n    const gl = model.context;\n\n    const texture = vtkOpenGLTexture.newInstance();\n    texture.setOpenGLRenderWindow(model._openGLRenderWindow);\n    texture.setMinificationFilter(Filter.LINEAR);\n    texture.setMagnificationFilter(Filter.LINEAR);\n    texture.create2DFromRaw(\n      model.glFramebuffer.width,\n      model.glFramebuffer.height,\n      4,\n      VtkDataTypes.UNSIGNED_CHAR,\n      null\n    );\n    publicAPI.setColorBuffer(texture);\n\n    // for now do not count on having a depth buffer texture\n    // as they are not standard webgl 1\n    model.depthTexture = gl.createRenderbuffer();\n    gl.bindRenderbuffer(gl.RENDERBUFFER, model.depthTexture);\n    gl.renderbufferStorage(\n      gl.RENDERBUFFER,\n      gl.DEPTH_COMPONENT16,\n      model.glFramebuffer.width,\n      model.glFramebuffer.height\n    );\n    gl.framebufferRenderbuffer(\n      gl.FRAMEBUFFER,\n      gl.DEPTH_ATTACHMENT,\n      gl.RENDERBUFFER,\n      model.depthTexture\n    );\n  };\n\n  // For backwards compatibility. Use getColorBuffers()[0] going forward.\n  publicAPI.getColorTexture = () => model.colorBuffers[0];\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\nconst DEFAULT_VALUES = {\n  // _openGLRenderWindow: null,\n  glFramebuffer: null,\n  colorBuffers: null,\n  depthTexture: null,\n  previousDrawBinding: 0,\n  previousReadBinding: 0,\n  previousDrawBuffer: 0,\n  previousReadBuffer: 0,\n  previousActiveFramebuffer: null,\n};\n\n// ----------------------------------------------------------------------------\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n\n  if (model.colorBuffers) {\n    macro.vtkErrorMacro(\n      'you cannot initialize colorBuffers through the constructor. You should call setColorBuffer() instead.'\n    );\n  }\n  model.colorBuffers = [];\n  macro.getArray(publicAPI, model, ['colorBuffers']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n  vtkFramebuffer(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\nexport const newInstance = macro.newInstance(extend, 'vtkFramebuffer');\n\n// ----------------------------------------------------------------------------\nexport default { newInstance, extend };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}