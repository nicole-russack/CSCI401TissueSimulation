{"ast":null,"code":"import { vec3, mat4 } from 'gl-matrix';\nimport macro from 'vtk.js/Sources/macros';\nimport vtkBoundingBox from 'vtk.js/Sources/Common/DataModel/BoundingBox';\nimport vtkProp3D from 'vtk.js/Sources/Rendering/Core/Prop3D';\nimport vtkProperty from 'vtk.js/Sources/Rendering/Core/Property';\nconst {\n  vtkDebugMacro\n} = macro; // ----------------------------------------------------------------------------\n// vtkActor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkActor(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkActor'); // Capture 'parentClass' api for internal use\n\n  const superClass = { ...publicAPI\n  };\n\n  publicAPI.getActors = () => [publicAPI];\n\n  publicAPI.getIsOpaque = () => {\n    if (model.forceOpaque) {\n      return true;\n    }\n\n    if (model.forceTranslucent) {\n      return false;\n    } // make sure we have a property\n\n\n    if (!model.property) {\n      // force creation of a property\n      publicAPI.getProperty();\n    }\n\n    let isOpaque = model.property.getOpacity() >= 1.0; // are we using an opaque texture, if any?\n\n    isOpaque = isOpaque && (!model.texture || !model.texture.isTranslucent()); // are we using an opaque scalar array, if any?\n\n    isOpaque = isOpaque && (!model.mapper || model.mapper.getIsOpaque());\n    return isOpaque;\n  };\n\n  publicAPI.hasTranslucentPolygonalGeometry = () => {\n    if (model.mapper === null) {\n      return false;\n    } // make sure we have a property\n\n\n    if (model.property === null) {\n      // force creation of a property\n      publicAPI.setProperty(publicAPI.makeProperty());\n    } // is this actor opaque ?\n\n\n    return !publicAPI.getIsOpaque();\n  };\n\n  publicAPI.makeProperty = vtkProperty.newInstance;\n\n  publicAPI.getProperty = () => {\n    if (model.property === null) {\n      model.property = publicAPI.makeProperty();\n    }\n\n    return model.property;\n  };\n\n  publicAPI.getBounds = () => {\n    if (model.mapper === null) {\n      return model.bounds;\n    } // Check for the special case when the mapper's bounds are unknown\n\n\n    const bds = model.mapper.getBounds();\n\n    if (!bds || bds.length !== 6) {\n      return bds;\n    } // Check for the special case when the actor is empty.\n\n\n    if (bds[0] > bds[1]) {\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\n\n      model.bounds = [1, -1, 1, -1, 1, -1];\n      model.boundsMTime.modified();\n      return bds;\n    } // Check if we have cached values for these bounds - we cache the\n    // values returned by model.mapper.getBounds() and we store the time\n    // of caching. If the values returned this time are different, or\n    // the modified time of this class is newer than the cached time,\n    // then we need to rebuild.\n\n\n    if (!model.mapperBounds || bds[0] !== model.mapperBounds[0] || bds[1] !== model.mapperBounds[1] || bds[2] !== model.mapperBounds[2] || bds[3] !== model.mapperBounds[3] || bds[4] !== model.mapperBounds[4] || bds[5] !== model.mapperBounds[5] || publicAPI.getMTime() > model.boundsMTime.getMTime()) {\n      vtkDebugMacro('Recomputing bounds...');\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\n\n      const bbox = [];\n      vtkBoundingBox.getCorners(bds, bbox);\n      publicAPI.computeMatrix();\n      const tmp4 = new Float64Array(16);\n      mat4.transpose(tmp4, model.matrix);\n      bbox.forEach(pt => vec3.transformMat4(pt, pt, tmp4));\n      /* eslint-disable no-multi-assign */\n\n      model.bounds[0] = model.bounds[2] = model.bounds[4] = Number.MAX_VALUE;\n      model.bounds[1] = model.bounds[3] = model.bounds[5] = -Number.MAX_VALUE;\n      /* eslint-enable no-multi-assign */\n\n      model.bounds = model.bounds.map((d, i) => i % 2 === 0 ? bbox.reduce((a, b) => a > b[i / 2] ? b[i / 2] : a, d) : bbox.reduce((a, b) => a < b[(i - 1) / 2] ? b[(i - 1) / 2] : a, d));\n      model.boundsMTime.modified();\n    }\n\n    return model.bounds;\n  };\n\n  publicAPI.getMTime = () => {\n    let mt = superClass.getMTime();\n\n    if (model.property !== null) {\n      const time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n    }\n\n    if (model.backfaceProperty !== null) {\n      const time = model.backfaceProperty.getMTime();\n      mt = time > mt ? time : mt;\n    }\n\n    return mt;\n  };\n\n  publicAPI.getRedrawMTime = () => {\n    let mt = model.mtime;\n\n    if (model.mapper !== null) {\n      let time = model.mapper.getMTime();\n      mt = time > mt ? time : mt;\n\n      if (model.mapper.getInput() !== null) {\n        // FIXME !!! getInputAlgorithm / getInput\n        model.mapper.getInputAlgorithm().update();\n        time = model.mapper.getInput().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n\n    return mt;\n  };\n\n  publicAPI.getSupportsSelection = () => model.mapper ? model.mapper.getSupportsSelection() : false;\n\n  publicAPI.processSelectorPixelBuffers = (selector, pixelOffsets) => {\n    if (model.mapper && model.mapper.processSelectorPixelBuffers) {\n      model.mapper.processSelectorPixelBuffers(selector, pixelOffsets);\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nconst DEFAULT_VALUES = {\n  mapper: null,\n  property: null,\n  backfaceProperty: null,\n  forceOpaque: false,\n  forceTranslucent: false,\n  bounds: [1, -1, 1, -1, 1, -1]\n}; // ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkProp3D.extend(publicAPI, model, initialValues); // vtkTimeStamp\n\n  model.boundsMTime = {};\n  macro.obj(model.boundsMTime); // Build VTK API\n\n  macro.set(publicAPI, model, ['property']);\n  macro.setGet(publicAPI, model, ['backfaceProperty', 'forceOpaque', 'forceTranslucent', 'mapper']); // Object methods\n\n  vtkActor(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkActor'); // ----------------------------------------------------------------------------\n\nexport default {\n  newInstance,\n  extend\n};","map":{"version":3,"names":["vec3","mat4","macro","vtkBoundingBox","vtkProp3D","vtkProperty","vtkDebugMacro","vtkActor","publicAPI","model","classHierarchy","push","superClass","getActors","getIsOpaque","forceOpaque","forceTranslucent","property","getProperty","isOpaque","getOpacity","texture","isTranslucent","mapper","hasTranslucentPolygonalGeometry","setProperty","makeProperty","newInstance","getBounds","bounds","bds","length","mapperBounds","concat","boundsMTime","modified","getMTime","bbox","getCorners","computeMatrix","tmp4","Float64Array","transpose","matrix","forEach","pt","transformMat4","Number","MAX_VALUE","map","d","i","reduce","a","b","mt","time","backfaceProperty","getRedrawMTime","mtime","getInput","getInputAlgorithm","update","getSupportsSelection","processSelectorPixelBuffers","selector","pixelOffsets","DEFAULT_VALUES","extend","initialValues","Object","assign","obj","set","setGet"],"sources":["/Users/nicolerussack/CSCI401/CSCI401TissueSimulation/my-version/node_modules/vtk.js/Sources/Rendering/Core/Actor/index.js"],"sourcesContent":["import { vec3, mat4 } from 'gl-matrix';\nimport macro from 'vtk.js/Sources/macros';\nimport vtkBoundingBox from 'vtk.js/Sources/Common/DataModel/BoundingBox';\nimport vtkProp3D from 'vtk.js/Sources/Rendering/Core/Prop3D';\nimport vtkProperty from 'vtk.js/Sources/Rendering/Core/Property';\n\nconst { vtkDebugMacro } = macro;\n\n// ----------------------------------------------------------------------------\n// vtkActor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkActor(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkActor');\n\n  // Capture 'parentClass' api for internal use\n  const superClass = { ...publicAPI };\n\n  publicAPI.getActors = () => [publicAPI];\n\n  publicAPI.getIsOpaque = () => {\n    if (model.forceOpaque) {\n      return true;\n    }\n    if (model.forceTranslucent) {\n      return false;\n    }\n    // make sure we have a property\n    if (!model.property) {\n      // force creation of a property\n      publicAPI.getProperty();\n    }\n\n    let isOpaque = model.property.getOpacity() >= 1.0;\n\n    // are we using an opaque texture, if any?\n    isOpaque = isOpaque && (!model.texture || !model.texture.isTranslucent());\n\n    // are we using an opaque scalar array, if any?\n    isOpaque = isOpaque && (!model.mapper || model.mapper.getIsOpaque());\n\n    return isOpaque;\n  };\n\n  publicAPI.hasTranslucentPolygonalGeometry = () => {\n    if (model.mapper === null) {\n      return false;\n    }\n    // make sure we have a property\n    if (model.property === null) {\n      // force creation of a property\n      publicAPI.setProperty(publicAPI.makeProperty());\n    }\n\n    // is this actor opaque ?\n    return !publicAPI.getIsOpaque();\n  };\n\n  publicAPI.makeProperty = vtkProperty.newInstance;\n\n  publicAPI.getProperty = () => {\n    if (model.property === null) {\n      model.property = publicAPI.makeProperty();\n    }\n    return model.property;\n  };\n\n  publicAPI.getBounds = () => {\n    if (model.mapper === null) {\n      return model.bounds;\n    }\n\n    // Check for the special case when the mapper's bounds are unknown\n    const bds = model.mapper.getBounds();\n    if (!bds || bds.length !== 6) {\n      return bds;\n    }\n\n    // Check for the special case when the actor is empty.\n    if (bds[0] > bds[1]) {\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\n      model.bounds = [1, -1, 1, -1, 1, -1];\n      model.boundsMTime.modified();\n      return bds;\n    }\n\n    // Check if we have cached values for these bounds - we cache the\n    // values returned by model.mapper.getBounds() and we store the time\n    // of caching. If the values returned this time are different, or\n    // the modified time of this class is newer than the cached time,\n    // then we need to rebuild.\n    if (\n      !model.mapperBounds ||\n      bds[0] !== model.mapperBounds[0] ||\n      bds[1] !== model.mapperBounds[1] ||\n      bds[2] !== model.mapperBounds[2] ||\n      bds[3] !== model.mapperBounds[3] ||\n      bds[4] !== model.mapperBounds[4] ||\n      bds[5] !== model.mapperBounds[5] ||\n      publicAPI.getMTime() > model.boundsMTime.getMTime()\n    ) {\n      vtkDebugMacro('Recomputing bounds...');\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\n      const bbox = [];\n      vtkBoundingBox.getCorners(bds, bbox);\n\n      publicAPI.computeMatrix();\n      const tmp4 = new Float64Array(16);\n      mat4.transpose(tmp4, model.matrix);\n      bbox.forEach((pt) => vec3.transformMat4(pt, pt, tmp4));\n\n      /* eslint-disable no-multi-assign */\n      model.bounds[0] = model.bounds[2] = model.bounds[4] = Number.MAX_VALUE;\n      model.bounds[1] = model.bounds[3] = model.bounds[5] = -Number.MAX_VALUE;\n      /* eslint-enable no-multi-assign */\n\n      model.bounds = model.bounds.map((d, i) =>\n        i % 2 === 0\n          ? bbox.reduce((a, b) => (a > b[i / 2] ? b[i / 2] : a), d)\n          : bbox.reduce((a, b) => (a < b[(i - 1) / 2] ? b[(i - 1) / 2] : a), d)\n      );\n\n      model.boundsMTime.modified();\n    }\n    return model.bounds;\n  };\n\n  publicAPI.getMTime = () => {\n    let mt = superClass.getMTime();\n    if (model.property !== null) {\n      const time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n    }\n\n    if (model.backfaceProperty !== null) {\n      const time = model.backfaceProperty.getMTime();\n      mt = time > mt ? time : mt;\n    }\n\n    return mt;\n  };\n\n  publicAPI.getRedrawMTime = () => {\n    let mt = model.mtime;\n    if (model.mapper !== null) {\n      let time = model.mapper.getMTime();\n      mt = time > mt ? time : mt;\n      if (model.mapper.getInput() !== null) {\n        // FIXME !!! getInputAlgorithm / getInput\n        model.mapper.getInputAlgorithm().update();\n        time = model.mapper.getInput().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n    return mt;\n  };\n\n  publicAPI.getSupportsSelection = () =>\n    model.mapper ? model.mapper.getSupportsSelection() : false;\n\n  publicAPI.processSelectorPixelBuffers = (selector, pixelOffsets) => {\n    if (model.mapper && model.mapper.processSelectorPixelBuffers) {\n      model.mapper.processSelectorPixelBuffers(selector, pixelOffsets);\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  mapper: null,\n  property: null,\n  backfaceProperty: null,\n\n  forceOpaque: false,\n  forceTranslucent: false,\n\n  bounds: [1, -1, 1, -1, 1, -1],\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkProp3D.extend(publicAPI, model, initialValues);\n\n  // vtkTimeStamp\n  model.boundsMTime = {};\n  macro.obj(model.boundsMTime);\n\n  // Build VTK API\n  macro.set(publicAPI, model, ['property']);\n  macro.setGet(publicAPI, model, [\n    'backfaceProperty',\n    'forceOpaque',\n    'forceTranslucent',\n    'mapper',\n  ]);\n\n  // Object methods\n  vtkActor(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkActor');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}