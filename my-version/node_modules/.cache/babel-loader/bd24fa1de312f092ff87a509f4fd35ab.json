{"ast":null,"code":"import macro from 'vtk.js/Sources/macros'; // ----------------------------------------------------------------------------\n// vtkTexture methods\n// ----------------------------------------------------------------------------\n\nfunction vtkTexture(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkTexture');\n\n  publicAPI.imageLoaded = () => {\n    model.image.removeEventListener('load', publicAPI.imageLoaded);\n    model.imageLoaded = true;\n    publicAPI.modified();\n  };\n\n  publicAPI.setJsImageData = imageData => {\n    if (model.jsImageData === imageData) {\n      return;\n    } // clear other entries\n\n\n    if (imageData !== null) {\n      publicAPI.setInputData(null);\n      publicAPI.setInputConnection(null);\n      model.image = null;\n      model.canvas = null;\n    }\n\n    model.jsImageData = imageData;\n    model.imageLoaded = true;\n    publicAPI.modified();\n  };\n\n  publicAPI.setCanvas = canvas => {\n    if (model.canvas === canvas) {\n      return;\n    } // clear other entries\n\n\n    if (canvas !== null) {\n      publicAPI.setInputData(null);\n      publicAPI.setInputConnection(null);\n      model.image = null;\n      model.jsImageData = null;\n    }\n\n    model.canvas = canvas;\n    publicAPI.modified();\n  };\n\n  publicAPI.setImage = image => {\n    if (model.image === image) {\n      return;\n    } // clear other entries\n\n\n    if (image !== null) {\n      publicAPI.setInputData(null);\n      publicAPI.setInputConnection(null);\n      model.canvas = null;\n      model.jsImageData = null;\n    }\n\n    model.image = image;\n    model.imageLoaded = false;\n\n    if (image.complete) {\n      publicAPI.imageLoaded();\n    } else {\n      image.addEventListener('load', publicAPI.imageLoaded);\n    }\n\n    publicAPI.modified();\n  };\n\n  publicAPI.getDimensionality = () => {\n    let width = 0;\n    let height = 0;\n    let depth = 1;\n\n    if (publicAPI.getInputData()) {\n      const data = publicAPI.getInputData();\n      width = data.getDimensions()[0];\n      height = data.getDimensions()[1];\n      depth = data.getDimensions()[2];\n    }\n\n    if (model.jsImageData) {\n      width = model.jsImageData.width;\n      height = model.jsImageData.height;\n    }\n\n    if (model.canvas) {\n      width = model.canvas.width;\n      height = model.canvas.height;\n    }\n\n    if (model.image) {\n      width = model.image.width;\n      height = model.image.height;\n    }\n\n    const dimensionality = (width > 1) + (height > 1) + (depth > 1);\n    return dimensionality;\n  };\n\n  publicAPI.getInputAsJsImageData = () => {\n    if (!model.imageLoaded || publicAPI.getInputData()) return null;\n\n    if (model.jsImageData) {\n      return model.jsImageData();\n    }\n\n    if (model.canvas) {\n      const context = model.canvas.getContext('2d');\n      const imageData = context.getImageData(0, 0, model.canvas.width, model.canvas.height);\n      return imageData;\n    }\n\n    if (model.image) {\n      const canvas = document.createElement('canvas');\n      canvas.width = model.image.width;\n      canvas.height = model.image.height;\n      const context = canvas.getContext('2d');\n      context.translate(0, canvas.height);\n      context.scale(1, -1);\n      context.drawImage(model.image, 0, 0, model.image.width, model.image.height);\n      const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n      return imageData;\n    }\n\n    return null;\n  };\n} // Use nativeArray instead of self\n\n\nconst generateMipmaps = (nativeArray, width, height, level) => {\n  // TODO: FIX UNEVEN TEXTURE MIP GENERATION:\n  // When textures don't have standard ratios, higher mip levels\n  // result in their color chanels getting messed up and shifting\n  // 3x3 gaussian kernel\n  const g3m = [1, 2, 1]; // eslint-disable-line\n\n  const g3w = 4; // eslint-disable-line\n  // 5x5 gaussian kernel\n\n  const g5m = [1, 2, 4, 2, 1]; // eslint-disable-line\n\n  const g5w = 10; // eslint-disable-line\n  // 7x7 gaussian kernel\n\n  const g7m = [1, 2, 6, 8, 6, 2, 1]; // eslint-disable-line\n\n  const g7w = 26; // eslint-disable-line\n\n  const kernel = g3m;\n  const kernelWeight = g3w;\n  const hs = nativeArray.length / (width * height); // TODO: support for textures with depth more than 1\n\n  let currentWidth = width;\n  let currentHeight = height;\n  let imageData = nativeArray;\n  const maps = [imageData];\n\n  for (let i = 0; i < level; i++) {\n    const oldData = [...imageData];\n    currentWidth /= 2;\n    currentHeight /= 2;\n    imageData = new Uint8ClampedArray(currentWidth * currentHeight * hs);\n    const vs = hs * currentWidth; // Scale down\n\n    let shift = 0;\n\n    for (let p = 0; p < imageData.length; p += hs) {\n      if (p % vs === 0) {\n        shift += 2 * hs * currentWidth;\n      }\n\n      for (let c = 0; c < hs; c++) {\n        let sample = oldData[shift + c];\n        sample += oldData[shift + hs + c];\n        sample += oldData[shift - 2 * vs + c];\n        sample += oldData[shift - 2 * vs + hs + c];\n        sample /= 4;\n        imageData[p + c] = sample;\n      }\n\n      shift += 2 * hs;\n    } // Horizontal Pass\n\n\n    let dataCopy = [...imageData];\n\n    for (let p = 0; p < imageData.length; p += hs) {\n      for (let c = 0; c < hs; c++) {\n        let x = -(kernel.length - 1) / 2;\n        let kw = kernelWeight;\n        let value = 0.0;\n\n        for (let k = 0; k < kernel.length; k++) {\n          let index = p + c + x * hs;\n          const lineShift = index % vs - (p + c) % vs;\n          if (lineShift > hs) index += vs;\n          if (lineShift < -hs) index -= vs;\n\n          if (dataCopy[index]) {\n            value += dataCopy[index] * kernel[k];\n          } else {\n            kw -= kernel[k];\n          }\n\n          x += 1;\n        }\n\n        imageData[p + c] = value / kw;\n      }\n    } // Vertical Pass\n\n\n    dataCopy = [...imageData];\n\n    for (let p = 0; p < imageData.length; p += hs) {\n      for (let c = 0; c < hs; c++) {\n        let x = -(kernel.length - 1) / 2;\n        let kw = kernelWeight;\n        let value = 0.0;\n\n        for (let k = 0; k < kernel.length; k++) {\n          const index = p + c + x * vs;\n\n          if (dataCopy[index]) {\n            value += dataCopy[index] * kernel[k];\n          } else {\n            kw -= kernel[k];\n          }\n\n          x += 1;\n        }\n\n        imageData[p + c] = value / kw;\n      }\n    }\n\n    maps.push(imageData);\n  }\n\n  return maps;\n}; // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nconst DEFAULT_VALUES = {\n  image: null,\n  canvas: null,\n  jsImageData: null,\n  imageLoaded: false,\n  repeat: false,\n  interpolate: false,\n  edgeClamp: false,\n  mipLevel: 0\n}; // ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.algo(publicAPI, model, 6, 0);\n  macro.get(publicAPI, model, ['canvas', 'image', 'jsImageData', 'imageLoaded']);\n  macro.setGet(publicAPI, model, ['repeat', 'edgeClamp', 'interpolate', 'mipLevel']);\n  vtkTexture(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkTexture');\nexport const STATIC = {\n  generateMipmaps\n}; // ----------------------------------------------------------------------------\n\nexport default {\n  newInstance,\n  extend,\n  ...STATIC\n};","map":{"version":3,"names":["macro","vtkTexture","publicAPI","model","classHierarchy","push","imageLoaded","image","removeEventListener","modified","setJsImageData","imageData","jsImageData","setInputData","setInputConnection","canvas","setCanvas","setImage","complete","addEventListener","getDimensionality","width","height","depth","getInputData","data","getDimensions","dimensionality","getInputAsJsImageData","context","getContext","getImageData","document","createElement","translate","scale","drawImage","generateMipmaps","nativeArray","level","g3m","g3w","g5m","g5w","g7m","g7w","kernel","kernelWeight","hs","length","currentWidth","currentHeight","maps","i","oldData","Uint8ClampedArray","vs","shift","p","c","sample","dataCopy","x","kw","value","k","index","lineShift","DEFAULT_VALUES","repeat","interpolate","edgeClamp","mipLevel","extend","initialValues","Object","assign","obj","algo","get","setGet","newInstance","STATIC"],"sources":["/Users/nicolerussack/CSCI401/CSCI401TissueSimulation/my-version/node_modules/vtk.js/Sources/Rendering/Core/Texture/index.js"],"sourcesContent":["import macro from 'vtk.js/Sources/macros';\n\n// ----------------------------------------------------------------------------\n// vtkTexture methods\n// ----------------------------------------------------------------------------\n\nfunction vtkTexture(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkTexture');\n\n  publicAPI.imageLoaded = () => {\n    model.image.removeEventListener('load', publicAPI.imageLoaded);\n    model.imageLoaded = true;\n    publicAPI.modified();\n  };\n\n  publicAPI.setJsImageData = (imageData) => {\n    if (model.jsImageData === imageData) {\n      return;\n    }\n\n    // clear other entries\n    if (imageData !== null) {\n      publicAPI.setInputData(null);\n      publicAPI.setInputConnection(null);\n      model.image = null;\n      model.canvas = null;\n    }\n\n    model.jsImageData = imageData;\n    model.imageLoaded = true;\n    publicAPI.modified();\n  };\n\n  publicAPI.setCanvas = (canvas) => {\n    if (model.canvas === canvas) {\n      return;\n    }\n\n    // clear other entries\n    if (canvas !== null) {\n      publicAPI.setInputData(null);\n      publicAPI.setInputConnection(null);\n      model.image = null;\n      model.jsImageData = null;\n    }\n\n    model.canvas = canvas;\n    publicAPI.modified();\n  };\n\n  publicAPI.setImage = (image) => {\n    if (model.image === image) {\n      return;\n    }\n\n    // clear other entries\n    if (image !== null) {\n      publicAPI.setInputData(null);\n      publicAPI.setInputConnection(null);\n      model.canvas = null;\n      model.jsImageData = null;\n    }\n\n    model.image = image;\n    model.imageLoaded = false;\n\n    if (image.complete) {\n      publicAPI.imageLoaded();\n    } else {\n      image.addEventListener('load', publicAPI.imageLoaded);\n    }\n\n    publicAPI.modified();\n  };\n\n  publicAPI.getDimensionality = () => {\n    let width = 0;\n    let height = 0;\n    let depth = 1;\n\n    if (publicAPI.getInputData()) {\n      const data = publicAPI.getInputData();\n      width = data.getDimensions()[0];\n      height = data.getDimensions()[1];\n      depth = data.getDimensions()[2];\n    }\n    if (model.jsImageData) {\n      width = model.jsImageData.width;\n      height = model.jsImageData.height;\n    }\n    if (model.canvas) {\n      width = model.canvas.width;\n      height = model.canvas.height;\n    }\n    if (model.image) {\n      width = model.image.width;\n      height = model.image.height;\n    }\n    const dimensionality = (width > 1) + (height > 1) + (depth > 1);\n    return dimensionality;\n  };\n\n  publicAPI.getInputAsJsImageData = () => {\n    if (!model.imageLoaded || publicAPI.getInputData()) return null;\n\n    if (model.jsImageData) {\n      return model.jsImageData();\n    }\n    if (model.canvas) {\n      const context = model.canvas.getContext('2d');\n      const imageData = context.getImageData(\n        0,\n        0,\n        model.canvas.width,\n        model.canvas.height\n      );\n      return imageData;\n    }\n    if (model.image) {\n      const canvas = document.createElement('canvas');\n      canvas.width = model.image.width;\n      canvas.height = model.image.height;\n      const context = canvas.getContext('2d');\n      context.translate(0, canvas.height);\n      context.scale(1, -1);\n      context.drawImage(\n        model.image,\n        0,\n        0,\n        model.image.width,\n        model.image.height\n      );\n      const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n      return imageData;\n    }\n\n    return null;\n  };\n}\n\n// Use nativeArray instead of self\nconst generateMipmaps = (nativeArray, width, height, level) => {\n  // TODO: FIX UNEVEN TEXTURE MIP GENERATION:\n  // When textures don't have standard ratios, higher mip levels\n  // result in their color chanels getting messed up and shifting\n  // 3x3 gaussian kernel\n  const g3m = [1, 2, 1]; // eslint-disable-line\n  const g3w = 4; // eslint-disable-line\n  // 5x5 gaussian kernel\n  const g5m = [1, 2, 4, 2, 1]; // eslint-disable-line\n  const g5w = 10; // eslint-disable-line\n  // 7x7 gaussian kernel\n  const g7m = [1, 2, 6, 8, 6, 2, 1]; // eslint-disable-line\n  const g7w = 26; // eslint-disable-line\n\n  const kernel = g3m;\n  const kernelWeight = g3w;\n\n  const hs = nativeArray.length / (width * height); // TODO: support for textures with depth more than 1\n  let currentWidth = width;\n  let currentHeight = height;\n  let imageData = nativeArray;\n  const maps = [imageData];\n\n  for (let i = 0; i < level; i++) {\n    const oldData = [...imageData];\n    currentWidth /= 2;\n    currentHeight /= 2;\n    imageData = new Uint8ClampedArray(currentWidth * currentHeight * hs);\n    const vs = hs * currentWidth;\n\n    // Scale down\n    let shift = 0;\n    for (let p = 0; p < imageData.length; p += hs) {\n      if (p % vs === 0) {\n        shift += 2 * hs * currentWidth;\n      }\n\n      for (let c = 0; c < hs; c++) {\n        let sample = oldData[shift + c];\n        sample += oldData[shift + hs + c];\n        sample += oldData[shift - 2 * vs + c];\n        sample += oldData[shift - 2 * vs + hs + c];\n        sample /= 4;\n        imageData[p + c] = sample;\n      }\n\n      shift += 2 * hs;\n    }\n\n    // Horizontal Pass\n    let dataCopy = [...imageData];\n    for (let p = 0; p < imageData.length; p += hs) {\n      for (let c = 0; c < hs; c++) {\n        let x = -(kernel.length - 1) / 2;\n        let kw = kernelWeight;\n        let value = 0.0;\n        for (let k = 0; k < kernel.length; k++) {\n          let index = p + c + x * hs;\n          const lineShift = (index % vs) - ((p + c) % vs);\n          if (lineShift > hs) index += vs;\n          if (lineShift < -hs) index -= vs;\n          if (dataCopy[index]) {\n            value += dataCopy[index] * kernel[k];\n          } else {\n            kw -= kernel[k];\n          }\n          x += 1;\n        }\n        imageData[p + c] = value / kw;\n      }\n    }\n    // Vertical Pass\n    dataCopy = [...imageData];\n    for (let p = 0; p < imageData.length; p += hs) {\n      for (let c = 0; c < hs; c++) {\n        let x = -(kernel.length - 1) / 2;\n        let kw = kernelWeight;\n        let value = 0.0;\n        for (let k = 0; k < kernel.length; k++) {\n          const index = p + c + x * vs;\n          if (dataCopy[index]) {\n            value += dataCopy[index] * kernel[k];\n          } else {\n            kw -= kernel[k];\n          }\n          x += 1;\n        }\n        imageData[p + c] = value / kw;\n      }\n    }\n\n    maps.push(imageData);\n  }\n  return maps;\n};\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  image: null,\n  canvas: null,\n  jsImageData: null,\n  imageLoaded: false,\n  repeat: false,\n  interpolate: false,\n  edgeClamp: false,\n  mipLevel: 0,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.algo(publicAPI, model, 6, 0);\n\n  macro.get(publicAPI, model, [\n    'canvas',\n    'image',\n    'jsImageData',\n    'imageLoaded',\n  ]);\n\n  macro.setGet(publicAPI, model, [\n    'repeat',\n    'edgeClamp',\n    'interpolate',\n    'mipLevel',\n  ]);\n\n  vtkTexture(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkTexture');\nexport const STATIC = { generateMipmaps };\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend, ...STATIC };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}