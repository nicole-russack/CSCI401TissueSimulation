{"ast":null,"code":"import macro from 'vtk.js/Sources/macros';\nconst {\n  vtkErrorMacro\n} = macro;\n\nfunction notImplemented(method) {\n  return () => vtkErrorMacro(`vtkViewport::${method} - NOT IMPLEMENTED`);\n} // ----------------------------------------------------------------------------\n// vtkViewport methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkViewport(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkViewport'); // Public API methods\n\n  publicAPI.getViewProps = () => model.props;\n\n  publicAPI.hasViewProp = prop => !!model.props.filter(item => item === prop).length;\n\n  publicAPI.addViewProp = prop => {\n    if (prop && !publicAPI.hasViewProp(prop)) {\n      model.props = model.props.concat(prop);\n    }\n  };\n\n  publicAPI.removeViewProp = prop => {\n    const newPropList = model.props.filter(item => item !== prop);\n\n    if (model.props.length !== newPropList.length) {\n      model.props = newPropList;\n    }\n  };\n\n  publicAPI.removeAllViewProps = () => {\n    model.props = [];\n  }; // this method get all the props including any nested props\n\n\n  function gatherProps(prop) {\n    let allProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    allProps.push(prop);\n    const children = prop.getNestedProps();\n\n    if (children && children.length) {\n      for (let i = 0; i < children.length; i++) {\n        gatherProps(children[i], allProps);\n      }\n    }\n\n    return allProps;\n  }\n\n  publicAPI.getViewPropsWithNestedProps = () => {\n    const allPropsArray = [];\n\n    for (let i = 0; i < model.props.length; i++) {\n      gatherProps(model.props[i], allPropsArray);\n    }\n\n    return allPropsArray;\n  };\n\n  publicAPI.addActor2D = publicAPI.addViewProp;\n\n  publicAPI.removeActor2D = prop => {\n    // VTK way: model.actors2D.RemoveItem(prop);\n    publicAPI.removeViewProp(prop);\n  };\n\n  publicAPI.getActors2D = () => {\n    model.actors2D = [];\n    model.props.forEach(prop => {\n      model.actors2D = model.actors2D.concat(prop.getActors2D());\n    });\n    return model.actors2D;\n  };\n\n  publicAPI.displayToView = () => vtkErrorMacro('call displayToView on your view instead');\n\n  publicAPI.viewToDisplay = () => vtkErrorMacro('callviewtodisplay on your view instead');\n\n  publicAPI.getSize = () => vtkErrorMacro('call getSize on your View instead');\n\n  publicAPI.normalizedDisplayToProjection = (x, y, z) => {\n    // first to normalized viewport\n    const nvp = publicAPI.normalizedDisplayToNormalizedViewport(x, y, z); // then to view\n\n    return publicAPI.normalizedViewportToProjection(nvp[0], nvp[1], nvp[2]);\n  };\n\n  publicAPI.normalizedDisplayToNormalizedViewport = (x, y, z) => {\n    const scale = [model.viewport[2] - model.viewport[0], model.viewport[3] - model.viewport[1]];\n    return [(x - model.viewport[0]) / scale[0], (y - model.viewport[1]) / scale[1], z];\n  };\n\n  publicAPI.normalizedViewportToProjection = (x, y, z) => [x * 2.0 - 1.0, y * 2.0 - 1.0, z * 2.0 - 1.0];\n\n  publicAPI.projectionToNormalizedDisplay = (x, y, z) => {\n    // first to nvp\n    const nvp = publicAPI.projectionToNormalizedViewport(x, y, z); // then to ndp\n\n    return publicAPI.normalizedViewportToNormalizedDisplay(nvp[0], nvp[1], nvp[2]);\n  };\n\n  publicAPI.normalizedViewportToNormalizedDisplay = (x, y, z) => {\n    const scale = [model.viewport[2] - model.viewport[0], model.viewport[3] - model.viewport[1]];\n    return [x * scale[0] + model.viewport[0], y * scale[1] + model.viewport[1], z];\n  };\n\n  publicAPI.projectionToNormalizedViewport = (x, y, z) => [(x + 1.0) * 0.5, (y + 1.0) * 0.5, (z + 1.0) * 0.5];\n\n  publicAPI.PickPropFrom = notImplemented('PickPropFrom');\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nconst DEFAULT_VALUES = {\n  // _vtkWindow: null,\n  background: [0, 0, 0],\n  background2: [0.2, 0.2, 0.2],\n  gradientBackground: false,\n  viewport: [0, 0, 1, 1],\n  aspect: [1, 1],\n  pixelAspect: [1, 1],\n  props: [],\n  actors2D: []\n}; // ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.event(publicAPI, model, 'event');\n  macro.setGetArray(publicAPI, model, ['viewport'], 4);\n  macro.setGetArray(publicAPI, model, ['background', 'background2'], 3);\n  vtkViewport(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkViewport'); // ----------------------------------------------------------------------------\n\nexport default {\n  newInstance,\n  extend\n};","map":{"version":3,"names":["macro","vtkErrorMacro","notImplemented","method","vtkViewport","publicAPI","model","classHierarchy","push","getViewProps","props","hasViewProp","prop","filter","item","length","addViewProp","concat","removeViewProp","newPropList","removeAllViewProps","gatherProps","allProps","children","getNestedProps","i","getViewPropsWithNestedProps","allPropsArray","addActor2D","removeActor2D","getActors2D","actors2D","forEach","displayToView","viewToDisplay","getSize","normalizedDisplayToProjection","x","y","z","nvp","normalizedDisplayToNormalizedViewport","normalizedViewportToProjection","scale","viewport","projectionToNormalizedDisplay","projectionToNormalizedViewport","normalizedViewportToNormalizedDisplay","PickPropFrom","DEFAULT_VALUES","background","background2","gradientBackground","aspect","pixelAspect","extend","initialValues","Object","assign","obj","event","setGetArray","newInstance"],"sources":["/Users/nicolerussack/CSCI401/CSCI401TissueSimulation/my-version/node_modules/vtk.js/Sources/Rendering/Core/Viewport/index.js"],"sourcesContent":["import macro from 'vtk.js/Sources/macros';\n\nconst { vtkErrorMacro } = macro;\n\nfunction notImplemented(method) {\n  return () => vtkErrorMacro(`vtkViewport::${method} - NOT IMPLEMENTED`);\n}\n\n// ----------------------------------------------------------------------------\n// vtkViewport methods\n// ----------------------------------------------------------------------------\n\nfunction vtkViewport(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkViewport');\n\n  // Public API methods\n  publicAPI.getViewProps = () => model.props;\n  publicAPI.hasViewProp = (prop) =>\n    !!model.props.filter((item) => item === prop).length;\n  publicAPI.addViewProp = (prop) => {\n    if (prop && !publicAPI.hasViewProp(prop)) {\n      model.props = model.props.concat(prop);\n    }\n  };\n\n  publicAPI.removeViewProp = (prop) => {\n    const newPropList = model.props.filter((item) => item !== prop);\n    if (model.props.length !== newPropList.length) {\n      model.props = newPropList;\n    }\n  };\n\n  publicAPI.removeAllViewProps = () => {\n    model.props = [];\n  };\n\n  // this method get all the props including any nested props\n  function gatherProps(prop, allProps = []) {\n    allProps.push(prop);\n    const children = prop.getNestedProps();\n    if (children && children.length) {\n      for (let i = 0; i < children.length; i++) {\n        gatherProps(children[i], allProps);\n      }\n    }\n    return allProps;\n  }\n\n  publicAPI.getViewPropsWithNestedProps = () => {\n    const allPropsArray = [];\n    for (let i = 0; i < model.props.length; i++) {\n      gatherProps(model.props[i], allPropsArray);\n    }\n    return allPropsArray;\n  };\n\n  publicAPI.addActor2D = publicAPI.addViewProp;\n  publicAPI.removeActor2D = (prop) => {\n    // VTK way: model.actors2D.RemoveItem(prop);\n    publicAPI.removeViewProp(prop);\n  };\n\n  publicAPI.getActors2D = () => {\n    model.actors2D = [];\n    model.props.forEach((prop) => {\n      model.actors2D = model.actors2D.concat(prop.getActors2D());\n    });\n    return model.actors2D;\n  };\n\n  publicAPI.displayToView = () =>\n    vtkErrorMacro('call displayToView on your view instead');\n  publicAPI.viewToDisplay = () =>\n    vtkErrorMacro('callviewtodisplay on your view instead');\n  publicAPI.getSize = () => vtkErrorMacro('call getSize on your View instead');\n\n  publicAPI.normalizedDisplayToProjection = (x, y, z) => {\n    // first to normalized viewport\n    const nvp = publicAPI.normalizedDisplayToNormalizedViewport(x, y, z);\n\n    // then to view\n    return publicAPI.normalizedViewportToProjection(nvp[0], nvp[1], nvp[2]);\n  };\n\n  publicAPI.normalizedDisplayToNormalizedViewport = (x, y, z) => {\n    const scale = [\n      model.viewport[2] - model.viewport[0],\n      model.viewport[3] - model.viewport[1],\n    ];\n    return [\n      (x - model.viewport[0]) / scale[0],\n      (y - model.viewport[1]) / scale[1],\n      z,\n    ];\n  };\n\n  publicAPI.normalizedViewportToProjection = (x, y, z) => [\n    x * 2.0 - 1.0,\n    y * 2.0 - 1.0,\n    z * 2.0 - 1.0,\n  ];\n\n  publicAPI.projectionToNormalizedDisplay = (x, y, z) => {\n    // first to nvp\n    const nvp = publicAPI.projectionToNormalizedViewport(x, y, z);\n\n    // then to ndp\n    return publicAPI.normalizedViewportToNormalizedDisplay(\n      nvp[0],\n      nvp[1],\n      nvp[2]\n    );\n  };\n\n  publicAPI.normalizedViewportToNormalizedDisplay = (x, y, z) => {\n    const scale = [\n      model.viewport[2] - model.viewport[0],\n      model.viewport[3] - model.viewport[1],\n    ];\n    return [\n      x * scale[0] + model.viewport[0],\n      y * scale[1] + model.viewport[1],\n      z,\n    ];\n  };\n\n  publicAPI.projectionToNormalizedViewport = (x, y, z) => [\n    (x + 1.0) * 0.5,\n    (y + 1.0) * 0.5,\n    (z + 1.0) * 0.5,\n  ];\n\n  publicAPI.PickPropFrom = notImplemented('PickPropFrom');\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // _vtkWindow: null,\n  background: [0, 0, 0],\n  background2: [0.2, 0.2, 0.2],\n  gradientBackground: false,\n  viewport: [0, 0, 1, 1],\n  aspect: [1, 1],\n  pixelAspect: [1, 1],\n  props: [],\n  actors2D: [],\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.event(publicAPI, model, 'event');\n\n  macro.setGetArray(publicAPI, model, ['viewport'], 4);\n\n  macro.setGetArray(publicAPI, model, ['background', 'background2'], 3);\n\n  vtkViewport(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkViewport');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}