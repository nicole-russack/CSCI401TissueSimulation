{"ast":null,"code":"import macro from 'vtk.js/Sources/macros';\nconst DEFAULT_VIEW_API = navigator.gpu ? 'WebGPU' : 'WebGL';\nconst VIEW_CONSTRUCTORS = Object.create(null); // ----------------------------------------------------------------------------\n// static methods\n// ----------------------------------------------------------------------------\n\nexport function registerViewConstructor(name, constructor) {\n  VIEW_CONSTRUCTORS[name] = constructor;\n}\nexport function listViewAPIs() {\n  return Object.keys(VIEW_CONSTRUCTORS);\n}\nexport function newAPISpecificView(name) {\n  let initialValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return VIEW_CONSTRUCTORS[name] && VIEW_CONSTRUCTORS[name](initialValues);\n} // ----------------------------------------------------------------------------\n// vtkRenderWindow methods\n// ----------------------------------------------------------------------------\n\nfunction vtkRenderWindow(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderWindow'); // Add renderer\n\n  publicAPI.addRenderer = renderer => {\n    if (publicAPI.hasRenderer(renderer)) {\n      return;\n    }\n\n    renderer.setRenderWindow(publicAPI);\n    model.renderers.push(renderer); // for (this->Renderers->InitTraversal(rsit);\n    //      (aren = this->Renderers->GetNextRenderer(rsit)); )\n    //   {\n    //   aren->SetAllocatedRenderTime\n    //     (1.0/(this->DesiredUpdateRate*this->Renderers->GetNumberOfItems()));\n    //   }\n\n    publicAPI.modified();\n  }; // Remove renderer\n\n\n  publicAPI.removeRenderer = renderer => {\n    model.renderers = model.renderers.filter(r => r !== renderer);\n    publicAPI.modified();\n  };\n\n  publicAPI.hasRenderer = ren => model.renderers.indexOf(ren) !== -1; // get an API specific view of this data\n\n\n  publicAPI.newAPISpecificView = function (name) {\n    let initialValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return newAPISpecificView(name || model.defaultViewAPI, initialValues);\n  }; // Add renderer\n\n\n  publicAPI.addView = view => {\n    if (publicAPI.hasView(view)) {\n      return;\n    }\n\n    view.setRenderable(publicAPI);\n    model.views.push(view);\n    publicAPI.modified();\n  }; // Remove renderer\n\n\n  publicAPI.removeView = view => {\n    model.views = model.views.filter(r => r !== view);\n    publicAPI.modified();\n  };\n\n  publicAPI.hasView = view => model.views.indexOf(view) !== -1; // handle any pre render initializations\n\n\n  publicAPI.preRender = () => {\n    model.renderers.forEach(ren => {\n      // make sure we have a camera\n      if (!ren.isActiveCameraCreated()) {\n        ren.resetCamera();\n      }\n    });\n  };\n\n  publicAPI.render = () => {\n    publicAPI.preRender();\n\n    if (model.interactor) {\n      model.interactor.render();\n    } else {\n      model.views.forEach(view => view.traverseAllPasses());\n    }\n  };\n\n  publicAPI.getStatistics = () => {\n    const results = {\n      propCount: 0,\n      invisiblePropCount: 0\n    };\n    model.renderers.forEach(ren => {\n      const props = ren.getViewProps();\n      props.forEach(prop => {\n        if (prop.getVisibility()) {\n          results.propCount += 1;\n          const mpr = prop.getMapper && prop.getMapper();\n\n          if (mpr && mpr.getPrimitiveCount) {\n            const pcount = mpr.getPrimitiveCount();\n            Object.keys(pcount).forEach(keyName => {\n              if (!results[keyName]) {\n                results[keyName] = 0;\n              }\n\n              results[keyName] += pcount[keyName];\n            });\n          }\n        } else {\n          results.invisiblePropCount += 1;\n        }\n      });\n    });\n    results.str = Object.keys(results).map(keyName => `${keyName}: ${results[keyName]}`).join('\\n');\n    return results;\n  };\n\n  publicAPI.captureImages = function () {\n    let format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'image/png';\n    let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    macro.setImmediate(publicAPI.render);\n    return model.views.map(view => view.captureNextImage ? view.captureNextImage(format, opts) : undefined).filter(i => !!i);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nconst DEFAULT_VALUES = {\n  defaultViewAPI: DEFAULT_VIEW_API,\n  renderers: [],\n  views: [],\n  interactor: null,\n  neverRendered: true,\n  numberOfLayers: 1\n}; // ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['interactor', 'numberOfLayers', 'views', 'defaultViewAPI']);\n  macro.get(publicAPI, model, ['neverRendered']);\n  macro.getArray(publicAPI, model, ['renderers']);\n  macro.event(publicAPI, model, 'completion'); // Object methods\n\n  vtkRenderWindow(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkRenderWindow'); // ----------------------------------------------------------------------------\n\nexport default {\n  newInstance,\n  extend,\n  registerViewConstructor,\n  listViewAPIs,\n  newAPISpecificView\n};","map":{"version":3,"names":["macro","DEFAULT_VIEW_API","navigator","gpu","VIEW_CONSTRUCTORS","Object","create","registerViewConstructor","name","constructor","listViewAPIs","keys","newAPISpecificView","initialValues","vtkRenderWindow","publicAPI","model","classHierarchy","push","addRenderer","renderer","hasRenderer","setRenderWindow","renderers","modified","removeRenderer","filter","r","ren","indexOf","defaultViewAPI","addView","view","hasView","setRenderable","views","removeView","preRender","forEach","isActiveCameraCreated","resetCamera","render","interactor","traverseAllPasses","getStatistics","results","propCount","invisiblePropCount","props","getViewProps","prop","getVisibility","mpr","getMapper","getPrimitiveCount","pcount","keyName","str","map","join","captureImages","format","opts","setImmediate","captureNextImage","undefined","i","DEFAULT_VALUES","neverRendered","numberOfLayers","extend","assign","obj","setGet","get","getArray","event","newInstance"],"sources":["/Users/nicolerussack/CSCI401/CSCI401TissueSimulation/my-version/node_modules/vtk.js/Sources/Rendering/Core/RenderWindow/index.js"],"sourcesContent":["import macro from 'vtk.js/Sources/macros';\n\nconst DEFAULT_VIEW_API = navigator.gpu ? 'WebGPU' : 'WebGL';\nconst VIEW_CONSTRUCTORS = Object.create(null);\n\n// ----------------------------------------------------------------------------\n// static methods\n// ----------------------------------------------------------------------------\n\nexport function registerViewConstructor(name, constructor) {\n  VIEW_CONSTRUCTORS[name] = constructor;\n}\n\nexport function listViewAPIs() {\n  return Object.keys(VIEW_CONSTRUCTORS);\n}\n\nexport function newAPISpecificView(name, initialValues = {}) {\n  return VIEW_CONSTRUCTORS[name] && VIEW_CONSTRUCTORS[name](initialValues);\n}\n\n// ----------------------------------------------------------------------------\n// vtkRenderWindow methods\n// ----------------------------------------------------------------------------\n\nfunction vtkRenderWindow(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderWindow');\n\n  // Add renderer\n  publicAPI.addRenderer = (renderer) => {\n    if (publicAPI.hasRenderer(renderer)) {\n      return;\n    }\n    renderer.setRenderWindow(publicAPI);\n    model.renderers.push(renderer);\n\n    // for (this->Renderers->InitTraversal(rsit);\n    //      (aren = this->Renderers->GetNextRenderer(rsit)); )\n    //   {\n    //   aren->SetAllocatedRenderTime\n    //     (1.0/(this->DesiredUpdateRate*this->Renderers->GetNumberOfItems()));\n    //   }\n\n    publicAPI.modified();\n  };\n\n  // Remove renderer\n  publicAPI.removeRenderer = (renderer) => {\n    model.renderers = model.renderers.filter((r) => r !== renderer);\n    publicAPI.modified();\n  };\n\n  publicAPI.hasRenderer = (ren) => model.renderers.indexOf(ren) !== -1;\n\n  // get an API specific view of this data\n  publicAPI.newAPISpecificView = (name, initialValues = {}) =>\n    newAPISpecificView(name || model.defaultViewAPI, initialValues);\n\n  // Add renderer\n  publicAPI.addView = (view) => {\n    if (publicAPI.hasView(view)) {\n      return;\n    }\n    view.setRenderable(publicAPI);\n    model.views.push(view);\n    publicAPI.modified();\n  };\n\n  // Remove renderer\n  publicAPI.removeView = (view) => {\n    model.views = model.views.filter((r) => r !== view);\n    publicAPI.modified();\n  };\n\n  publicAPI.hasView = (view) => model.views.indexOf(view) !== -1;\n\n  // handle any pre render initializations\n  publicAPI.preRender = () => {\n    model.renderers.forEach((ren) => {\n      // make sure we have a camera\n      if (!ren.isActiveCameraCreated()) {\n        ren.resetCamera();\n      }\n    });\n  };\n\n  publicAPI.render = () => {\n    publicAPI.preRender();\n    if (model.interactor) {\n      model.interactor.render();\n    } else {\n      model.views.forEach((view) => view.traverseAllPasses());\n    }\n  };\n\n  publicAPI.getStatistics = () => {\n    const results = { propCount: 0, invisiblePropCount: 0 };\n    model.renderers.forEach((ren) => {\n      const props = ren.getViewProps();\n      props.forEach((prop) => {\n        if (prop.getVisibility()) {\n          results.propCount += 1;\n          const mpr = prop.getMapper && prop.getMapper();\n          if (mpr && mpr.getPrimitiveCount) {\n            const pcount = mpr.getPrimitiveCount();\n            Object.keys(pcount).forEach((keyName) => {\n              if (!results[keyName]) {\n                results[keyName] = 0;\n              }\n              results[keyName] += pcount[keyName];\n            });\n          }\n        } else {\n          results.invisiblePropCount += 1;\n        }\n      });\n    });\n    results.str = Object.keys(results)\n      .map((keyName) => `${keyName}: ${results[keyName]}`)\n      .join('\\n');\n\n    return results;\n  };\n\n  publicAPI.captureImages = (format = 'image/png', opts = {}) => {\n    macro.setImmediate(publicAPI.render);\n    return model.views\n      .map((view) =>\n        view.captureNextImage ? view.captureNextImage(format, opts) : undefined\n      )\n      .filter((i) => !!i);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  defaultViewAPI: DEFAULT_VIEW_API,\n  renderers: [],\n  views: [],\n  interactor: null,\n  neverRendered: true,\n  numberOfLayers: 1,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n\n  macro.setGet(publicAPI, model, [\n    'interactor',\n    'numberOfLayers',\n    'views',\n    'defaultViewAPI',\n  ]);\n  macro.get(publicAPI, model, ['neverRendered']);\n  macro.getArray(publicAPI, model, ['renderers']);\n  macro.event(publicAPI, model, 'completion');\n\n  // Object methods\n  vtkRenderWindow(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkRenderWindow');\n\n// ----------------------------------------------------------------------------\n\nexport default {\n  newInstance,\n  extend,\n  registerViewConstructor,\n  listViewAPIs,\n  newAPISpecificView,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}