{"ast":null,"code":"/* eslint-disable import/prefer-default-export */\n\n/* eslint-disable import/no-extraneous-dependencies */\nimport 'vtk.js/Sources/favicon'; // Load the rendering pieces we want to use (for both WebGL and WebGPU)\n\nimport 'vtk.js/Sources/Rendering/Profiles/Volume';\nimport macro from 'vtk.js/Sources/macros';\nimport HttpDataAccessHelper from 'vtk.js/Sources/IO/Core/DataAccessHelper/HttpDataAccessHelper';\nimport vtkBoundingBox from 'vtk.js/Sources/Common/DataModel/BoundingBox';\nimport vtkColorTransferFunction from 'vtk.js/Sources/Rendering/Core/ColorTransferFunction';\nimport vtkFullScreenRenderWindow from 'vtk.js/Sources/Rendering/Misc/FullScreenRenderWindow';\nimport vtkPiecewiseFunction from 'vtk.js/Sources/Common/DataModel/PiecewiseFunction';\nimport vtkVolumeController from 'vtk.js/Sources/Interaction/UI/VolumeController';\nimport vtkURLExtract from 'vtk.js/Sources/Common/Core/URLExtract';\nimport vtkVolume from 'vtk.js/Sources/Rendering/Core/Volume';\nimport vtkVolumeMapper from 'vtk.js/Sources/Rendering/Core/VolumeMapper';\nimport vtkXMLImageDataReader from 'vtk.js/Sources/IO/XML/XMLImageDataReader';\nimport vtkFPSMonitor from 'vtk.js/Sources/Interaction/UI/FPSMonitor'; // Force DataAccessHelper to have access to various data source\n\nimport 'vtk.js/Sources/IO/Core/DataAccessHelper/HtmlDataAccessHelper';\nimport 'vtk.js/Sources/IO/Core/DataAccessHelper/JSZipDataAccessHelper';\nimport style from './VolumeViewer.module.css';\nlet autoInit = true;\nconst userParams = vtkURLExtract.extractURLParameters();\nconst fpsMonitor = vtkFPSMonitor.newInstance(); // ----------------------------------------------------------------------------\n// Add class to body if iOS device\n// ----------------------------------------------------------------------------\n\nconst iOS = /iPad|iPhone|iPod/.test(window.navigator.platform);\n\nif (iOS) {\n  document.querySelector('body').classList.add('is-ios-device');\n} // ----------------------------------------------------------------------------\n\n\nfunction emptyContainer(container) {\n  while (container.firstChild) {\n    container.removeChild(container.firstChild);\n  }\n} // ----------------------------------------------------------------------------\n\n\nfunction preventDefaults(e) {\n  e.preventDefault();\n  e.stopPropagation();\n} // ----------------------------------------------------------------------------\n\n\nfunction createViewer(rootContainer, fileContents, options) {\n  const background = options.background ? options.background.split(',').map(s => Number(s)) : [0, 0, 0];\n  const containerStyle = options.containerStyle;\n  const fullScreenRenderer = vtkFullScreenRenderWindow.newInstance({\n    background,\n    rootContainer,\n    containerStyle\n  });\n  const renderer = fullScreenRenderer.getRenderer();\n  const renderWindow = fullScreenRenderer.getRenderWindow();\n  renderWindow.getInteractor().setDesiredUpdateRate(30);\n  const vtiReader = vtkXMLImageDataReader.newInstance();\n  vtiReader.parseAsArrayBuffer(fileContents);\n  const source = vtiReader.getOutputData(0);\n  const mapper = vtkVolumeMapper.newInstance();\n  const actor = vtkVolume.newInstance();\n  const dataArray = source.getPointData().getScalars() || source.getPointData().getArrays()[0];\n  const dataRange = dataArray.getRange();\n  const lookupTable = vtkColorTransferFunction.newInstance();\n  const piecewiseFunction = vtkPiecewiseFunction.newInstance(); // Pipeline handling\n\n  actor.setMapper(mapper);\n  mapper.setInputData(source);\n  renderer.addActor(actor); // Configuration\n\n  const sampleDistance = 0.7 * Math.sqrt(source.getSpacing().map(v => v * v).reduce((a, b) => a + b, 0));\n  mapper.setSampleDistance(sampleDistance);\n  actor.getProperty().setRGBTransferFunction(0, lookupTable);\n  actor.getProperty().setScalarOpacity(0, piecewiseFunction); // actor.getProperty().setInterpolationTypeToFastLinear();\n\n  actor.getProperty().setInterpolationTypeToLinear(); // For better looking volume rendering\n  // - distance in world coordinates a scalar opacity of 1.0\n\n  actor.getProperty().setScalarOpacityUnitDistance(0, vtkBoundingBox.getDiagonalLength(source.getBounds()) / Math.max(...source.getDimensions())); // - control how we emphasize surface boundaries\n  //  => max should be around the average gradient magnitude for the\n  //     volume or maybe average plus one std dev of the gradient magnitude\n  //     (adjusted for spacing, this is a world coordinate gradient, not a\n  //     pixel gradient)\n  //  => max hack: (dataRange[1] - dataRange[0]) * 0.05\n\n  actor.getProperty().setGradientOpacityMinimumValue(0, 0);\n  actor.getProperty().setGradientOpacityMaximumValue(0, (dataRange[1] - dataRange[0]) * 0.05); // - Use shading based on gradient\n\n  actor.getProperty().setShade(true);\n  actor.getProperty().setUseGradientOpacity(0, true); // - generic good default\n\n  actor.getProperty().setGradientOpacityMinimumOpacity(0, 0.0);\n  actor.getProperty().setGradientOpacityMaximumOpacity(0, 1.0);\n  actor.getProperty().setAmbient(0.2);\n  actor.getProperty().setDiffuse(0.7);\n  actor.getProperty().setSpecular(0.3);\n  actor.getProperty().setSpecularPower(8.0); // Control UI\n\n  const controllerWidget = vtkVolumeController.newInstance({\n    size: [400, 150],\n    rescaleColorMap: true\n  });\n  const isBackgroundDark = background[0] + background[1] + background[2] < 1.5;\n  controllerWidget.setContainer(rootContainer);\n  controllerWidget.setupContent(renderWindow, actor, isBackgroundDark); // setUpContent above sets the size to the container.\n  // We need to set the size after that.\n  // controllerWidget.setExpanded(false);\n\n  fullScreenRenderer.setResizeCallback(_ref => {\n    let {\n      width,\n      height\n    } = _ref;\n\n    // 2px padding + 2x1px boder + 5px edge = 14\n    if (width > 414) {\n      controllerWidget.setSize(400, 150);\n    } else {\n      controllerWidget.setSize(width - 14, 150);\n    }\n\n    controllerWidget.render();\n    fpsMonitor.update();\n  }); // First render\n\n  renderer.resetCamera();\n  renderWindow.render();\n  global.pipeline = {\n    actor,\n    renderer,\n    renderWindow,\n    lookupTable,\n    mapper,\n    source,\n    piecewiseFunction,\n    fullScreenRenderer\n  };\n\n  if (userParams.fps) {\n    const fpsElm = fpsMonitor.getFpsMonitorContainer();\n    fpsElm.classList.add(style.fpsMonitor);\n    fpsMonitor.setRenderWindow(renderWindow);\n    fpsMonitor.setContainer(rootContainer);\n    fpsMonitor.update();\n  }\n} // ----------------------------------------------------------------------------\n\n\nexport function load(container, options) {\n  autoInit = false;\n  emptyContainer(container);\n\n  if (options.file) {\n    if (options.ext === 'vti') {\n      const reader = new FileReader();\n\n      reader.onload = function onLoad(e) {\n        createViewer(container, reader.result, options);\n      };\n\n      reader.readAsArrayBuffer(options.file);\n    } else {\n      console.error('Unkown file...');\n    }\n  } else if (options.fileURL) {\n    const progressContainer = document.createElement('div');\n    progressContainer.setAttribute('class', style.progress);\n    container.appendChild(progressContainer);\n\n    const progressCallback = progressEvent => {\n      if (progressEvent.lengthComputable) {\n        const percent = Math.floor(100 * progressEvent.loaded / progressEvent.total);\n        progressContainer.innerHTML = `Loading ${percent}%`;\n      } else {\n        progressContainer.innerHTML = macro.formatBytesToProperUnit(progressEvent.loaded);\n      }\n    };\n\n    HttpDataAccessHelper.fetchBinary(options.fileURL, {\n      progressCallback\n    }).then(binary => {\n      container.removeChild(progressContainer);\n      createViewer(container, binary, options);\n    });\n  }\n}\nexport function initLocalFileLoader(container) {\n  const exampleContainer = document.querySelector('.content');\n  const rootBody = document.querySelector('body');\n  const myContainer = container || exampleContainer || rootBody;\n  const fileContainer = document.createElement('div');\n  fileContainer.innerHTML = `<div class=\"${style.bigFileDrop}\"/><input type=\"file\" accept=\".vti\" style=\"display: none;\"/>`;\n  myContainer.appendChild(fileContainer);\n  const fileInput = fileContainer.querySelector('input');\n\n  function handleFile(e) {\n    preventDefaults(e);\n    const dataTransfer = e.dataTransfer;\n    const files = e.target.files || dataTransfer.files;\n\n    if (files.length === 1) {\n      myContainer.removeChild(fileContainer);\n      const ext = files[0].name.split('.').slice(-1)[0];\n      const options = {\n        file: files[0],\n        ext,\n        ...userParams\n      };\n      load(myContainer, options);\n    }\n  }\n\n  fileInput.addEventListener('change', handleFile);\n  fileContainer.addEventListener('drop', handleFile);\n  fileContainer.addEventListener('click', e => fileInput.click());\n  fileContainer.addEventListener('dragover', preventDefaults);\n} // Look at URL an see if we should load a file\n// ?fileURL=https://data.kitware.com/api/v1/item/59cdbb588d777f31ac63de08/download\n\nif (userParams.fileURL) {\n  const exampleContainer = document.querySelector('.content');\n  const rootBody = document.querySelector('body');\n  const myContainer = exampleContainer || rootBody;\n  load(myContainer, userParams);\n}\n\nconst viewerContainers = document.querySelectorAll('.vtkjs-volume-viewer');\nlet nbViewers = viewerContainers.length;\n\nwhile (nbViewers--) {\n  const viewerContainer = viewerContainers[nbViewers];\n  const fileURL = viewerContainer.dataset.url;\n  const options = {\n    containerStyle: {\n      height: '100%'\n    },\n    ...userParams,\n    fileURL\n  };\n  load(viewerContainer, options);\n} // Auto setup if no method get called within 100ms\n\n\nsetTimeout(() => {\n  if (autoInit) {\n    initLocalFileLoader();\n  }\n}, 100);","map":{"version":3,"names":["macro","HttpDataAccessHelper","vtkBoundingBox","vtkColorTransferFunction","vtkFullScreenRenderWindow","vtkPiecewiseFunction","vtkVolumeController","vtkURLExtract","vtkVolume","vtkVolumeMapper","vtkXMLImageDataReader","vtkFPSMonitor","style","autoInit","userParams","extractURLParameters","fpsMonitor","newInstance","iOS","test","window","navigator","platform","document","querySelector","classList","add","emptyContainer","container","firstChild","removeChild","preventDefaults","e","preventDefault","stopPropagation","createViewer","rootContainer","fileContents","options","background","split","map","s","Number","containerStyle","fullScreenRenderer","renderer","getRenderer","renderWindow","getRenderWindow","getInteractor","setDesiredUpdateRate","vtiReader","parseAsArrayBuffer","source","getOutputData","mapper","actor","dataArray","getPointData","getScalars","getArrays","dataRange","getRange","lookupTable","piecewiseFunction","setMapper","setInputData","addActor","sampleDistance","Math","sqrt","getSpacing","v","reduce","a","b","setSampleDistance","getProperty","setRGBTransferFunction","setScalarOpacity","setInterpolationTypeToLinear","setScalarOpacityUnitDistance","getDiagonalLength","getBounds","max","getDimensions","setGradientOpacityMinimumValue","setGradientOpacityMaximumValue","setShade","setUseGradientOpacity","setGradientOpacityMinimumOpacity","setGradientOpacityMaximumOpacity","setAmbient","setDiffuse","setSpecular","setSpecularPower","controllerWidget","size","rescaleColorMap","isBackgroundDark","setContainer","setupContent","setResizeCallback","width","height","setSize","render","update","resetCamera","global","pipeline","fps","fpsElm","getFpsMonitorContainer","setRenderWindow","load","file","ext","reader","FileReader","onload","onLoad","result","readAsArrayBuffer","console","error","fileURL","progressContainer","createElement","setAttribute","progress","appendChild","progressCallback","progressEvent","lengthComputable","percent","floor","loaded","total","innerHTML","formatBytesToProperUnit","fetchBinary","then","binary","initLocalFileLoader","exampleContainer","rootBody","myContainer","fileContainer","bigFileDrop","fileInput","handleFile","dataTransfer","files","target","length","name","slice","addEventListener","click","viewerContainers","querySelectorAll","nbViewers","viewerContainer","dataset","url","setTimeout"],"sources":["/Users/nicolerussack/CSCI401/CSCI401TissueSimulation/my-version/src/index.js"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\n/* eslint-disable import/no-extraneous-dependencies */\n\nimport 'vtk.js/Sources/favicon';\n\n// Load the rendering pieces we want to use (for both WebGL and WebGPU)\nimport 'vtk.js/Sources/Rendering/Profiles/Volume';\n\nimport macro from 'vtk.js/Sources/macros';\nimport HttpDataAccessHelper from 'vtk.js/Sources/IO/Core/DataAccessHelper/HttpDataAccessHelper';\nimport vtkBoundingBox from 'vtk.js/Sources/Common/DataModel/BoundingBox';\nimport vtkColorTransferFunction from 'vtk.js/Sources/Rendering/Core/ColorTransferFunction';\nimport vtkFullScreenRenderWindow from 'vtk.js/Sources/Rendering/Misc/FullScreenRenderWindow';\nimport vtkPiecewiseFunction from 'vtk.js/Sources/Common/DataModel/PiecewiseFunction';\nimport vtkVolumeController from 'vtk.js/Sources/Interaction/UI/VolumeController';\nimport vtkURLExtract from 'vtk.js/Sources/Common/Core/URLExtract';\nimport vtkVolume from 'vtk.js/Sources/Rendering/Core/Volume';\nimport vtkVolumeMapper from 'vtk.js/Sources/Rendering/Core/VolumeMapper';\nimport vtkXMLImageDataReader from 'vtk.js/Sources/IO/XML/XMLImageDataReader';\nimport vtkFPSMonitor from 'vtk.js/Sources/Interaction/UI/FPSMonitor';\n\n// Force DataAccessHelper to have access to various data source\nimport 'vtk.js/Sources/IO/Core/DataAccessHelper/HtmlDataAccessHelper';\nimport 'vtk.js/Sources/IO/Core/DataAccessHelper/JSZipDataAccessHelper';\n\nimport style from './VolumeViewer.module.css';\n\nlet autoInit = true;\nconst userParams = vtkURLExtract.extractURLParameters();\nconst fpsMonitor = vtkFPSMonitor.newInstance();\n\n// ----------------------------------------------------------------------------\n// Add class to body if iOS device\n// ----------------------------------------------------------------------------\n\nconst iOS = /iPad|iPhone|iPod/.test(window.navigator.platform);\n\nif (iOS) {\n  document.querySelector('body').classList.add('is-ios-device');\n}\n\n// ----------------------------------------------------------------------------\n\nfunction emptyContainer(container) {\n  while (container.firstChild) {\n    container.removeChild(container.firstChild);\n  }\n}\n\n// ----------------------------------------------------------------------------\n\nfunction preventDefaults(e) {\n  e.preventDefault();\n  e.stopPropagation();\n}\n\n// ----------------------------------------------------------------------------\n\nfunction createViewer(rootContainer, fileContents, options) {\n  const background = options.background\n    ? options.background.split(',').map((s) => Number(s))\n    : [0, 0, 0];\n  const containerStyle = options.containerStyle;\n  const fullScreenRenderer = vtkFullScreenRenderWindow.newInstance({\n    background,\n    rootContainer,\n    containerStyle,\n  });\n  const renderer = fullScreenRenderer.getRenderer();\n  const renderWindow = fullScreenRenderer.getRenderWindow();\n  renderWindow.getInteractor().setDesiredUpdateRate(30);\n\n  const vtiReader = vtkXMLImageDataReader.newInstance();\n  vtiReader.parseAsArrayBuffer(fileContents);\n\n  const source = vtiReader.getOutputData(0);\n  const mapper = vtkVolumeMapper.newInstance();\n  const actor = vtkVolume.newInstance();\n\n  const dataArray =\n    source.getPointData().getScalars() || source.getPointData().getArrays()[0];\n  const dataRange = dataArray.getRange();\n\n  const lookupTable = vtkColorTransferFunction.newInstance();\n  const piecewiseFunction = vtkPiecewiseFunction.newInstance();\n\n  // Pipeline handling\n  actor.setMapper(mapper);\n  mapper.setInputData(source);\n  renderer.addActor(actor);\n\n  // Configuration\n  const sampleDistance =\n    0.7 *\n    Math.sqrt(\n      source\n        .getSpacing()\n        .map((v) => v * v)\n        .reduce((a, b) => a + b, 0)\n    );\n  mapper.setSampleDistance(sampleDistance);\n  actor.getProperty().setRGBTransferFunction(0, lookupTable);\n  actor.getProperty().setScalarOpacity(0, piecewiseFunction);\n  // actor.getProperty().setInterpolationTypeToFastLinear();\n  actor.getProperty().setInterpolationTypeToLinear();\n\n  // For better looking volume rendering\n  // - distance in world coordinates a scalar opacity of 1.0\n  actor\n    .getProperty()\n    .setScalarOpacityUnitDistance(\n      0,\n      vtkBoundingBox.getDiagonalLength(source.getBounds()) /\n        Math.max(...source.getDimensions())\n    );\n  // - control how we emphasize surface boundaries\n  //  => max should be around the average gradient magnitude for the\n  //     volume or maybe average plus one std dev of the gradient magnitude\n  //     (adjusted for spacing, this is a world coordinate gradient, not a\n  //     pixel gradient)\n  //  => max hack: (dataRange[1] - dataRange[0]) * 0.05\n  actor.getProperty().setGradientOpacityMinimumValue(0, 0);\n  actor\n    .getProperty()\n    .setGradientOpacityMaximumValue(0, (dataRange[1] - dataRange[0]) * 0.05);\n  // - Use shading based on gradient\n  actor.getProperty().setShade(true);\n  actor.getProperty().setUseGradientOpacity(0, true);\n  // - generic good default\n  actor.getProperty().setGradientOpacityMinimumOpacity(0, 0.0);\n  actor.getProperty().setGradientOpacityMaximumOpacity(0, 1.0);\n  actor.getProperty().setAmbient(0.2);\n  actor.getProperty().setDiffuse(0.7);\n  actor.getProperty().setSpecular(0.3);\n  actor.getProperty().setSpecularPower(8.0);\n\n  // Control UI\n  const controllerWidget = vtkVolumeController.newInstance({\n    size: [400, 150],\n    rescaleColorMap: true,\n  });\n  const isBackgroundDark = background[0] + background[1] + background[2] < 1.5;\n  controllerWidget.setContainer(rootContainer);\n  controllerWidget.setupContent(renderWindow, actor, isBackgroundDark);\n\n  // setUpContent above sets the size to the container.\n  // We need to set the size after that.\n  // controllerWidget.setExpanded(false);\n\n  fullScreenRenderer.setResizeCallback(({ width, height }) => {\n    // 2px padding + 2x1px boder + 5px edge = 14\n    if (width > 414) {\n      controllerWidget.setSize(400, 150);\n    } else {\n      controllerWidget.setSize(width - 14, 150);\n    }\n    controllerWidget.render();\n    fpsMonitor.update();\n  });\n\n  // First render\n  renderer.resetCamera();\n  renderWindow.render();\n\n  global.pipeline = {\n    actor,\n    renderer,\n    renderWindow,\n    lookupTable,\n    mapper,\n    source,\n    piecewiseFunction,\n    fullScreenRenderer,\n  };\n\n  if (userParams.fps) {\n    const fpsElm = fpsMonitor.getFpsMonitorContainer();\n    fpsElm.classList.add(style.fpsMonitor);\n    fpsMonitor.setRenderWindow(renderWindow);\n    fpsMonitor.setContainer(rootContainer);\n    fpsMonitor.update();\n  }\n}\n\n// ----------------------------------------------------------------------------\n\nexport function load(container, options) {\n  autoInit = false;\n  emptyContainer(container);\n\n  if (options.file) {\n    if (options.ext === 'vti') {\n      const reader = new FileReader();\n      reader.onload = function onLoad(e) {\n        createViewer(container, reader.result, options);\n      };\n      reader.readAsArrayBuffer(options.file);\n    } else {\n      console.error('Unkown file...');\n    }\n  } else if (options.fileURL) {\n    const progressContainer = document.createElement('div');\n    progressContainer.setAttribute('class', style.progress);\n    container.appendChild(progressContainer);\n\n    const progressCallback = (progressEvent) => {\n      if (progressEvent.lengthComputable) {\n        const percent = Math.floor(\n          (100 * progressEvent.loaded) / progressEvent.total\n        );\n        progressContainer.innerHTML = `Loading ${percent}%`;\n      } else {\n        progressContainer.innerHTML = macro.formatBytesToProperUnit(\n          progressEvent.loaded\n        );\n      }\n    };\n\n    HttpDataAccessHelper.fetchBinary(options.fileURL, {\n      progressCallback,\n    }).then((binary) => {\n      container.removeChild(progressContainer);\n      createViewer(container, binary, options);\n    });\n  }\n}\n\nexport function initLocalFileLoader(container) {\n  const exampleContainer = document.querySelector('.content');\n  const rootBody = document.querySelector('body');\n  const myContainer = container || exampleContainer || rootBody;\n\n  const fileContainer = document.createElement('div');\n  fileContainer.innerHTML = `<div class=\"${style.bigFileDrop}\"/><input type=\"file\" accept=\".vti\" style=\"display: none;\"/>`;\n  myContainer.appendChild(fileContainer);\n\n  const fileInput = fileContainer.querySelector('input');\n\n  function handleFile(e) {\n    preventDefaults(e);\n    const dataTransfer = e.dataTransfer;\n    const files = e.target.files || dataTransfer.files;\n    if (files.length === 1) {\n      myContainer.removeChild(fileContainer);\n      const ext = files[0].name.split('.').slice(-1)[0];\n      const options = { file: files[0], ext, ...userParams };\n      load(myContainer, options);\n    }\n  }\n\n  fileInput.addEventListener('change', handleFile);\n  fileContainer.addEventListener('drop', handleFile);\n  fileContainer.addEventListener('click', (e) => fileInput.click());\n  fileContainer.addEventListener('dragover', preventDefaults);\n}\n\n// Look at URL an see if we should load a file\n// ?fileURL=https://data.kitware.com/api/v1/item/59cdbb588d777f31ac63de08/download\nif (userParams.fileURL) {\n  const exampleContainer = document.querySelector('.content');\n  const rootBody = document.querySelector('body');\n  const myContainer = exampleContainer || rootBody;\n  load(myContainer, userParams);\n}\n\nconst viewerContainers = document.querySelectorAll('.vtkjs-volume-viewer');\nlet nbViewers = viewerContainers.length;\nwhile (nbViewers--) {\n  const viewerContainer = viewerContainers[nbViewers];\n  const fileURL = viewerContainer.dataset.url;\n  const options = {\n    containerStyle: { height: '100%' },\n    ...userParams,\n    fileURL,\n  };\n  load(viewerContainer, options);\n}\n\n// Auto setup if no method get called within 100ms\nsetTimeout(() => {\n  if (autoInit) {\n    initLocalFileLoader();\n  }\n}, 100);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}