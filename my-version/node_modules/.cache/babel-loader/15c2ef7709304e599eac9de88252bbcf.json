{"ast":null,"code":"import vtkAbstractMapper from 'vtk.js/Sources/Rendering/Core/AbstractMapper';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math'; // ----------------------------------------------------------------------------\n// vtkAbstractMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkAbstractMapper3D(publicAPI, model) {\n  publicAPI.getBounds = () => 0;\n\n  publicAPI.getBounds = bounds => {\n    publicAPI.getBounds();\n\n    for (let i = 0; i < 6; i++) {\n      bounds[i] = model.bounds[i];\n    }\n  };\n\n  publicAPI.getCenter = () => {\n    publicAPI.getBounds();\n\n    for (let i = 0; i < 3; i++) {\n      model.center[i] = (model.bounds[2 * i + 1] + model.bounds[2 * i]) / 2.0;\n    }\n\n    return model.center.slice();\n  };\n\n  publicAPI.getLength = () => {\n    let diff = 0.0;\n    let l = 0.0;\n    publicAPI.getBounds();\n\n    for (let i = 0; i < 3; i++) {\n      diff = model.bounds[2 * i + 1] - model.bounds[2 * i];\n      l += diff * diff;\n    }\n\n    return Math.sqrt(l);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nconst DEFAULT_VALUES = {\n  bounds: [1, -1, 1, -1, 1, -1],\n  center: [0, 0, 0]\n}; // ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkAbstractMapper.extend(publicAPI, model, initialValues);\n\n  if (!model.bounds) {\n    vtkMath.uninitializeBounds(model.bounds);\n  }\n\n  if (!model.center) {\n    model.center = [0.0, 0.0, 0.0];\n  }\n\n  vtkAbstractMapper3D(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nexport default {\n  extend\n};","map":{"version":3,"names":["vtkAbstractMapper","vtkMath","vtkAbstractMapper3D","publicAPI","model","getBounds","bounds","i","getCenter","center","slice","getLength","diff","l","Math","sqrt","DEFAULT_VALUES","extend","initialValues","Object","assign","uninitializeBounds"],"sources":["/Users/nicolerussack/CSCI401/CSCI401TissueSimulation/my-version/node_modules/vtk.js/Sources/Rendering/Core/AbstractMapper3D/index.js"],"sourcesContent":["import vtkAbstractMapper from 'vtk.js/Sources/Rendering/Core/AbstractMapper';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\n// ----------------------------------------------------------------------------\n// vtkAbstractMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkAbstractMapper3D(publicAPI, model) {\n  publicAPI.getBounds = () => 0;\n\n  publicAPI.getBounds = (bounds) => {\n    publicAPI.getBounds();\n    for (let i = 0; i < 6; i++) {\n      bounds[i] = model.bounds[i];\n    }\n  };\n\n  publicAPI.getCenter = () => {\n    publicAPI.getBounds();\n    for (let i = 0; i < 3; i++) {\n      model.center[i] = (model.bounds[2 * i + 1] + model.bounds[2 * i]) / 2.0;\n    }\n    return model.center.slice();\n  };\n\n  publicAPI.getLength = () => {\n    let diff = 0.0;\n    let l = 0.0;\n    publicAPI.getBounds();\n    for (let i = 0; i < 3; i++) {\n      diff = model.bounds[2 * i + 1] - model.bounds[2 * i];\n      l += diff * diff;\n    }\n\n    return Math.sqrt(l);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  bounds: [1, -1, 1, -1, 1, -1],\n  center: [0, 0, 0],\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  // Inheritance\n  vtkAbstractMapper.extend(publicAPI, model, initialValues);\n\n  if (!model.bounds) {\n    vtkMath.uninitializeBounds(model.bounds);\n  }\n\n  if (!model.center) {\n    model.center = [0.0, 0.0, 0.0];\n  }\n\n  vtkAbstractMapper3D(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport default { extend };\n"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,8CAA9B;AACA,OAAO,KAAKC,OAAZ,MAAyB,iCAAzB,C,CACA;AACA;AACA;;AAEA,SAASC,mBAAT,CAA6BC,SAA7B,EAAwCC,KAAxC,EAA+C;EAC7CD,SAAS,CAACE,SAAV,GAAsB,MAAM,CAA5B;;EAEAF,SAAS,CAACE,SAAV,GAAuBC,MAAD,IAAY;IAChCH,SAAS,CAACE,SAAV;;IACA,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;MAC1BD,MAAM,CAACC,CAAD,CAAN,GAAYH,KAAK,CAACE,MAAN,CAAaC,CAAb,CAAZ;IACD;EACF,CALD;;EAOAJ,SAAS,CAACK,SAAV,GAAsB,MAAM;IAC1BL,SAAS,CAACE,SAAV;;IACA,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;MAC1BH,KAAK,CAACK,MAAN,CAAaF,CAAb,IAAkB,CAACH,KAAK,CAACE,MAAN,CAAa,IAAIC,CAAJ,GAAQ,CAArB,IAA0BH,KAAK,CAACE,MAAN,CAAa,IAAIC,CAAjB,CAA3B,IAAkD,GAApE;IACD;;IACD,OAAOH,KAAK,CAACK,MAAN,CAAaC,KAAb,EAAP;EACD,CAND;;EAQAP,SAAS,CAACQ,SAAV,GAAsB,MAAM;IAC1B,IAAIC,IAAI,GAAG,GAAX;IACA,IAAIC,CAAC,GAAG,GAAR;IACAV,SAAS,CAACE,SAAV;;IACA,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;MAC1BK,IAAI,GAAGR,KAAK,CAACE,MAAN,CAAa,IAAIC,CAAJ,GAAQ,CAArB,IAA0BH,KAAK,CAACE,MAAN,CAAa,IAAIC,CAAjB,CAAjC;MACAM,CAAC,IAAID,IAAI,GAAGA,IAAZ;IACD;;IAED,OAAOE,IAAI,CAACC,IAAL,CAAUF,CAAV,CAAP;EACD,CAVD;AAWD,C,CAED;AACA;AACA;;;AAEA,MAAMG,cAAc,GAAG;EACrBV,MAAM,EAAE,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,CAAR,EAAW,CAAC,CAAZ,EAAe,CAAf,EAAkB,CAAC,CAAnB,CADa;EAErBG,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAFa,CAAvB,C,CAKA;;AAEA,OAAO,SAASQ,MAAT,CAAgBd,SAAhB,EAA2BC,KAA3B,EAAsD;EAAA,IAApBc,aAAoB,uEAAJ,EAAI;EAC3DC,MAAM,CAACC,MAAP,CAAchB,KAAd,EAAqBY,cAArB,EAAqCE,aAArC,EAD2D,CAE3D;;EACAlB,iBAAiB,CAACiB,MAAlB,CAAyBd,SAAzB,EAAoCC,KAApC,EAA2Cc,aAA3C;;EAEA,IAAI,CAACd,KAAK,CAACE,MAAX,EAAmB;IACjBL,OAAO,CAACoB,kBAAR,CAA2BjB,KAAK,CAACE,MAAjC;EACD;;EAED,IAAI,CAACF,KAAK,CAACK,MAAX,EAAmB;IACjBL,KAAK,CAACK,MAAN,GAAe,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAf;EACD;;EAEDP,mBAAmB,CAACC,SAAD,EAAYC,KAAZ,CAAnB;AACD,C,CAED;;AAEA,eAAe;EAAEa;AAAF,CAAf"},"metadata":{},"sourceType":"module"}