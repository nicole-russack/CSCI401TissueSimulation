{"ast":null,"code":"import macro from 'vtk.js/Sources/macros'; // ----------------------------------------------------------------------------\n// vtkViewNodeFactory methods\n// ----------------------------------------------------------------------------\n\nfunction vtkViewNodeFactory(publicAPI, model) {\n  // Make sure our overrides is just for our instance not shared with everyone...\n  if (!model.overrides) {\n    model.overrides = {};\n  } // Set our className\n\n\n  model.classHierarchy.push('vtkViewNodeFactory');\n\n  publicAPI.createNode = dataObject => {\n    if (dataObject.isDeleted()) {\n      return null;\n    }\n\n    let cpt = 0;\n    let className = dataObject.getClassName(cpt++);\n    let isObject = false;\n    const keys = Object.keys(model.overrides);\n\n    while (className && !isObject) {\n      if (keys.indexOf(className) !== -1) {\n        isObject = true;\n      } else {\n        className = dataObject.getClassName(cpt++);\n      }\n    }\n\n    if (!isObject) {\n      return null;\n    }\n\n    const vn = model.overrides[className]();\n    vn.setMyFactory(publicAPI);\n    return vn;\n  };\n\n  publicAPI.registerOverride = (className, func) => {\n    model.overrides[className] = func;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nconst DEFAULT_VALUES = {// overrides: {},\n}; // ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model); // Object methods\n\n  vtkViewNodeFactory(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkViewNodeFactory'); // ----------------------------------------------------------------------------\n\nexport default {\n  newInstance,\n  extend\n};","map":{"version":3,"names":["macro","vtkViewNodeFactory","publicAPI","model","overrides","classHierarchy","push","createNode","dataObject","isDeleted","cpt","className","getClassName","isObject","keys","Object","indexOf","vn","setMyFactory","registerOverride","func","DEFAULT_VALUES","extend","initialValues","assign","obj","newInstance"],"sources":["/Users/nicolerussack/CSCI401/CSCI401TissueSimulation/my-version/node_modules/vtk.js/Sources/Rendering/SceneGraph/ViewNodeFactory/index.js"],"sourcesContent":["import macro from 'vtk.js/Sources/macros';\n\n// ----------------------------------------------------------------------------\n// vtkViewNodeFactory methods\n// ----------------------------------------------------------------------------\n\nfunction vtkViewNodeFactory(publicAPI, model) {\n  // Make sure our overrides is just for our instance not shared with everyone...\n  if (!model.overrides) {\n    model.overrides = {};\n  }\n\n  // Set our className\n  model.classHierarchy.push('vtkViewNodeFactory');\n\n  publicAPI.createNode = (dataObject) => {\n    if (dataObject.isDeleted()) {\n      return null;\n    }\n\n    let cpt = 0;\n    let className = dataObject.getClassName(cpt++);\n    let isObject = false;\n    const keys = Object.keys(model.overrides);\n    while (className && !isObject) {\n      if (keys.indexOf(className) !== -1) {\n        isObject = true;\n      } else {\n        className = dataObject.getClassName(cpt++);\n      }\n    }\n\n    if (!isObject) {\n      return null;\n    }\n    const vn = model.overrides[className]();\n    vn.setMyFactory(publicAPI);\n    return vn;\n  };\n\n  publicAPI.registerOverride = (className, func) => {\n    model.overrides[className] = func;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // overrides: {},\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n\n  // Object methods\n  vtkViewNodeFactory(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkViewNodeFactory');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,uBAAlB,C,CAEA;AACA;AACA;;AAEA,SAASC,kBAAT,CAA4BC,SAA5B,EAAuCC,KAAvC,EAA8C;EAC5C;EACA,IAAI,CAACA,KAAK,CAACC,SAAX,EAAsB;IACpBD,KAAK,CAACC,SAAN,GAAkB,EAAlB;EACD,CAJ2C,CAM5C;;;EACAD,KAAK,CAACE,cAAN,CAAqBC,IAArB,CAA0B,oBAA1B;;EAEAJ,SAAS,CAACK,UAAV,GAAwBC,UAAD,IAAgB;IACrC,IAAIA,UAAU,CAACC,SAAX,EAAJ,EAA4B;MAC1B,OAAO,IAAP;IACD;;IAED,IAAIC,GAAG,GAAG,CAAV;IACA,IAAIC,SAAS,GAAGH,UAAU,CAACI,YAAX,CAAwBF,GAAG,EAA3B,CAAhB;IACA,IAAIG,QAAQ,GAAG,KAAf;IACA,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYX,KAAK,CAACC,SAAlB,CAAb;;IACA,OAAOO,SAAS,IAAI,CAACE,QAArB,EAA+B;MAC7B,IAAIC,IAAI,CAACE,OAAL,CAAaL,SAAb,MAA4B,CAAC,CAAjC,EAAoC;QAClCE,QAAQ,GAAG,IAAX;MACD,CAFD,MAEO;QACLF,SAAS,GAAGH,UAAU,CAACI,YAAX,CAAwBF,GAAG,EAA3B,CAAZ;MACD;IACF;;IAED,IAAI,CAACG,QAAL,EAAe;MACb,OAAO,IAAP;IACD;;IACD,MAAMI,EAAE,GAAGd,KAAK,CAACC,SAAN,CAAgBO,SAAhB,GAAX;IACAM,EAAE,CAACC,YAAH,CAAgBhB,SAAhB;IACA,OAAOe,EAAP;EACD,CAvBD;;EAyBAf,SAAS,CAACiB,gBAAV,GAA6B,CAACR,SAAD,EAAYS,IAAZ,KAAqB;IAChDjB,KAAK,CAACC,SAAN,CAAgBO,SAAhB,IAA6BS,IAA7B;EACD,CAFD;AAGD,C,CAED;AACA;AACA;;;AAEA,MAAMC,cAAc,GAAG,CACrB;AADqB,CAAvB,C,CAIA;;AAEA,OAAO,SAASC,MAAT,CAAgBpB,SAAhB,EAA2BC,KAA3B,EAAsD;EAAA,IAApBoB,aAAoB,uEAAJ,EAAI;EAC3DR,MAAM,CAACS,MAAP,CAAcrB,KAAd,EAAqBkB,cAArB,EAAqCE,aAArC,EAD2D,CAG3D;;EACAvB,KAAK,CAACyB,GAAN,CAAUvB,SAAV,EAAqBC,KAArB,EAJ2D,CAM3D;;EACAF,kBAAkB,CAACC,SAAD,EAAYC,KAAZ,CAAlB;AACD,C,CAED;;AAEA,OAAO,MAAMuB,WAAW,GAAG1B,KAAK,CAAC0B,WAAN,CAAkBJ,MAAlB,EAA0B,oBAA1B,CAApB,C,CAEP;;AAEA,eAAe;EAAEI,WAAF;EAAeJ;AAAf,CAAf"},"metadata":{},"sourceType":"module"}