{"ast":null,"code":"import macro from 'vtk.js/Sources/macros';\nimport vtkRenderWindowInteractor from 'vtk.js/Sources/Rendering/Core/RenderWindowInteractor';\nconst {\n  vtkErrorMacro,\n  VOID\n} = macro; // ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n//----------------------------------------------------------------------------\n// Description:\n// Transform from world to display coordinates.\n\nfunction computeWorldToDisplay(renderer, x, y, z) {\n  const view = renderer.getRenderWindow().getViews()[0];\n  return view.worldToDisplay(x, y, z, renderer);\n} //----------------------------------------------------------------------------\n// Description:\n// Transform from display to world coordinates.\n\n\nfunction computeDisplayToWorld(renderer, x, y, z) {\n  const view = renderer.getRenderWindow().getViews()[0];\n  return view.displayToWorld(x, y, z, renderer);\n} // ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\n\nexport const STATIC = {\n  computeWorldToDisplay,\n  computeDisplayToWorld\n}; // ----------------------------------------------------------------------------\n// vtkInteractorObserver methods\n// ----------------------------------------------------------------------------\n\nfunction vtkInteractorObserver(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkInteractorObserver');\n  const superClass = { ...publicAPI\n  }; //----------------------------------------------------------------------------\n\n  function unsubscribeFromEvents() {\n    while (model.subscribedEvents.length) {\n      model.subscribedEvents.pop().unsubscribe();\n    }\n  } //----------------------------------------------------------------------------\n  // Check what events we can handle and register callbacks\n\n\n  function subscribeToEvents() {\n    vtkRenderWindowInteractor.handledEvents.forEach(eventName => {\n      if (publicAPI[`handle${eventName}`]) {\n        model.subscribedEvents.push(model._interactor[`on${eventName}`](callData => {\n          if (model.processEvents) {\n            return publicAPI[`handle${eventName}`](callData);\n          }\n\n          return VOID;\n        }, model.priority));\n      }\n    });\n  } //----------------------------------------------------------------------------\n  // Public API methods\n  //----------------------------------------------------------------------------\n\n\n  publicAPI.setInteractor = i => {\n    if (i === model._interactor) {\n      return;\n    }\n\n    unsubscribeFromEvents();\n    model._interactor = i;\n\n    if (i && model.enabled) {\n      subscribeToEvents();\n    }\n\n    publicAPI.modified();\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.setEnabled = enable => {\n    if (enable === model.enabled) {\n      return;\n    }\n\n    unsubscribeFromEvents();\n\n    if (enable) {\n      if (model._interactor) {\n        subscribeToEvents();\n      } else {\n        vtkErrorMacro(`\n          The interactor must be set before subscribing to events\n        `);\n      }\n    }\n\n    model.enabled = enable;\n    publicAPI.modified();\n  }; //----------------------------------------------------------------------------\n  // Description:\n  // Transform from display to world coordinates.\n\n\n  publicAPI.computeDisplayToWorld = (renderer, x, y, z) => {\n    if (!renderer) {\n      return null;\n    }\n\n    return model._interactor.getView().displayToWorld(x, y, z, renderer);\n  }; //----------------------------------------------------------------------------\n  // Description:\n  // Transform from world to display coordinates.\n\n\n  publicAPI.computeWorldToDisplay = (renderer, x, y, z) => {\n    if (!renderer) {\n      return null;\n    }\n\n    return model._interactor.getView().worldToDisplay(x, y, z, renderer);\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.setPriority = priority => {\n    const modified = superClass.setPriority(priority);\n\n    if (modified && model._interactor) {\n      unsubscribeFromEvents();\n      subscribeToEvents();\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nconst DEFAULT_VALUES = {\n  enabled: true,\n  // _interactor: null,\n  priority: 0.0,\n  processEvents: true,\n  subscribedEvents: []\n}; // ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  macro.obj(publicAPI, model);\n  macro.event(publicAPI, model, 'InteractionEvent');\n  macro.event(publicAPI, model, 'StartInteractionEvent');\n  macro.event(publicAPI, model, 'EndInteractionEvent'); // Create get-only macros\n\n  macro.get(publicAPI, model, ['_interactor', 'enabled']); // Create get-set macros\n\n  macro.setGet(publicAPI, model, ['priority', 'processEvents']);\n  macro.moveToProtected(publicAPI, model, ['interactor']); // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n\n  vtkInteractorObserver(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkInteractorObserver'); // ----------------------------------------------------------------------------\n\nexport default {\n  newInstance,\n  extend,\n  ...STATIC\n};","map":{"version":3,"names":["macro","vtkRenderWindowInteractor","vtkErrorMacro","VOID","computeWorldToDisplay","renderer","x","y","z","view","getRenderWindow","getViews","worldToDisplay","computeDisplayToWorld","displayToWorld","STATIC","vtkInteractorObserver","publicAPI","model","classHierarchy","push","superClass","unsubscribeFromEvents","subscribedEvents","length","pop","unsubscribe","subscribeToEvents","handledEvents","forEach","eventName","_interactor","callData","processEvents","priority","setInteractor","i","enabled","modified","setEnabled","enable","getView","setPriority","DEFAULT_VALUES","extend","initialValues","Object","assign","obj","event","get","setGet","moveToProtected","newInstance"],"sources":["/Users/nicolerussack/CSCI401/CSCI401TissueSimulation/my-version/node_modules/vtk.js/Sources/Rendering/Core/InteractorObserver/index.js"],"sourcesContent":["import macro from 'vtk.js/Sources/macros';\nimport vtkRenderWindowInteractor from 'vtk.js/Sources/Rendering/Core/RenderWindowInteractor';\n\nconst { vtkErrorMacro, VOID } = macro;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n//----------------------------------------------------------------------------\n// Description:\n// Transform from world to display coordinates.\nfunction computeWorldToDisplay(renderer, x, y, z) {\n  const view = renderer.getRenderWindow().getViews()[0];\n  return view.worldToDisplay(x, y, z, renderer);\n}\n\n//----------------------------------------------------------------------------\n// Description:\n// Transform from display to world coordinates.\nfunction computeDisplayToWorld(renderer, x, y, z) {\n  const view = renderer.getRenderWindow().getViews()[0];\n  return view.displayToWorld(x, y, z, renderer);\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\nexport const STATIC = {\n  computeWorldToDisplay,\n  computeDisplayToWorld,\n};\n\n// ----------------------------------------------------------------------------\n// vtkInteractorObserver methods\n// ----------------------------------------------------------------------------\n\nfunction vtkInteractorObserver(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkInteractorObserver');\n\n  const superClass = { ...publicAPI };\n\n  //----------------------------------------------------------------------------\n  function unsubscribeFromEvents() {\n    while (model.subscribedEvents.length) {\n      model.subscribedEvents.pop().unsubscribe();\n    }\n  }\n\n  //----------------------------------------------------------------------------\n  // Check what events we can handle and register callbacks\n  function subscribeToEvents() {\n    vtkRenderWindowInteractor.handledEvents.forEach((eventName) => {\n      if (publicAPI[`handle${eventName}`]) {\n        model.subscribedEvents.push(\n          model._interactor[`on${eventName}`]((callData) => {\n            if (model.processEvents) {\n              return publicAPI[`handle${eventName}`](callData);\n            }\n            return VOID;\n          }, model.priority)\n        );\n      }\n    });\n  }\n\n  //----------------------------------------------------------------------------\n  // Public API methods\n  //----------------------------------------------------------------------------\n  publicAPI.setInteractor = (i) => {\n    if (i === model._interactor) {\n      return;\n    }\n\n    unsubscribeFromEvents();\n\n    model._interactor = i;\n\n    if (i && model.enabled) {\n      subscribeToEvents();\n    }\n\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.setEnabled = (enable) => {\n    if (enable === model.enabled) {\n      return;\n    }\n\n    unsubscribeFromEvents();\n\n    if (enable) {\n      if (model._interactor) {\n        subscribeToEvents();\n      } else {\n        vtkErrorMacro(`\n          The interactor must be set before subscribing to events\n        `);\n      }\n    }\n\n    model.enabled = enable;\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  // Description:\n  // Transform from display to world coordinates.\n  publicAPI.computeDisplayToWorld = (renderer, x, y, z) => {\n    if (!renderer) {\n      return null;\n    }\n\n    return model._interactor.getView().displayToWorld(x, y, z, renderer);\n  };\n\n  //----------------------------------------------------------------------------\n  // Description:\n  // Transform from world to display coordinates.\n  publicAPI.computeWorldToDisplay = (renderer, x, y, z) => {\n    if (!renderer) {\n      return null;\n    }\n\n    return model._interactor.getView().worldToDisplay(x, y, z, renderer);\n  };\n\n  //----------------------------------------------------------------------------\n\n  publicAPI.setPriority = (priority) => {\n    const modified = superClass.setPriority(priority);\n\n    if (modified && model._interactor) {\n      unsubscribeFromEvents();\n      subscribeToEvents();\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  enabled: true,\n  // _interactor: null,\n  priority: 0.0,\n  processEvents: true,\n  subscribedEvents: [],\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n\n  macro.event(publicAPI, model, 'InteractionEvent');\n  macro.event(publicAPI, model, 'StartInteractionEvent');\n  macro.event(publicAPI, model, 'EndInteractionEvent');\n\n  // Create get-only macros\n  macro.get(publicAPI, model, ['_interactor', 'enabled']);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['priority', 'processEvents']);\n\n  macro.moveToProtected(publicAPI, model, ['interactor']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n\n  // Object specific methods\n  vtkInteractorObserver(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkInteractorObserver');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend, ...STATIC };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}