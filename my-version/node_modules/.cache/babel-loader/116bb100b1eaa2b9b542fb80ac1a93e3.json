{"ast":null,"code":"/**\n * macros.js is the old macro.js.\n * The name change is so we do not get eaten by babel-plugin-macros.\n */\nimport vtk, { vtkGlobal } from './vtk';\nimport ClassHierarchy from './Common/Core/ClassHierarchy';\nlet globalMTime = 0;\nexport const VOID = Symbol('void');\n\nfunction getCurrentGlobalMTime() {\n  return globalMTime;\n} // ----------------------------------------------------------------------------\n// Logging function calls\n// ----------------------------------------------------------------------------\n\n/* eslint-disable no-prototype-builtins                                      */\n\n\nconst fakeConsole = {};\n\nfunction noOp() {}\n\nconst consoleMethods = ['log', 'debug', 'info', 'warn', 'error', 'time', 'timeEnd', 'group', 'groupEnd'];\nconsoleMethods.forEach(methodName => {\n  fakeConsole[methodName] = noOp;\n});\nvtkGlobal.console = console.hasOwnProperty('log') ? console : fakeConsole;\nconst loggerFunctions = {\n  debug: noOp,\n  // Don't print debug by default\n  error: vtkGlobal.console.error || noOp,\n  info: vtkGlobal.console.info || noOp,\n  log: vtkGlobal.console.log || noOp,\n  warn: vtkGlobal.console.warn || noOp\n};\nexport function setLoggerFunction(name, fn) {\n  if (loggerFunctions[name]) {\n    loggerFunctions[name] = fn || noOp;\n  }\n}\nexport function vtkLogMacro() {\n  loggerFunctions.log(...arguments);\n}\nexport function vtkInfoMacro() {\n  loggerFunctions.info(...arguments);\n}\nexport function vtkDebugMacro() {\n  loggerFunctions.debug(...arguments);\n}\nexport function vtkErrorMacro() {\n  loggerFunctions.error(...arguments);\n}\nexport function vtkWarningMacro() {\n  loggerFunctions.warn(...arguments);\n}\nconst ERROR_ONCE_MAP = {};\nexport function vtkOnceErrorMacro(str) {\n  if (!ERROR_ONCE_MAP[str]) {\n    loggerFunctions.error(str);\n    ERROR_ONCE_MAP[str] = true;\n  }\n} // ----------------------------------------------------------------------------\n// TypedArray\n// ----------------------------------------------------------------------------\n\nexport const TYPED_ARRAYS = Object.create(null);\nTYPED_ARRAYS.Float32Array = Float32Array;\nTYPED_ARRAYS.Float64Array = Float64Array;\nTYPED_ARRAYS.Uint8Array = Uint8Array;\nTYPED_ARRAYS.Int8Array = Int8Array;\nTYPED_ARRAYS.Uint16Array = Uint16Array;\nTYPED_ARRAYS.Int16Array = Int16Array;\nTYPED_ARRAYS.Uint32Array = Uint32Array;\nTYPED_ARRAYS.Int32Array = Int32Array;\nTYPED_ARRAYS.Uint8ClampedArray = Uint8ClampedArray; // TYPED_ARRAYS.BigInt64Array = BigInt64Array;\n// TYPED_ARRAYS.BigUint64Array = BigUint64Array;\n\nexport function newTypedArray(type) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return new (TYPED_ARRAYS[type] || Float64Array)(...args);\n}\nexport function newTypedArrayFrom(type) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n\n  return (TYPED_ARRAYS[type] || Float64Array).from(...args);\n} // ----------------------------------------------------------------------------\n// capitilize provided string\n// ----------------------------------------------------------------------------\n\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nexport function _capitalize(str) {\n  return capitalize(str[0] === '_' ? str.slice(1) : str);\n}\nexport function uncapitalize(str) {\n  return str.charAt(0).toLowerCase() + str.slice(1);\n} // ----------------------------------------------------------------------------\n// Convert byte size into a well formatted string\n// ----------------------------------------------------------------------------\n\nexport function formatBytesToProperUnit(size) {\n  let precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  let chunkSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1000;\n  const units = ['TB', 'GB', 'MB', 'KB'];\n  let value = Number(size);\n  let currentUnit = 'B';\n\n  while (value > chunkSize) {\n    value /= chunkSize;\n    currentUnit = units.pop();\n  }\n\n  return `${value.toFixed(precision)} ${currentUnit}`;\n} // ----------------------------------------------------------------------------\n// Convert thousand number with proper separator\n// ----------------------------------------------------------------------------\n\nexport function formatNumbersWithThousandSeparator(n) {\n  let separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ' ';\n  const sections = [];\n  let size = n;\n\n  while (size > 1000) {\n    sections.push(`000${size % 1000}`.slice(-3));\n    size = Math.floor(size / 1000);\n  }\n\n  if (size > 0) {\n    sections.push(size);\n  }\n\n  sections.reverse();\n  return sections.join(separator);\n} // ----------------------------------------------------------------------------\n// Array helper\n// ----------------------------------------------------------------------------\n\nfunction safeArrays(model) {\n  Object.keys(model).forEach(key => {\n    if (Array.isArray(model[key])) {\n      model[key] = [].concat(model[key]);\n    }\n  });\n} // ----------------------------------------------------------------------------\n// shallow equals\n// ----------------------------------------------------------------------------\n\n\nfunction shallowEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    for (let i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n} // ----------------------------------------------------------------------------\n\n\nfunction enumToString(e, value) {\n  return Object.keys(e).find(key => e[key] === value);\n}\n\nfunction getStateArrayMapFunc(item) {\n  if (item && item.isA) {\n    return item.getState();\n  }\n\n  return item;\n} // ----------------------------------------------------------------------------\n// setImmediate\n// ----------------------------------------------------------------------------\n\n\nexport function setImmediateVTK(fn) {\n  setTimeout(fn, 0);\n} // ----------------------------------------------------------------------------\n// measurePromiseExecution\n//\n// Measures the time it takes for a promise to finish from\n//   the time this function is invoked.\n// The callback receives the time it took for the promise to resolve or reject.\n// ----------------------------------------------------------------------------\n\nexport function measurePromiseExecution(promise, callback) {\n  const start = performance.now();\n  promise.finally(() => {\n    const delta = performance.now() - start;\n    callback(delta);\n  });\n} // ----------------------------------------------------------------------------\n// vtkObject: modified(), onModified(callback), delete()\n// ----------------------------------------------------------------------------\n\nexport function obj() {\n  let publicAPI = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let model = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // Ensure each instance as a unique ref of array\n  safeArrays(model);\n  const callbacks = [];\n\n  if (!Number.isInteger(model.mtime)) {\n    model.mtime = ++globalMTime;\n  }\n\n  if (!('classHierarchy' in model)) {\n    model.classHierarchy = new ClassHierarchy('vtkObject');\n  } else if (!(model.classHierarchy instanceof ClassHierarchy)) {\n    model.classHierarchy = ClassHierarchy.from(model.classHierarchy);\n  }\n\n  function off(index) {\n    callbacks[index] = null;\n  }\n\n  function on(index) {\n    function unsubscribe() {\n      off(index);\n    }\n\n    return Object.freeze({\n      unsubscribe\n    });\n  }\n\n  publicAPI.isDeleted = () => !!model.deleted;\n\n  publicAPI.modified = otherMTime => {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n\n    if (otherMTime && otherMTime < publicAPI.getMTime()) {\n      return;\n    }\n\n    model.mtime = ++globalMTime;\n    callbacks.forEach(callback => callback && callback(publicAPI));\n  };\n\n  publicAPI.onModified = callback => {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n\n    const index = callbacks.length;\n    callbacks.push(callback);\n    return on(index);\n  };\n\n  publicAPI.getMTime = () => model.mtime;\n\n  publicAPI.isA = className => {\n    let count = model.classHierarchy.length; // we go backwards as that is more likely for\n    // early termination\n\n    while (count--) {\n      if (model.classHierarchy[count] === className) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  publicAPI.getClassName = function () {\n    let depth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return model.classHierarchy[model.classHierarchy.length - 1 - depth];\n  };\n\n  publicAPI.set = function () {\n    let map = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let noWarning = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let noFunction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let ret = false;\n    Object.keys(map).forEach(name => {\n      const fn = noFunction ? null : publicAPI[`set${capitalize(name)}`];\n\n      if (fn && Array.isArray(map[name]) && fn.length > 1) {\n        ret = fn(...map[name]) || ret;\n      } else if (fn) {\n        ret = fn(map[name]) || ret;\n      } else {\n        // Set data on model directly\n        if (['mtime'].indexOf(name) === -1 && !noWarning) {\n          vtkWarningMacro(`Warning: Set value to model directly ${name}, ${map[name]}`);\n        }\n\n        ret = model[name] !== map[name] || ret;\n        model[name] = map[name];\n      }\n    });\n    return ret;\n  };\n\n  publicAPI.get = function () {\n    for (var _len3 = arguments.length, list = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      list[_key3] = arguments[_key3];\n    }\n\n    if (!list.length) {\n      return model;\n    }\n\n    const subset = {};\n    list.forEach(name => {\n      subset[name] = model[name];\n    });\n    return subset;\n  };\n\n  publicAPI.getReferenceByName = val => model[val];\n\n  publicAPI.delete = () => {\n    Object.keys(model).forEach(field => delete model[field]);\n    callbacks.forEach((el, index) => off(index)); // Flag the instance being deleted\n\n    model.deleted = true;\n  }; // Add serialization support\n\n\n  publicAPI.getState = () => {\n    if (model.deleted) {\n      return null;\n    }\n\n    const jsonArchive = { ...model,\n      vtkClass: publicAPI.getClassName()\n    }; // Convert every vtkObject to its serializable form\n\n    Object.keys(jsonArchive).forEach(keyName => {\n      if (jsonArchive[keyName] === null || jsonArchive[keyName] === undefined || keyName[0] === '_' // protected members start with _\n      ) {\n        delete jsonArchive[keyName];\n      } else if (jsonArchive[keyName].isA) {\n        jsonArchive[keyName] = jsonArchive[keyName].getState();\n      } else if (Array.isArray(jsonArchive[keyName])) {\n        jsonArchive[keyName] = jsonArchive[keyName].map(getStateArrayMapFunc);\n      }\n    }); // Sort resulting object by key name\n\n    const sortedObj = {};\n    Object.keys(jsonArchive).sort().forEach(name => {\n      sortedObj[name] = jsonArchive[name];\n    }); // Remove mtime\n\n    if (sortedObj.mtime) {\n      delete sortedObj.mtime;\n    }\n\n    return sortedObj;\n  }; // Add shallowCopy(otherInstance) support\n\n\n  publicAPI.shallowCopy = function (other) {\n    let debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (other.getClassName() !== publicAPI.getClassName()) {\n      throw new Error(`Cannot ShallowCopy ${other.getClassName()} into ${publicAPI.getClassName()}`);\n    }\n\n    const otherModel = other.get();\n    const keyList = Object.keys(model).sort();\n    const otherKeyList = Object.keys(otherModel).sort();\n    otherKeyList.forEach(key => {\n      const keyIdx = keyList.indexOf(key);\n\n      if (keyIdx === -1) {\n        if (debug) {\n          vtkDebugMacro(`add ${key} in shallowCopy`);\n        }\n      } else {\n        keyList.splice(keyIdx, 1);\n      }\n\n      model[key] = otherModel[key];\n    });\n\n    if (keyList.length && debug) {\n      vtkDebugMacro(`Untouched keys: ${keyList.join(', ')}`);\n    }\n\n    publicAPI.modified();\n  }; // This function will get called when one invoke JSON.stringify(vtkObject)\n  // JSON.stringify will only stringify the return value of this function\n\n\n  publicAPI.toJSON = function vtkObjToJSON() {\n    return publicAPI.getState();\n  }; // Allow usage as decorator\n\n\n  return publicAPI;\n} // ----------------------------------------------------------------------------\n// getXXX: add getters\n// ----------------------------------------------------------------------------\n\nexport function get(publicAPI, model, fieldNames) {\n  fieldNames.forEach(field => {\n    if (typeof field === 'object') {\n      publicAPI[`get${_capitalize(field.name)}`] = () => model[field.name];\n    } else {\n      publicAPI[`get${_capitalize(field)}`] = () => model[field];\n    }\n  });\n} // ----------------------------------------------------------------------------\n// setXXX: add setters\n// ----------------------------------------------------------------------------\n\nconst objectSetterMap = {\n  enum(publicAPI, model, field) {\n    return value => {\n      if (typeof value === 'string') {\n        if (field.enum[value] !== undefined) {\n          if (model[field.name] !== field.enum[value]) {\n            model[field.name] = field.enum[value];\n            publicAPI.modified();\n            return true;\n          }\n\n          return false;\n        }\n\n        vtkErrorMacro(`Set Enum with invalid argument ${field}, ${value}`);\n        throw new RangeError('Set Enum with invalid string argument');\n      }\n\n      if (typeof value === 'number') {\n        if (model[field.name] !== value) {\n          if (Object.keys(field.enum).map(key => field.enum[key]).indexOf(value) !== -1) {\n            model[field.name] = value;\n            publicAPI.modified();\n            return true;\n          }\n\n          vtkErrorMacro(`Set Enum outside numeric range ${field}, ${value}`);\n          throw new RangeError('Set Enum outside numeric range');\n        }\n\n        return false;\n      }\n\n      vtkErrorMacro(`Set Enum with invalid argument (String/Number) ${field}, ${value}`);\n      throw new TypeError('Set Enum with invalid argument (String/Number)');\n    };\n  }\n\n};\n\nfunction findSetter(field) {\n  if (typeof field === 'object') {\n    const fn = objectSetterMap[field.type];\n\n    if (fn) {\n      return (publicAPI, model) => fn(publicAPI, model, field);\n    }\n\n    vtkErrorMacro(`No setter for field ${field}`);\n    throw new TypeError('No setter for field');\n  }\n\n  return function getSetter(publicAPI, model) {\n    return function setter(value) {\n      if (model.deleted) {\n        vtkErrorMacro('instance deleted - cannot call any method');\n        return false;\n      }\n\n      if (model[field] !== value) {\n        model[field] = value;\n        publicAPI.modified();\n        return true;\n      }\n\n      return false;\n    };\n  };\n}\n\nexport function set(publicAPI, model, fields) {\n  fields.forEach(field => {\n    if (typeof field === 'object') {\n      publicAPI[`set${_capitalize(field.name)}`] = findSetter(field)(publicAPI, model);\n    } else {\n      publicAPI[`set${_capitalize(field)}`] = findSetter(field)(publicAPI, model);\n    }\n  });\n} // ----------------------------------------------------------------------------\n// set/get XXX: add both setters and getters\n// ----------------------------------------------------------------------------\n\nexport function setGet(publicAPI, model, fieldNames) {\n  get(publicAPI, model, fieldNames);\n  set(publicAPI, model, fieldNames);\n} // ----------------------------------------------------------------------------\n// getXXX: add getters for object of type array with copy to be safe\n// getXXXByReference: add getters for object of type array without copy\n// ----------------------------------------------------------------------------\n\nexport function getArray(publicAPI, model, fieldNames) {\n  fieldNames.forEach(field => {\n    publicAPI[`get${_capitalize(field)}`] = () => model[field] ? [].concat(model[field]) : model[field];\n\n    publicAPI[`get${_capitalize(field)}ByReference`] = () => model[field];\n  });\n} // ----------------------------------------------------------------------------\n// setXXX: add setter for object of type array\n// if 'defaultVal' is supplied, shorter arrays will be padded to 'size' with 'defaultVal'\n// set...From: fast path to copy the content of an array to the current one without call to modified.\n// ----------------------------------------------------------------------------\n\nexport function setArray(publicAPI, model, fieldNames, size) {\n  let defaultVal = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : undefined;\n  fieldNames.forEach(field => {\n    if (model[field] && size && model[field].length !== size) {\n      throw new RangeError(`Invalid initial number of values for array (${field})`);\n    }\n\n    publicAPI[`set${_capitalize(field)}`] = function () {\n      if (model.deleted) {\n        vtkErrorMacro('instance deleted - cannot call any method');\n        return false;\n      }\n\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      let array = args;\n      let changeDetected;\n      let needCopy = false; // allow null or an array to be passed as a single arg.\n\n      if (array.length === 1 && (array[0] == null || array[0].length >= 0)) {\n        /* eslint-disable prefer-destructuring */\n        array = array[0];\n        /* eslint-enable prefer-destructuring */\n\n        needCopy = true;\n      }\n\n      if (array == null) {\n        changeDetected = model[field] !== array;\n      } else {\n        if (size && array.length !== size) {\n          if (array.length < size && defaultVal !== undefined) {\n            array = Array.from(array);\n            needCopy = false;\n\n            while (array.length < size) array.push(defaultVal);\n          } else {\n            throw new RangeError(`Invalid number of values for array setter (${field})`);\n          }\n        }\n\n        changeDetected = model[field] == null || model[field].some((item, index) => item !== array[index]) || model[field].length !== array.length;\n\n        if (changeDetected && needCopy) {\n          array = Array.from(array);\n        }\n      }\n\n      if (changeDetected) {\n        model[field] = array;\n        publicAPI.modified();\n      }\n\n      return changeDetected;\n    };\n\n    publicAPI[`set${_capitalize(field)}From`] = otherArray => {\n      const target = model[field];\n      otherArray.forEach((v, i) => {\n        target[i] = v;\n      });\n    };\n  });\n} // ----------------------------------------------------------------------------\n// set/get XXX: add setter and getter for object of type array\n// ----------------------------------------------------------------------------\n\nexport function setGetArray(publicAPI, model, fieldNames, size) {\n  let defaultVal = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : undefined;\n  getArray(publicAPI, model, fieldNames);\n  setArray(publicAPI, model, fieldNames, size, defaultVal);\n}\nexport function moveToProtected(publicAPI, model, fieldNames) {\n  for (let i = 0; i < fieldNames.length; i++) {\n    const fieldName = fieldNames[i];\n\n    if (model[fieldName] !== undefined) {\n      model[`_${fieldName}`] = model[fieldName];\n      delete model[fieldName];\n    }\n  }\n} // ----------------------------------------------------------------------------\n// vtkAlgorithm: setInputData(), setInputConnection(), getOutputData(), getOutputPort()\n// ----------------------------------------------------------------------------\n\nexport function algo(publicAPI, model, numberOfInputs, numberOfOutputs) {\n  if (model.inputData) {\n    model.inputData = model.inputData.map(vtk);\n  } else {\n    model.inputData = [];\n  }\n\n  if (model.inputConnection) {\n    model.inputConnection = model.inputConnection.map(vtk);\n  } else {\n    model.inputConnection = [];\n  }\n\n  if (model.output) {\n    model.output = model.output.map(vtk);\n  } else {\n    model.output = [];\n  }\n\n  if (model.inputArrayToProcess) {\n    model.inputArrayToProcess = model.inputArrayToProcess.map(vtk);\n  } else {\n    model.inputArrayToProcess = [];\n  } // Cache the argument for later manipulation\n\n\n  model.numberOfInputs = numberOfInputs; // Methods\n\n  function setInputData(dataset) {\n    let port = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n\n    if (port >= model.numberOfInputs) {\n      vtkErrorMacro(`algorithm ${publicAPI.getClassName()} only has ${model.numberOfInputs} input ports. To add more input ports, use addInputData()`);\n      return;\n    }\n\n    if (model.inputData[port] !== dataset || model.inputConnection[port]) {\n      model.inputData[port] = dataset;\n      model.inputConnection[port] = null;\n\n      if (publicAPI.modified) {\n        publicAPI.modified();\n      }\n    }\n  }\n\n  function getInputData() {\n    let port = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    if (model.inputConnection[port]) {\n      model.inputData[port] = model.inputConnection[port]();\n    }\n\n    return model.inputData[port];\n  }\n\n  function setInputConnection(outputPort) {\n    let port = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n\n    if (port >= model.numberOfInputs) {\n      let msg = `algorithm ${publicAPI.getClassName()} only has `;\n      msg += `${model.numberOfInputs}`;\n      msg += ' input ports. To add more input ports, use addInputConnection()';\n      vtkErrorMacro(msg);\n      return;\n    }\n\n    model.inputData[port] = null;\n    model.inputConnection[port] = outputPort;\n  }\n\n  function getInputConnection() {\n    let port = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return model.inputConnection[port];\n  }\n\n  function getPortToFill() {\n    let portToFill = model.numberOfInputs;\n\n    while (portToFill && !model.inputData[portToFill - 1] && !model.inputConnection[portToFill - 1]) {\n      portToFill--;\n    }\n\n    if (portToFill === model.numberOfInputs) {\n      model.numberOfInputs++;\n    }\n\n    return portToFill;\n  }\n\n  function addInputConnection(outputPort) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n\n    setInputConnection(outputPort, getPortToFill());\n  }\n\n  function addInputData(dataset) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n\n    setInputData(dataset, getPortToFill());\n  }\n\n  function getOutputData() {\n    let port = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n\n    if (publicAPI.shouldUpdate()) {\n      publicAPI.update();\n    }\n\n    return model.output[port];\n  }\n\n  publicAPI.shouldUpdate = () => {\n    const localMTime = publicAPI.getMTime();\n    let minOutputMTime = Infinity;\n    let count = numberOfOutputs;\n\n    while (count--) {\n      if (!model.output[count] || model.output[count].isDeleted()) {\n        return true;\n      }\n\n      const mt = model.output[count].getMTime();\n\n      if (mt < localMTime) {\n        return true;\n      }\n\n      if (mt < minOutputMTime) {\n        minOutputMTime = mt;\n      }\n    }\n\n    count = model.numberOfInputs;\n\n    while (count--) {\n      if (model.inputConnection[count]?.filter.shouldUpdate() || publicAPI.getInputData(count)?.getMTime() > minOutputMTime) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  function getOutputPort() {\n    let port = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    const outputPortAccess = () => getOutputData(port); // Add reference to filter\n\n\n    outputPortAccess.filter = publicAPI;\n    return outputPortAccess;\n  } // Handle input if needed\n\n\n  if (model.numberOfInputs) {\n    // Reserve inputs\n    let count = model.numberOfInputs;\n\n    while (count--) {\n      model.inputData.push(null);\n      model.inputConnection.push(null);\n    } // Expose public methods\n\n\n    publicAPI.setInputData = setInputData;\n    publicAPI.setInputConnection = setInputConnection;\n    publicAPI.addInputData = addInputData;\n    publicAPI.addInputConnection = addInputConnection;\n    publicAPI.getInputData = getInputData;\n    publicAPI.getInputConnection = getInputConnection;\n  }\n\n  if (numberOfOutputs) {\n    publicAPI.getOutputData = getOutputData;\n    publicAPI.getOutputPort = getOutputPort;\n  }\n\n  publicAPI.update = () => {\n    const ins = [];\n\n    if (model.numberOfInputs) {\n      let count = 0;\n\n      while (count < model.numberOfInputs) {\n        ins[count] = publicAPI.getInputData(count);\n        count++;\n      }\n    }\n\n    if (publicAPI.shouldUpdate() && publicAPI.requestData) {\n      publicAPI.requestData(ins, model.output);\n    }\n  };\n\n  publicAPI.getNumberOfInputPorts = () => model.numberOfInputs;\n\n  publicAPI.getNumberOfOutputPorts = () => numberOfOutputs || model.output.length;\n\n  publicAPI.getInputArrayToProcess = inputPort => {\n    const arrayDesc = model.inputArrayToProcess[inputPort];\n    const ds = model.inputData[inputPort];\n\n    if (arrayDesc && ds) {\n      return ds[`get${arrayDesc.fieldAssociation}`]().getArray(arrayDesc.arrayName);\n    }\n\n    return null;\n  };\n\n  publicAPI.setInputArrayToProcess = function (inputPort, arrayName, fieldAssociation) {\n    let attributeType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'Scalars';\n\n    while (model.inputArrayToProcess.length < inputPort) {\n      model.inputArrayToProcess.push(null);\n    }\n\n    model.inputArrayToProcess[inputPort] = {\n      arrayName,\n      fieldAssociation,\n      attributeType\n    };\n  };\n} // ----------------------------------------------------------------------------\n// Event handling: onXXX(callback), invokeXXX(args...)\n// ----------------------------------------------------------------------------\n\nexport const EVENT_ABORT = Symbol('Event abort');\nexport function event(publicAPI, model, eventName) {\n  const callbacks = [];\n  const previousDelete = publicAPI.delete;\n  let curCallbackID = 1;\n\n  function off(callbackID) {\n    for (let i = 0; i < callbacks.length; ++i) {\n      const [cbID] = callbacks[i];\n\n      if (cbID === callbackID) {\n        callbacks.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  function on(callbackID) {\n    function unsubscribe() {\n      off(callbackID);\n    }\n\n    return Object.freeze({\n      unsubscribe\n    });\n  }\n\n  function invoke() {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    /* eslint-disable prefer-rest-params */\n    // Go through a copy of the callbacks array in case new callbacks\n    // get prepended within previous callbacks\n\n\n    const currentCallbacks = callbacks.slice();\n\n    for (let index = 0; index < currentCallbacks.length; ++index) {\n      const [, cb, priority] = currentCallbacks[index];\n\n      if (!cb) {\n        continue; // eslint-disable-line\n      }\n\n      if (priority < 0) {\n        setTimeout(() => cb.apply(publicAPI, arguments), 1 - priority);\n      } else {\n        // Abort only if the callback explicitly returns false\n        const continueNext = cb.apply(publicAPI, arguments);\n\n        if (continueNext === EVENT_ABORT) {\n          break;\n        }\n      }\n    }\n    /* eslint-enable prefer-rest-params */\n\n  }\n\n  publicAPI[`invoke${_capitalize(eventName)}`] = invoke;\n\n  publicAPI[`on${_capitalize(eventName)}`] = function (callback) {\n    let priority = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.0;\n\n    if (!callback.apply) {\n      console.error(`Invalid callback for event ${eventName}`);\n      return null;\n    }\n\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n\n    const callbackID = curCallbackID++;\n    callbacks.push([callbackID, callback, priority]);\n    callbacks.sort((cb1, cb2) => cb2[2] - cb1[2]);\n    return on(callbackID);\n  };\n\n  publicAPI.delete = () => {\n    previousDelete();\n    callbacks.forEach(_ref => {\n      let [cbID] = _ref;\n      return off(cbID);\n    });\n  };\n} // ----------------------------------------------------------------------------\n// newInstance\n// ----------------------------------------------------------------------------\n\nexport function newInstance(extend, className) {\n  const constructor = function () {\n    let initialValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const model = {};\n    const publicAPI = {};\n    extend(publicAPI, model, initialValues);\n    return Object.freeze(publicAPI);\n  }; // Register constructor to factory\n\n\n  if (className) {\n    vtk.register(className, constructor);\n  }\n\n  return constructor;\n} // ----------------------------------------------------------------------------\n// Chain function calls\n// ----------------------------------------------------------------------------\n\nexport function chain() {\n  for (var _len5 = arguments.length, fn = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    fn[_key5] = arguments[_key5];\n  }\n\n  return function () {\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n\n    return fn.filter(i => !!i).map(i => i(...args));\n  };\n} // ----------------------------------------------------------------------------\n// Some utility methods for vtk objects\n// ----------------------------------------------------------------------------\n\nexport function isVtkObject(instance) {\n  return instance && instance.isA && instance.isA('vtkObject');\n}\nexport function traverseInstanceTree(instance, extractFunction) {\n  let accumulator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  let visitedInstances = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n\n  if (isVtkObject(instance)) {\n    if (visitedInstances.indexOf(instance) >= 0) {\n      // avoid cycles\n      return accumulator;\n    }\n\n    visitedInstances.push(instance);\n    const result = extractFunction(instance);\n\n    if (result !== undefined) {\n      accumulator.push(result);\n    } // Now go through this instance's model\n\n\n    const model = instance.get();\n    Object.keys(model).forEach(key => {\n      const modelObj = model[key];\n\n      if (Array.isArray(modelObj)) {\n        modelObj.forEach(subObj => {\n          traverseInstanceTree(subObj, extractFunction, accumulator, visitedInstances);\n        });\n      } else {\n        traverseInstanceTree(modelObj, extractFunction, accumulator, visitedInstances);\n      }\n    });\n  }\n\n  return accumulator;\n} // ----------------------------------------------------------------------------\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\n\nexport function debounce(func, wait, immediate) {\n  var _this = this;\n\n  let timeout;\n\n  const debounced = function () {\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n\n    const context = _this;\n\n    const later = () => {\n      timeout = null;\n\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n\n  debounced.cancel = () => clearTimeout(timeout);\n\n  return debounced;\n} // ----------------------------------------------------------------------------\n// Creates a throttled function that only invokes `func` at most once per\n// every `wait` milliseconds.\n\nexport function throttle(callback, delay) {\n  let isThrottled = false;\n  let argsToUse = null;\n\n  function next() {\n    isThrottled = false;\n\n    if (argsToUse !== null) {\n      wrapper(...argsToUse); // eslint-disable-line\n\n      argsToUse = null;\n    }\n  }\n\n  function wrapper() {\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n\n    if (isThrottled) {\n      argsToUse = args;\n      return;\n    }\n\n    isThrottled = true;\n    callback(...args);\n    setTimeout(next, delay);\n  }\n\n  return wrapper;\n} // ----------------------------------------------------------------------------\n// keystore(publicAPI, model, initialKeystore)\n//\n//    - initialKeystore: Initial keystore. This can be either a Map or an\n//      object.\n//\n// Generated API\n//  setKey(key, value) : mixed (returns value)\n//  getKey(key) : mixed\n//  getAllKeys() : [mixed]\n//  deleteKey(key) : Boolean\n// ----------------------------------------------------------------------------\n\nexport function keystore(publicAPI, model) {\n  let initialKeystore = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  model.keystore = Object.assign(model.keystore || {}, initialKeystore);\n\n  publicAPI.setKey = (key, value) => {\n    model.keystore[key] = value;\n  };\n\n  publicAPI.getKey = key => model.keystore[key];\n\n  publicAPI.getAllKeys = () => Object.keys(model.keystore);\n\n  publicAPI.deleteKey = key => delete model.keystore[key];\n\n  publicAPI.clearKeystore = () => publicAPI.getAllKeys().forEach(key => delete model.keystore[key]);\n} // ----------------------------------------------------------------------------\n// proxy(publicAPI, model, sectionName, propertyUI)\n//\n//    - sectionName: Name of the section for UI\n//    - propertyUI: List of props with their UI description\n//\n// Generated API\n//  getProxyId() : String\n//  listProxyProperties() : [string]\n//  updateProxyProperty(name, prop)\n//  getProxySection() => List of properties for UI generation\n// ----------------------------------------------------------------------------\n\nlet nextProxyId = 1;\nconst ROOT_GROUP_NAME = '__root__';\nexport function proxy(publicAPI, model) {\n  // Proxies are keystores\n  keystore(publicAPI, model);\n  const parentDelete = publicAPI.delete; // getProxyId\n\n  model.proxyId = `${nextProxyId++}`; // ui handling\n\n  model.ui = JSON.parse(JSON.stringify(model.ui || [])); // deep copy\n\n  get(publicAPI, model, ['proxyId', 'proxyGroup', 'proxyName']);\n  setGet(publicAPI, model, ['proxyManager']); // group properties\n\n  const propertyMap = {};\n  const groupChildrenNames = {};\n\n  function registerProperties(descriptionList, currentGroupName) {\n    if (!groupChildrenNames[currentGroupName]) {\n      groupChildrenNames[currentGroupName] = [];\n    }\n\n    const childrenNames = groupChildrenNames[currentGroupName];\n\n    for (let i = 0; i < descriptionList.length; i++) {\n      childrenNames.push(descriptionList[i].name);\n      propertyMap[descriptionList[i].name] = descriptionList[i];\n\n      if (descriptionList[i].children && descriptionList[i].children.length) {\n        registerProperties(descriptionList[i].children, descriptionList[i].name);\n      }\n    }\n  }\n\n  registerProperties(model.ui, ROOT_GROUP_NAME);\n\n  publicAPI.updateUI = ui => {\n    model.ui = JSON.parse(JSON.stringify(ui || [])); // deep copy\n\n    Object.keys(propertyMap).forEach(k => delete propertyMap[k]);\n    Object.keys(groupChildrenNames).forEach(k => delete groupChildrenNames[k]);\n    registerProperties(model.ui, ROOT_GROUP_NAME);\n    publicAPI.modified();\n  };\n\n  function listProxyProperties() {\n    let gName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ROOT_GROUP_NAME;\n    return groupChildrenNames[gName];\n  }\n\n  publicAPI.updateProxyProperty = (propertyName, propUI) => {\n    const prop = propertyMap[propertyName];\n\n    if (prop) {\n      Object.assign(prop, propUI);\n    } else {\n      propertyMap[propertyName] = { ...propUI\n      };\n    }\n  };\n\n  publicAPI.activate = () => {\n    if (model.proxyManager) {\n      const setActiveMethod = `setActive${_capitalize(publicAPI.getProxyGroup().slice(0, -1))}`;\n\n      if (model.proxyManager[setActiveMethod]) {\n        model.proxyManager[setActiveMethod](publicAPI);\n      }\n    }\n  }; // property link\n\n\n  model.propertyLinkSubscribers = {};\n\n  publicAPI.registerPropertyLinkForGC = (otherLink, type) => {\n    if (!(type in model.propertyLinkSubscribers)) {\n      model.propertyLinkSubscribers[type] = [];\n    }\n\n    model.propertyLinkSubscribers[type].push(otherLink);\n  };\n\n  publicAPI.gcPropertyLinks = type => {\n    const subscribers = model.propertyLinkSubscribers[type] || [];\n\n    while (subscribers.length) {\n      subscribers.pop().unbind(publicAPI);\n    }\n  };\n\n  model.propertyLinkMap = {};\n\n  publicAPI.getPropertyLink = function (id) {\n    let persistent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (model.propertyLinkMap[id]) {\n      return model.propertyLinkMap[id];\n    }\n\n    let value = null;\n    const links = [];\n    let count = 0;\n    let updateInProgress = false;\n\n    function update(source) {\n      let force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (updateInProgress) {\n        return null;\n      }\n\n      const needUpdate = [];\n      let sourceLink = null;\n      count = links.length;\n\n      while (count--) {\n        const link = links[count];\n\n        if (link.instance === source) {\n          sourceLink = link;\n        } else {\n          needUpdate.push(link);\n        }\n      }\n\n      if (!sourceLink) {\n        return null;\n      }\n\n      const newValue = sourceLink.instance[`get${_capitalize(sourceLink.propertyName)}`]();\n\n      if (!shallowEquals(newValue, value) || force) {\n        value = newValue;\n        updateInProgress = true;\n\n        while (needUpdate.length) {\n          const linkToUpdate = needUpdate.pop();\n          linkToUpdate.instance.set({\n            [linkToUpdate.propertyName]: value\n          });\n        }\n\n        updateInProgress = false;\n      }\n\n      if (model.propertyLinkMap[id].persistent) {\n        model.propertyLinkMap[id].value = newValue;\n      }\n\n      return newValue;\n    }\n\n    function unbind(instance, propertyName) {\n      const indexToDelete = [];\n      count = links.length;\n\n      while (count--) {\n        const link = links[count];\n\n        if (link.instance === instance && (link.propertyName === propertyName || propertyName === undefined)) {\n          link.subscription.unsubscribe();\n          indexToDelete.push(count);\n        }\n      }\n\n      while (indexToDelete.length) {\n        links.splice(indexToDelete.pop(), 1);\n      }\n    }\n\n    function bind(instance, propertyName) {\n      let updateMe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      const subscription = instance.onModified(update);\n      const other = links[0];\n      links.push({\n        instance,\n        propertyName,\n        subscription\n      });\n\n      if (updateMe) {\n        if (model.propertyLinkMap[id].persistent && model.propertyLinkMap[id].value !== undefined) {\n          instance.set({\n            [propertyName]: model.propertyLinkMap[id].value\n          });\n        } else if (other) {\n          update(other.instance, true);\n        }\n      }\n\n      return {\n        unsubscribe: () => unbind(instance, propertyName)\n      };\n    }\n\n    function unsubscribe() {\n      while (links.length) {\n        links.pop().subscription.unsubscribe();\n      }\n    }\n\n    const linkHandler = {\n      bind,\n      unbind,\n      unsubscribe,\n      persistent\n    };\n    model.propertyLinkMap[id] = linkHandler;\n    return linkHandler;\n  }; // extract values\n\n\n  function getProperties() {\n    let groupName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ROOT_GROUP_NAME;\n    const values = [];\n    const id = model.proxyId;\n    const propertyNames = listProxyProperties(groupName) || [];\n\n    for (let i = 0; i < propertyNames.length; i++) {\n      const name = propertyNames[i];\n      const method = publicAPI[`get${_capitalize(name)}`];\n      const value = method ? method() : undefined;\n      const prop = {\n        id,\n        name,\n        value\n      };\n      const children = getProperties(name);\n\n      if (children.length) {\n        prop.children = children;\n      }\n\n      values.push(prop);\n    }\n\n    return values;\n  }\n\n  publicAPI.listPropertyNames = () => getProperties().map(p => p.name);\n\n  publicAPI.getPropertyByName = name => getProperties().find(p => p.name === name);\n\n  publicAPI.getPropertyDomainByName = name => (propertyMap[name] || {}).domain; // ui section\n\n\n  publicAPI.getProxySection = () => ({\n    id: model.proxyId,\n    name: model.proxyGroup,\n    ui: model.ui,\n    properties: getProperties()\n  }); // free resources\n\n\n  publicAPI.delete = () => {\n    const list = Object.keys(model.propertyLinkMap);\n    let count = list.length;\n\n    while (count--) {\n      model.propertyLinkMap[list[count]].unsubscribe();\n    }\n\n    Object.keys(model.propertyLinkSubscribers).forEach(publicAPI.gcPropertyLinks);\n    parentDelete();\n  }; // @todo fix infinite recursion due to active source\n\n\n  publicAPI.getState = () => null;\n\n  function registerLinks() {\n    // Allow dynamic registration of links at the application level\n    if (model.links) {\n      for (let i = 0; i < model.links.length; i++) {\n        const {\n          link,\n          property,\n          persistent,\n          updateOnBind,\n          type\n        } = model.links[i];\n\n        if (type === 'application') {\n          const sLink = model.proxyManager.getPropertyLink(link, persistent);\n          publicAPI.registerPropertyLinkForGC(sLink, 'application');\n          sLink.bind(publicAPI, property, updateOnBind);\n        }\n      }\n    }\n  }\n\n  setImmediateVTK(registerLinks);\n} // ----------------------------------------------------------------------------\n// proxyPropertyMapping(publicAPI, model, map)\n//\n//   map = {\n//      opacity: { modelKey: 'property', property: 'opacity' },\n//   }\n//\n// Generated API:\n//  Elevate set/get methods from internal object stored in the model to current one\n// ----------------------------------------------------------------------------\n\nexport function proxyPropertyMapping(publicAPI, model, map) {\n  const parentDelete = publicAPI.delete;\n  const subscriptions = [];\n  const propertyNames = Object.keys(map);\n  let count = propertyNames.length;\n\n  while (count--) {\n    const propertyName = propertyNames[count];\n    const {\n      modelKey,\n      property,\n      modified = true\n    } = map[propertyName];\n\n    const methodSrc = _capitalize(property);\n\n    const methodDst = _capitalize(propertyName);\n\n    publicAPI[`get${methodDst}`] = model[modelKey][`get${methodSrc}`];\n    publicAPI[`set${methodDst}`] = model[modelKey][`set${methodSrc}`];\n\n    if (modified) {\n      subscriptions.push(model[modelKey].onModified(publicAPI.modified));\n    }\n  }\n\n  publicAPI.delete = () => {\n    while (subscriptions.length) {\n      subscriptions.pop().unsubscribe();\n    }\n\n    parentDelete();\n  };\n} // ----------------------------------------------------------------------------\n// proxyPropertyState(publicAPI, model, state, defaults)\n//\n//   state = {\n//     representation: {\n//       'Surface with edges': { property: { edgeVisibility: true, representation: 2 } },\n//       Surface: { property: { edgeVisibility: false, representation: 2 } },\n//       Wireframe: { property: { edgeVisibility: false, representation: 1 } },\n//       Points: { property: { edgeVisibility: false, representation: 0 } },\n//     },\n//   }\n//\n//   defaults = {\n//      representation: 'Surface',\n//   }\n//\n// Generated API\n//   get / set Representation ( string ) => push state to various internal objects\n// ----------------------------------------------------------------------------\n\nexport function proxyPropertyState(publicAPI, model) {\n  let state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let defaults = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  model.this = publicAPI;\n\n  function applyState(map) {\n    const modelKeys = Object.keys(map);\n    let count = modelKeys.length;\n\n    while (count--) {\n      const modelKey = modelKeys[count];\n      model[modelKey].set(map[modelKey]);\n    }\n  }\n\n  const modelKeys = Object.keys(defaults);\n  let count = modelKeys.length;\n\n  while (count--) {\n    // Add default\n    const key = modelKeys[count];\n    model[key] = defaults[key]; // Add set method\n\n    const mapping = state[key];\n\n    publicAPI[`set${_capitalize(key)}`] = value => {\n      if (value !== model[key]) {\n        model[key] = value;\n        const propValues = mapping[value];\n        applyState(propValues);\n        publicAPI.modified();\n      }\n    };\n  } // Add getter\n\n\n  if (modelKeys.length) {\n    get(publicAPI, model, modelKeys);\n  }\n} // ----------------------------------------------------------------------------\n// From : https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\n//\n//\n// Copyright (c) 2015, Facebook, Inc.\n// All rights reserved.\n//\n// This source code is licensed under the BSD-style license found in the\n// LICENSE file in the root directory of this source tree. An additional grant\n// of patent rights can be found in the PATENTS file in the same directory.\n//\n//\n// Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is\n// complicated, thus this doc is long and (hopefully) detailed enough to answer\n// your questions.\n//\n// If you need to react to the mouse wheel in a predictable way, this code is\n// like your bestest friend.// hugs//\n//\n// As of today, there are 4 DOM event types you can listen to:\n//\n//   'wheel'                -- Chrome(31+), FF(17+), IE(9+)\n//   'mousewheel'           -- Chrome, IE(6+), Opera, Safari\n//   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!\n//   'DOMMouseScroll'       -- FF(0.9.7+) since 2003\n//\n// So what to do?  The is the best:\n//\n//   normalizeWheel.getEventType();\n//\n// In your event callback, use this code to get sane interpretation of the\n// deltas.  This code will return an object with properties:\n//\n//   spinX   -- normalized spin speed (use for zoom) - x plane\n//   spinY   -- \" - y plane\n//   pixelX  -- normalized distance (to pixels) - x plane\n//   pixelY  -- \" - y plane\n//\n// Wheel values are provided by the browser assuming you are using the wheel to\n// scroll a web page by a number of lines or pixels (or pages).  Values can vary\n// significantly on different platforms and browsers, forgetting that you can\n// scroll at different speeds.  Some devices (like trackpads) emit more events\n// at smaller increments with fine granularity, and some emit massive jumps with\n// linear speed or acceleration.\n//\n// This code does its best to normalize the deltas for you:\n//\n//   - spin is trying to normalize how far the wheel was spun (or trackpad\n//     dragged).  This is super useful for zoom support where you want to\n//     throw away the chunky scroll steps on the PC and make those equal to\n//     the slow and smooth tiny steps on the Mac. Key data: This code tries to\n//     resolve a single slow step on a wheel to 1.\n//\n//   - pixel is normalizing the desired scroll delta in pixel units.  You'll\n//     get the crazy differences between browsers, but at least it'll be in\n//     pixels!\n//\n//   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This\n//     should translate to positive value zooming IN, negative zooming OUT.\n//     This matches the newer 'wheel' event.\n//\n// Why are there spinX, spinY (or pixels)?\n//\n//   - spinX is a 2-finger side drag on the trackpad, and a shift + wheel turn\n//     with a mouse.  It results in side-scrolling in the browser by default.\n//\n//   - spinY is what you expect -- it's the classic axis of a mouse wheel.\n//\n//   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and\n//     probably is by browsers in conjunction with fancy 3D controllers .. but\n//     you know.\n//\n// Implementation info:\n//\n// Examples of 'wheel' event if you scroll slowly (down) by one step with an\n// average mouse:\n//\n//   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)\n//   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)\n//   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)\n//   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)\n//   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)\n//\n// On the trackpad:\n//\n//   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)\n//   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)\n//\n// On other/older browsers.. it's more complicated as there can be multiple and\n// also missing delta values.\n//\n// The 'wheel' event is more standard:\n//\n// http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents\n//\n// The basics is that it includes a unit, deltaMode (pixels, lines, pages), and\n// deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain\n// backward compatibility with older events.  Those other values help us\n// better normalize spin speed.  Example of what the browsers provide:\n//\n//                          | event.wheelDelta | event.detail\n//        ------------------+------------------+--------------\n//          Safari v5/OS X  |       -120       |       0\n//          Safari v5/Win7  |       -120       |       0\n//         Chrome v17/OS X  |       -120       |       0\n//         Chrome v17/Win7  |       -120       |       0\n//                IE9/Win7  |       -120       |   undefined\n//         Firefox v4/OS X  |     undefined    |       1\n//         Firefox v4/Win7  |     undefined    |       3\n//\n// ----------------------------------------------------------------------------\n// Reasonable defaults\n\nconst PIXEL_STEP = 10;\nconst LINE_HEIGHT = 40;\nconst PAGE_HEIGHT = 800;\nexport function normalizeWheel(wheelEvent) {\n  let sX = 0; // spinX\n\n  let sY = 0; // spinY\n\n  let pX = 0; // pixelX\n\n  let pY = 0; // pixelY\n  // Legacy\n\n  if ('detail' in wheelEvent) {\n    sY = wheelEvent.detail;\n  }\n\n  if ('wheelDelta' in wheelEvent) {\n    sY = -wheelEvent.wheelDelta / 120;\n  }\n\n  if ('wheelDeltaY' in wheelEvent) {\n    sY = -wheelEvent.wheelDeltaY / 120;\n  }\n\n  if ('wheelDeltaX' in wheelEvent) {\n    sX = -wheelEvent.wheelDeltaX / 120;\n  } // side scrolling on FF with DOMMouseScroll\n\n\n  if ('axis' in wheelEvent && wheelEvent.axis === wheelEvent.HORIZONTAL_AXIS) {\n    sX = sY;\n    sY = 0;\n  }\n\n  pX = sX * PIXEL_STEP;\n  pY = sY * PIXEL_STEP;\n\n  if ('deltaY' in wheelEvent) {\n    pY = wheelEvent.deltaY;\n  }\n\n  if ('deltaX' in wheelEvent) {\n    pX = wheelEvent.deltaX;\n  }\n\n  if ((pX || pY) && wheelEvent.deltaMode) {\n    if (wheelEvent.deltaMode === 1) {\n      // delta in LINE units\n      pX *= LINE_HEIGHT;\n      pY *= LINE_HEIGHT;\n    } else {\n      // delta in PAGE units\n      pX *= PAGE_HEIGHT;\n      pY *= PAGE_HEIGHT;\n    }\n  } // Fall-back if spin cannot be determined\n\n\n  if (pX && !sX) {\n    sX = pX < 1 ? -1 : 1;\n  }\n\n  if (pY && !sY) {\n    sY = pY < 1 ? -1 : 1;\n  }\n\n  return {\n    spinX: sX,\n    spinY: sY,\n    pixelX: pX,\n    pixelY: pY\n  };\n} // ----------------------------------------------------------------------------\n// Default export\n// ----------------------------------------------------------------------------\n\nexport default {\n  algo,\n  capitalize,\n  chain,\n  debounce,\n  enumToString,\n  event,\n  EVENT_ABORT,\n  formatBytesToProperUnit,\n  formatNumbersWithThousandSeparator,\n  get,\n  getArray,\n  getCurrentGlobalMTime,\n  getStateArrayMapFunc,\n  isVtkObject,\n  keystore,\n  measurePromiseExecution,\n  moveToProtected,\n  newInstance,\n  newTypedArray,\n  newTypedArrayFrom,\n  normalizeWheel,\n  obj,\n  proxy,\n  proxyPropertyMapping,\n  proxyPropertyState,\n  safeArrays,\n  set,\n  setArray,\n  setGet,\n  setGetArray,\n  setImmediate: setImmediateVTK,\n  setLoggerFunction,\n  throttle,\n  traverseInstanceTree,\n  TYPED_ARRAYS,\n  // deprecated todo remove on breaking API revision\n  uncapitalize,\n  VOID,\n  vtkDebugMacro,\n  vtkErrorMacro,\n  vtkInfoMacro,\n  vtkLogMacro,\n  vtkOnceErrorMacro,\n  vtkWarningMacro\n};","map":{"version":3,"names":["vtk","vtkGlobal","ClassHierarchy","globalMTime","VOID","Symbol","getCurrentGlobalMTime","fakeConsole","noOp","consoleMethods","forEach","methodName","console","hasOwnProperty","loggerFunctions","debug","error","info","log","warn","setLoggerFunction","name","fn","vtkLogMacro","vtkInfoMacro","vtkDebugMacro","vtkErrorMacro","vtkWarningMacro","ERROR_ONCE_MAP","vtkOnceErrorMacro","str","TYPED_ARRAYS","Object","create","Float32Array","Float64Array","Uint8Array","Int8Array","Uint16Array","Int16Array","Uint32Array","Int32Array","Uint8ClampedArray","newTypedArray","type","args","newTypedArrayFrom","from","capitalize","charAt","toUpperCase","slice","_capitalize","uncapitalize","toLowerCase","formatBytesToProperUnit","size","precision","chunkSize","units","value","Number","currentUnit","pop","toFixed","formatNumbersWithThousandSeparator","n","separator","sections","push","Math","floor","reverse","join","safeArrays","model","keys","key","Array","isArray","concat","shallowEquals","a","b","length","i","enumToString","e","find","getStateArrayMapFunc","item","isA","getState","setImmediateVTK","setTimeout","measurePromiseExecution","promise","callback","start","performance","now","finally","delta","obj","publicAPI","callbacks","isInteger","mtime","classHierarchy","off","index","on","unsubscribe","freeze","isDeleted","deleted","modified","otherMTime","getMTime","onModified","className","count","getClassName","depth","set","map","noWarning","noFunction","ret","indexOf","get","list","subset","getReferenceByName","val","delete","field","el","jsonArchive","vtkClass","keyName","undefined","sortedObj","sort","shallowCopy","other","Error","otherModel","keyList","otherKeyList","keyIdx","splice","toJSON","vtkObjToJSON","fieldNames","objectSetterMap","enum","RangeError","TypeError","findSetter","getSetter","setter","fields","setGet","getArray","setArray","defaultVal","array","changeDetected","needCopy","some","otherArray","target","v","setGetArray","moveToProtected","fieldName","algo","numberOfInputs","numberOfOutputs","inputData","inputConnection","output","inputArrayToProcess","setInputData","dataset","port","getInputData","setInputConnection","outputPort","msg","getInputConnection","getPortToFill","portToFill","addInputConnection","addInputData","getOutputData","shouldUpdate","update","localMTime","minOutputMTime","Infinity","mt","filter","getOutputPort","outputPortAccess","ins","requestData","getNumberOfInputPorts","getNumberOfOutputPorts","getInputArrayToProcess","inputPort","arrayDesc","ds","fieldAssociation","arrayName","setInputArrayToProcess","attributeType","EVENT_ABORT","event","eventName","previousDelete","curCallbackID","callbackID","cbID","invoke","currentCallbacks","cb","priority","apply","arguments","continueNext","cb1","cb2","newInstance","extend","constructor","initialValues","register","chain","isVtkObject","instance","traverseInstanceTree","extractFunction","accumulator","visitedInstances","result","modelObj","subObj","debounce","func","wait","immediate","timeout","debounced","context","later","callNow","clearTimeout","cancel","throttle","delay","isThrottled","argsToUse","next","wrapper","keystore","initialKeystore","assign","setKey","getKey","getAllKeys","deleteKey","clearKeystore","nextProxyId","ROOT_GROUP_NAME","proxy","parentDelete","proxyId","ui","JSON","parse","stringify","propertyMap","groupChildrenNames","registerProperties","descriptionList","currentGroupName","childrenNames","children","updateUI","k","listProxyProperties","gName","updateProxyProperty","propertyName","propUI","prop","activate","proxyManager","setActiveMethod","getProxyGroup","propertyLinkSubscribers","registerPropertyLinkForGC","otherLink","gcPropertyLinks","subscribers","unbind","propertyLinkMap","getPropertyLink","id","persistent","links","updateInProgress","source","force","needUpdate","sourceLink","link","newValue","linkToUpdate","indexToDelete","subscription","bind","updateMe","linkHandler","getProperties","groupName","values","propertyNames","method","listPropertyNames","p","getPropertyByName","getPropertyDomainByName","domain","getProxySection","proxyGroup","properties","registerLinks","property","updateOnBind","sLink","proxyPropertyMapping","subscriptions","modelKey","methodSrc","methodDst","proxyPropertyState","state","defaults","this","applyState","modelKeys","mapping","propValues","PIXEL_STEP","LINE_HEIGHT","PAGE_HEIGHT","normalizeWheel","wheelEvent","sX","sY","pX","pY","detail","wheelDelta","wheelDeltaY","wheelDeltaX","axis","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","setImmediate"],"sources":["/Users/nicolerussack/CSCI401/CSCI401TissueSimulation/my-version/node_modules/vtk.js/Sources/macros.js"],"sourcesContent":["/**\n * macros.js is the old macro.js.\n * The name change is so we do not get eaten by babel-plugin-macros.\n */\nimport vtk, { vtkGlobal } from './vtk';\nimport ClassHierarchy from './Common/Core/ClassHierarchy';\n\nlet globalMTime = 0;\n\nexport const VOID = Symbol('void');\n\nfunction getCurrentGlobalMTime() {\n  return globalMTime;\n}\n\n// ----------------------------------------------------------------------------\n// Logging function calls\n// ----------------------------------------------------------------------------\n/* eslint-disable no-prototype-builtins                                      */\n\nconst fakeConsole = {};\n\nfunction noOp() {}\n\nconst consoleMethods = [\n  'log',\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'time',\n  'timeEnd',\n  'group',\n  'groupEnd',\n];\nconsoleMethods.forEach((methodName) => {\n  fakeConsole[methodName] = noOp;\n});\n\nvtkGlobal.console = console.hasOwnProperty('log') ? console : fakeConsole;\n\nconst loggerFunctions = {\n  debug: noOp, // Don't print debug by default\n  error: vtkGlobal.console.error || noOp,\n  info: vtkGlobal.console.info || noOp,\n  log: vtkGlobal.console.log || noOp,\n  warn: vtkGlobal.console.warn || noOp,\n};\n\nexport function setLoggerFunction(name, fn) {\n  if (loggerFunctions[name]) {\n    loggerFunctions[name] = fn || noOp;\n  }\n}\n\nexport function vtkLogMacro(...args) {\n  loggerFunctions.log(...args);\n}\n\nexport function vtkInfoMacro(...args) {\n  loggerFunctions.info(...args);\n}\n\nexport function vtkDebugMacro(...args) {\n  loggerFunctions.debug(...args);\n}\n\nexport function vtkErrorMacro(...args) {\n  loggerFunctions.error(...args);\n}\n\nexport function vtkWarningMacro(...args) {\n  loggerFunctions.warn(...args);\n}\n\nconst ERROR_ONCE_MAP = {};\n\nexport function vtkOnceErrorMacro(str) {\n  if (!ERROR_ONCE_MAP[str]) {\n    loggerFunctions.error(str);\n    ERROR_ONCE_MAP[str] = true;\n  }\n}\n\n// ----------------------------------------------------------------------------\n// TypedArray\n// ----------------------------------------------------------------------------\n\nexport const TYPED_ARRAYS = Object.create(null);\nTYPED_ARRAYS.Float32Array = Float32Array;\nTYPED_ARRAYS.Float64Array = Float64Array;\nTYPED_ARRAYS.Uint8Array = Uint8Array;\nTYPED_ARRAYS.Int8Array = Int8Array;\nTYPED_ARRAYS.Uint16Array = Uint16Array;\nTYPED_ARRAYS.Int16Array = Int16Array;\nTYPED_ARRAYS.Uint32Array = Uint32Array;\nTYPED_ARRAYS.Int32Array = Int32Array;\nTYPED_ARRAYS.Uint8ClampedArray = Uint8ClampedArray;\n// TYPED_ARRAYS.BigInt64Array = BigInt64Array;\n// TYPED_ARRAYS.BigUint64Array = BigUint64Array;\n\nexport function newTypedArray(type, ...args) {\n  return new (TYPED_ARRAYS[type] || Float64Array)(...args);\n}\n\nexport function newTypedArrayFrom(type, ...args) {\n  return (TYPED_ARRAYS[type] || Float64Array).from(...args);\n}\n\n// ----------------------------------------------------------------------------\n// capitilize provided string\n// ----------------------------------------------------------------------------\n\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function _capitalize(str) {\n  return capitalize(str[0] === '_' ? str.slice(1) : str);\n}\n\nexport function uncapitalize(str) {\n  return str.charAt(0).toLowerCase() + str.slice(1);\n}\n\n// ----------------------------------------------------------------------------\n// Convert byte size into a well formatted string\n// ----------------------------------------------------------------------------\n\nexport function formatBytesToProperUnit(size, precision = 2, chunkSize = 1000) {\n  const units = ['TB', 'GB', 'MB', 'KB'];\n  let value = Number(size);\n  let currentUnit = 'B';\n  while (value > chunkSize) {\n    value /= chunkSize;\n    currentUnit = units.pop();\n  }\n  return `${value.toFixed(precision)} ${currentUnit}`;\n}\n\n// ----------------------------------------------------------------------------\n// Convert thousand number with proper separator\n// ----------------------------------------------------------------------------\n\nexport function formatNumbersWithThousandSeparator(n, separator = ' ') {\n  const sections = [];\n  let size = n;\n  while (size > 1000) {\n    sections.push(`000${size % 1000}`.slice(-3));\n    size = Math.floor(size / 1000);\n  }\n  if (size > 0) {\n    sections.push(size);\n  }\n  sections.reverse();\n  return sections.join(separator);\n}\n\n// ----------------------------------------------------------------------------\n// Array helper\n// ----------------------------------------------------------------------------\n\nfunction safeArrays(model) {\n  Object.keys(model).forEach((key) => {\n    if (Array.isArray(model[key])) {\n      model[key] = [].concat(model[key]);\n    }\n  });\n}\n\n// ----------------------------------------------------------------------------\n// shallow equals\n// ----------------------------------------------------------------------------\n\nfunction shallowEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  return false;\n}\n\n// ----------------------------------------------------------------------------\n\nfunction enumToString(e, value) {\n  return Object.keys(e).find((key) => e[key] === value);\n}\n\nfunction getStateArrayMapFunc(item) {\n  if (item && item.isA) {\n    return item.getState();\n  }\n  return item;\n}\n\n// ----------------------------------------------------------------------------\n// setImmediate\n// ----------------------------------------------------------------------------\n\nexport function setImmediateVTK(fn) {\n  setTimeout(fn, 0);\n}\n\n// ----------------------------------------------------------------------------\n// measurePromiseExecution\n//\n// Measures the time it takes for a promise to finish from\n//   the time this function is invoked.\n// The callback receives the time it took for the promise to resolve or reject.\n// ----------------------------------------------------------------------------\n\nexport function measurePromiseExecution(promise, callback) {\n  const start = performance.now();\n  promise.finally(() => {\n    const delta = performance.now() - start;\n    callback(delta);\n  });\n}\n\n// ----------------------------------------------------------------------------\n// vtkObject: modified(), onModified(callback), delete()\n// ----------------------------------------------------------------------------\n\nexport function obj(publicAPI = {}, model = {}) {\n  // Ensure each instance as a unique ref of array\n  safeArrays(model);\n\n  const callbacks = [];\n  if (!Number.isInteger(model.mtime)) {\n    model.mtime = ++globalMTime;\n  }\n\n  if (!('classHierarchy' in model)) {\n    model.classHierarchy = new ClassHierarchy('vtkObject');\n  } else if (!(model.classHierarchy instanceof ClassHierarchy)) {\n    model.classHierarchy = ClassHierarchy.from(model.classHierarchy);\n  }\n\n  function off(index) {\n    callbacks[index] = null;\n  }\n\n  function on(index) {\n    function unsubscribe() {\n      off(index);\n    }\n\n    return Object.freeze({\n      unsubscribe,\n    });\n  }\n\n  publicAPI.isDeleted = () => !!model.deleted;\n\n  publicAPI.modified = (otherMTime) => {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n\n    if (otherMTime && otherMTime < publicAPI.getMTime()) {\n      return;\n    }\n\n    model.mtime = ++globalMTime;\n    callbacks.forEach((callback) => callback && callback(publicAPI));\n  };\n\n  publicAPI.onModified = (callback) => {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n\n    const index = callbacks.length;\n    callbacks.push(callback);\n    return on(index);\n  };\n\n  publicAPI.getMTime = () => model.mtime;\n\n  publicAPI.isA = (className) => {\n    let count = model.classHierarchy.length;\n    // we go backwards as that is more likely for\n    // early termination\n    while (count--) {\n      if (model.classHierarchy[count] === className) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  publicAPI.getClassName = (depth = 0) =>\n    model.classHierarchy[model.classHierarchy.length - 1 - depth];\n\n  publicAPI.set = (map = {}, noWarning = false, noFunction = false) => {\n    let ret = false;\n    Object.keys(map).forEach((name) => {\n      const fn = noFunction ? null : publicAPI[`set${capitalize(name)}`];\n      if (fn && Array.isArray(map[name]) && fn.length > 1) {\n        ret = fn(...map[name]) || ret;\n      } else if (fn) {\n        ret = fn(map[name]) || ret;\n      } else {\n        // Set data on model directly\n        if (['mtime'].indexOf(name) === -1 && !noWarning) {\n          vtkWarningMacro(\n            `Warning: Set value to model directly ${name}, ${map[name]}`\n          );\n        }\n        ret = model[name] !== map[name] || ret;\n        model[name] = map[name];\n      }\n    });\n    return ret;\n  };\n\n  publicAPI.get = (...list) => {\n    if (!list.length) {\n      return model;\n    }\n    const subset = {};\n    list.forEach((name) => {\n      subset[name] = model[name];\n    });\n    return subset;\n  };\n\n  publicAPI.getReferenceByName = (val) => model[val];\n\n  publicAPI.delete = () => {\n    Object.keys(model).forEach((field) => delete model[field]);\n    callbacks.forEach((el, index) => off(index));\n\n    // Flag the instance being deleted\n    model.deleted = true;\n  };\n\n  // Add serialization support\n  publicAPI.getState = () => {\n    if (model.deleted) {\n      return null;\n    }\n    const jsonArchive = { ...model, vtkClass: publicAPI.getClassName() };\n\n    // Convert every vtkObject to its serializable form\n    Object.keys(jsonArchive).forEach((keyName) => {\n      if (\n        jsonArchive[keyName] === null ||\n        jsonArchive[keyName] === undefined ||\n        keyName[0] === '_' // protected members start with _\n      ) {\n        delete jsonArchive[keyName];\n      } else if (jsonArchive[keyName].isA) {\n        jsonArchive[keyName] = jsonArchive[keyName].getState();\n      } else if (Array.isArray(jsonArchive[keyName])) {\n        jsonArchive[keyName] = jsonArchive[keyName].map(getStateArrayMapFunc);\n      }\n    });\n\n    // Sort resulting object by key name\n    const sortedObj = {};\n    Object.keys(jsonArchive)\n      .sort()\n      .forEach((name) => {\n        sortedObj[name] = jsonArchive[name];\n      });\n\n    // Remove mtime\n    if (sortedObj.mtime) {\n      delete sortedObj.mtime;\n    }\n\n    return sortedObj;\n  };\n\n  // Add shallowCopy(otherInstance) support\n  publicAPI.shallowCopy = (other, debug = false) => {\n    if (other.getClassName() !== publicAPI.getClassName()) {\n      throw new Error(\n        `Cannot ShallowCopy ${other.getClassName()} into ${publicAPI.getClassName()}`\n      );\n    }\n    const otherModel = other.get();\n\n    const keyList = Object.keys(model).sort();\n    const otherKeyList = Object.keys(otherModel).sort();\n\n    otherKeyList.forEach((key) => {\n      const keyIdx = keyList.indexOf(key);\n      if (keyIdx === -1) {\n        if (debug) {\n          vtkDebugMacro(`add ${key} in shallowCopy`);\n        }\n      } else {\n        keyList.splice(keyIdx, 1);\n      }\n      model[key] = otherModel[key];\n    });\n    if (keyList.length && debug) {\n      vtkDebugMacro(`Untouched keys: ${keyList.join(', ')}`);\n    }\n\n    publicAPI.modified();\n  };\n\n  // This function will get called when one invoke JSON.stringify(vtkObject)\n  // JSON.stringify will only stringify the return value of this function\n  publicAPI.toJSON = function vtkObjToJSON() {\n    return publicAPI.getState();\n  };\n\n  // Allow usage as decorator\n  return publicAPI;\n}\n\n// ----------------------------------------------------------------------------\n// getXXX: add getters\n// ----------------------------------------------------------------------------\n\nexport function get(publicAPI, model, fieldNames) {\n  fieldNames.forEach((field) => {\n    if (typeof field === 'object') {\n      publicAPI[`get${_capitalize(field.name)}`] = () => model[field.name];\n    } else {\n      publicAPI[`get${_capitalize(field)}`] = () => model[field];\n    }\n  });\n}\n\n// ----------------------------------------------------------------------------\n// setXXX: add setters\n// ----------------------------------------------------------------------------\n\nconst objectSetterMap = {\n  enum(publicAPI, model, field) {\n    return (value) => {\n      if (typeof value === 'string') {\n        if (field.enum[value] !== undefined) {\n          if (model[field.name] !== field.enum[value]) {\n            model[field.name] = field.enum[value];\n            publicAPI.modified();\n            return true;\n          }\n          return false;\n        }\n        vtkErrorMacro(`Set Enum with invalid argument ${field}, ${value}`);\n        throw new RangeError('Set Enum with invalid string argument');\n      }\n      if (typeof value === 'number') {\n        if (model[field.name] !== value) {\n          if (\n            Object.keys(field.enum)\n              .map((key) => field.enum[key])\n              .indexOf(value) !== -1\n          ) {\n            model[field.name] = value;\n            publicAPI.modified();\n            return true;\n          }\n          vtkErrorMacro(`Set Enum outside numeric range ${field}, ${value}`);\n          throw new RangeError('Set Enum outside numeric range');\n        }\n        return false;\n      }\n      vtkErrorMacro(\n        `Set Enum with invalid argument (String/Number) ${field}, ${value}`\n      );\n      throw new TypeError('Set Enum with invalid argument (String/Number)');\n    };\n  },\n};\n\nfunction findSetter(field) {\n  if (typeof field === 'object') {\n    const fn = objectSetterMap[field.type];\n    if (fn) {\n      return (publicAPI, model) => fn(publicAPI, model, field);\n    }\n\n    vtkErrorMacro(`No setter for field ${field}`);\n    throw new TypeError('No setter for field');\n  }\n  return function getSetter(publicAPI, model) {\n    return function setter(value) {\n      if (model.deleted) {\n        vtkErrorMacro('instance deleted - cannot call any method');\n        return false;\n      }\n\n      if (model[field] !== value) {\n        model[field] = value;\n        publicAPI.modified();\n        return true;\n      }\n      return false;\n    };\n  };\n}\n\nexport function set(publicAPI, model, fields) {\n  fields.forEach((field) => {\n    if (typeof field === 'object') {\n      publicAPI[`set${_capitalize(field.name)}`] = findSetter(field)(\n        publicAPI,\n        model\n      );\n    } else {\n      publicAPI[`set${_capitalize(field)}`] = findSetter(field)(\n        publicAPI,\n        model\n      );\n    }\n  });\n}\n\n// ----------------------------------------------------------------------------\n// set/get XXX: add both setters and getters\n// ----------------------------------------------------------------------------\n\nexport function setGet(publicAPI, model, fieldNames) {\n  get(publicAPI, model, fieldNames);\n  set(publicAPI, model, fieldNames);\n}\n\n// ----------------------------------------------------------------------------\n// getXXX: add getters for object of type array with copy to be safe\n// getXXXByReference: add getters for object of type array without copy\n// ----------------------------------------------------------------------------\n\nexport function getArray(publicAPI, model, fieldNames) {\n  fieldNames.forEach((field) => {\n    publicAPI[`get${_capitalize(field)}`] = () =>\n      model[field] ? [].concat(model[field]) : model[field];\n    publicAPI[`get${_capitalize(field)}ByReference`] = () => model[field];\n  });\n}\n\n// ----------------------------------------------------------------------------\n// setXXX: add setter for object of type array\n// if 'defaultVal' is supplied, shorter arrays will be padded to 'size' with 'defaultVal'\n// set...From: fast path to copy the content of an array to the current one without call to modified.\n// ----------------------------------------------------------------------------\n\nexport function setArray(\n  publicAPI,\n  model,\n  fieldNames,\n  size,\n  defaultVal = undefined\n) {\n  fieldNames.forEach((field) => {\n    if (model[field] && size && model[field].length !== size) {\n      throw new RangeError(\n        `Invalid initial number of values for array (${field})`\n      );\n    }\n\n    publicAPI[`set${_capitalize(field)}`] = (...args) => {\n      if (model.deleted) {\n        vtkErrorMacro('instance deleted - cannot call any method');\n        return false;\n      }\n\n      let array = args;\n      let changeDetected;\n      let needCopy = false;\n      // allow null or an array to be passed as a single arg.\n      if (array.length === 1 && (array[0] == null || array[0].length >= 0)) {\n        /* eslint-disable prefer-destructuring */\n        array = array[0];\n        /* eslint-enable prefer-destructuring */\n        needCopy = true;\n      }\n      if (array == null) {\n        changeDetected = model[field] !== array;\n      } else {\n        if (size && array.length !== size) {\n          if (array.length < size && defaultVal !== undefined) {\n            array = Array.from(array);\n            needCopy = false;\n            while (array.length < size) array.push(defaultVal);\n          } else {\n            throw new RangeError(\n              `Invalid number of values for array setter (${field})`\n            );\n          }\n        }\n        changeDetected =\n          model[field] == null ||\n          model[field].some((item, index) => item !== array[index]) ||\n          model[field].length !== array.length;\n        if (changeDetected && needCopy) {\n          array = Array.from(array);\n        }\n      }\n\n      if (changeDetected) {\n        model[field] = array;\n        publicAPI.modified();\n      }\n      return changeDetected;\n    };\n\n    publicAPI[`set${_capitalize(field)}From`] = (otherArray) => {\n      const target = model[field];\n      otherArray.forEach((v, i) => {\n        target[i] = v;\n      });\n    };\n  });\n}\n\n// ----------------------------------------------------------------------------\n// set/get XXX: add setter and getter for object of type array\n// ----------------------------------------------------------------------------\n\nexport function setGetArray(\n  publicAPI,\n  model,\n  fieldNames,\n  size,\n  defaultVal = undefined\n) {\n  getArray(publicAPI, model, fieldNames);\n  setArray(publicAPI, model, fieldNames, size, defaultVal);\n}\n\nexport function moveToProtected(publicAPI, model, fieldNames) {\n  for (let i = 0; i < fieldNames.length; i++) {\n    const fieldName = fieldNames[i];\n    if (model[fieldName] !== undefined) {\n      model[`_${fieldName}`] = model[fieldName];\n      delete model[fieldName];\n    }\n  }\n}\n// ----------------------------------------------------------------------------\n// vtkAlgorithm: setInputData(), setInputConnection(), getOutputData(), getOutputPort()\n// ----------------------------------------------------------------------------\n\nexport function algo(publicAPI, model, numberOfInputs, numberOfOutputs) {\n  if (model.inputData) {\n    model.inputData = model.inputData.map(vtk);\n  } else {\n    model.inputData = [];\n  }\n\n  if (model.inputConnection) {\n    model.inputConnection = model.inputConnection.map(vtk);\n  } else {\n    model.inputConnection = [];\n  }\n\n  if (model.output) {\n    model.output = model.output.map(vtk);\n  } else {\n    model.output = [];\n  }\n\n  if (model.inputArrayToProcess) {\n    model.inputArrayToProcess = model.inputArrayToProcess.map(vtk);\n  } else {\n    model.inputArrayToProcess = [];\n  }\n\n  // Cache the argument for later manipulation\n  model.numberOfInputs = numberOfInputs;\n\n  // Methods\n  function setInputData(dataset, port = 0) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    if (port >= model.numberOfInputs) {\n      vtkErrorMacro(\n        `algorithm ${publicAPI.getClassName()} only has ${\n          model.numberOfInputs\n        } input ports. To add more input ports, use addInputData()`\n      );\n      return;\n    }\n    if (model.inputData[port] !== dataset || model.inputConnection[port]) {\n      model.inputData[port] = dataset;\n      model.inputConnection[port] = null;\n      if (publicAPI.modified) {\n        publicAPI.modified();\n      }\n    }\n  }\n\n  function getInputData(port = 0) {\n    if (model.inputConnection[port]) {\n      model.inputData[port] = model.inputConnection[port]();\n    }\n    return model.inputData[port];\n  }\n\n  function setInputConnection(outputPort, port = 0) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    if (port >= model.numberOfInputs) {\n      let msg = `algorithm ${publicAPI.getClassName()} only has `;\n      msg += `${model.numberOfInputs}`;\n      msg += ' input ports. To add more input ports, use addInputConnection()';\n      vtkErrorMacro(msg);\n      return;\n    }\n    model.inputData[port] = null;\n    model.inputConnection[port] = outputPort;\n  }\n\n  function getInputConnection(port = 0) {\n    return model.inputConnection[port];\n  }\n\n  function getPortToFill() {\n    let portToFill = model.numberOfInputs;\n    while (\n      portToFill &&\n      !model.inputData[portToFill - 1] &&\n      !model.inputConnection[portToFill - 1]\n    ) {\n      portToFill--;\n    }\n    if (portToFill === model.numberOfInputs) {\n      model.numberOfInputs++;\n    }\n    return portToFill;\n  }\n\n  function addInputConnection(outputPort) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    setInputConnection(outputPort, getPortToFill());\n  }\n\n  function addInputData(dataset) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    setInputData(dataset, getPortToFill());\n  }\n\n  function getOutputData(port = 0) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n    if (publicAPI.shouldUpdate()) {\n      publicAPI.update();\n    }\n    return model.output[port];\n  }\n\n  publicAPI.shouldUpdate = () => {\n    const localMTime = publicAPI.getMTime();\n    let minOutputMTime = Infinity;\n\n    let count = numberOfOutputs;\n    while (count--) {\n      if (!model.output[count] || model.output[count].isDeleted()) {\n        return true;\n      }\n      const mt = model.output[count].getMTime();\n      if (mt < localMTime) {\n        return true;\n      }\n      if (mt < minOutputMTime) {\n        minOutputMTime = mt;\n      }\n    }\n\n    count = model.numberOfInputs;\n    while (count--) {\n      if (\n        model.inputConnection[count]?.filter.shouldUpdate() ||\n        publicAPI.getInputData(count)?.getMTime() > minOutputMTime\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  function getOutputPort(port = 0) {\n    const outputPortAccess = () => getOutputData(port);\n    // Add reference to filter\n    outputPortAccess.filter = publicAPI;\n    return outputPortAccess;\n  }\n\n  // Handle input if needed\n  if (model.numberOfInputs) {\n    // Reserve inputs\n    let count = model.numberOfInputs;\n    while (count--) {\n      model.inputData.push(null);\n      model.inputConnection.push(null);\n    }\n\n    // Expose public methods\n    publicAPI.setInputData = setInputData;\n    publicAPI.setInputConnection = setInputConnection;\n    publicAPI.addInputData = addInputData;\n    publicAPI.addInputConnection = addInputConnection;\n    publicAPI.getInputData = getInputData;\n    publicAPI.getInputConnection = getInputConnection;\n  }\n\n  if (numberOfOutputs) {\n    publicAPI.getOutputData = getOutputData;\n    publicAPI.getOutputPort = getOutputPort;\n  }\n\n  publicAPI.update = () => {\n    const ins = [];\n    if (model.numberOfInputs) {\n      let count = 0;\n      while (count < model.numberOfInputs) {\n        ins[count] = publicAPI.getInputData(count);\n        count++;\n      }\n    }\n    if (publicAPI.shouldUpdate() && publicAPI.requestData) {\n      publicAPI.requestData(ins, model.output);\n    }\n  };\n\n  publicAPI.getNumberOfInputPorts = () => model.numberOfInputs;\n  publicAPI.getNumberOfOutputPorts = () =>\n    numberOfOutputs || model.output.length;\n\n  publicAPI.getInputArrayToProcess = (inputPort) => {\n    const arrayDesc = model.inputArrayToProcess[inputPort];\n    const ds = model.inputData[inputPort];\n    if (arrayDesc && ds) {\n      return ds[`get${arrayDesc.fieldAssociation}`]().getArray(\n        arrayDesc.arrayName\n      );\n    }\n    return null;\n  };\n  publicAPI.setInputArrayToProcess = (\n    inputPort,\n    arrayName,\n    fieldAssociation,\n    attributeType = 'Scalars'\n  ) => {\n    while (model.inputArrayToProcess.length < inputPort) {\n      model.inputArrayToProcess.push(null);\n    }\n    model.inputArrayToProcess[inputPort] = {\n      arrayName,\n      fieldAssociation,\n      attributeType,\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Event handling: onXXX(callback), invokeXXX(args...)\n// ----------------------------------------------------------------------------\n\nexport const EVENT_ABORT = Symbol('Event abort');\n\nexport function event(publicAPI, model, eventName) {\n  const callbacks = [];\n  const previousDelete = publicAPI.delete;\n  let curCallbackID = 1;\n\n  function off(callbackID) {\n    for (let i = 0; i < callbacks.length; ++i) {\n      const [cbID] = callbacks[i];\n      if (cbID === callbackID) {\n        callbacks.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  function on(callbackID) {\n    function unsubscribe() {\n      off(callbackID);\n    }\n\n    return Object.freeze({\n      unsubscribe,\n    });\n  }\n\n  function invoke() {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    /* eslint-disable prefer-rest-params */\n    // Go through a copy of the callbacks array in case new callbacks\n    // get prepended within previous callbacks\n    const currentCallbacks = callbacks.slice();\n    for (let index = 0; index < currentCallbacks.length; ++index) {\n      const [, cb, priority] = currentCallbacks[index];\n\n      if (!cb) {\n        continue; // eslint-disable-line\n      }\n\n      if (priority < 0) {\n        setTimeout(() => cb.apply(publicAPI, arguments), 1 - priority);\n      } else {\n        // Abort only if the callback explicitly returns false\n        const continueNext = cb.apply(publicAPI, arguments);\n        if (continueNext === EVENT_ABORT) {\n          break;\n        }\n      }\n    }\n    /* eslint-enable prefer-rest-params */\n  }\n\n  publicAPI[`invoke${_capitalize(eventName)}`] = invoke;\n\n  publicAPI[`on${_capitalize(eventName)}`] = (callback, priority = 0.0) => {\n    if (!callback.apply) {\n      console.error(`Invalid callback for event ${eventName}`);\n      return null;\n    }\n\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n\n    const callbackID = curCallbackID++;\n    callbacks.push([callbackID, callback, priority]);\n    callbacks.sort((cb1, cb2) => cb2[2] - cb1[2]);\n    return on(callbackID);\n  };\n\n  publicAPI.delete = () => {\n    previousDelete();\n    callbacks.forEach(([cbID]) => off(cbID));\n  };\n}\n\n// ----------------------------------------------------------------------------\n// newInstance\n// ----------------------------------------------------------------------------\n\nexport function newInstance(extend, className) {\n  const constructor = (initialValues = {}) => {\n    const model = {};\n    const publicAPI = {};\n    extend(publicAPI, model, initialValues);\n\n    return Object.freeze(publicAPI);\n  };\n\n  // Register constructor to factory\n  if (className) {\n    vtk.register(className, constructor);\n  }\n\n  return constructor;\n}\n\n// ----------------------------------------------------------------------------\n// Chain function calls\n// ----------------------------------------------------------------------------\n\nexport function chain(...fn) {\n  return (...args) => fn.filter((i) => !!i).map((i) => i(...args));\n}\n\n// ----------------------------------------------------------------------------\n// Some utility methods for vtk objects\n// ----------------------------------------------------------------------------\n\nexport function isVtkObject(instance) {\n  return instance && instance.isA && instance.isA('vtkObject');\n}\n\nexport function traverseInstanceTree(\n  instance,\n  extractFunction,\n  accumulator = [],\n  visitedInstances = []\n) {\n  if (isVtkObject(instance)) {\n    if (visitedInstances.indexOf(instance) >= 0) {\n      // avoid cycles\n      return accumulator;\n    }\n\n    visitedInstances.push(instance);\n    const result = extractFunction(instance);\n    if (result !== undefined) {\n      accumulator.push(result);\n    }\n\n    // Now go through this instance's model\n    const model = instance.get();\n    Object.keys(model).forEach((key) => {\n      const modelObj = model[key];\n      if (Array.isArray(modelObj)) {\n        modelObj.forEach((subObj) => {\n          traverseInstanceTree(\n            subObj,\n            extractFunction,\n            accumulator,\n            visitedInstances\n          );\n        });\n      } else {\n        traverseInstanceTree(\n          modelObj,\n          extractFunction,\n          accumulator,\n          visitedInstances\n        );\n      }\n    });\n  }\n\n  return accumulator;\n}\n\n// ----------------------------------------------------------------------------\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\n\nexport function debounce(func, wait, immediate) {\n  let timeout;\n  const debounced = (...args) => {\n    const context = this;\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n\n  debounced.cancel = () => clearTimeout(timeout);\n\n  return debounced;\n}\n\n// ----------------------------------------------------------------------------\n// Creates a throttled function that only invokes `func` at most once per\n// every `wait` milliseconds.\n\nexport function throttle(callback, delay) {\n  let isThrottled = false;\n  let argsToUse = null;\n\n  function next() {\n    isThrottled = false;\n    if (argsToUse !== null) {\n      wrapper(...argsToUse); // eslint-disable-line\n      argsToUse = null;\n    }\n  }\n\n  function wrapper(...args) {\n    if (isThrottled) {\n      argsToUse = args;\n      return;\n    }\n    isThrottled = true;\n    callback(...args);\n    setTimeout(next, delay);\n  }\n\n  return wrapper;\n}\n\n// ----------------------------------------------------------------------------\n// keystore(publicAPI, model, initialKeystore)\n//\n//    - initialKeystore: Initial keystore. This can be either a Map or an\n//      object.\n//\n// Generated API\n//  setKey(key, value) : mixed (returns value)\n//  getKey(key) : mixed\n//  getAllKeys() : [mixed]\n//  deleteKey(key) : Boolean\n// ----------------------------------------------------------------------------\n\nexport function keystore(publicAPI, model, initialKeystore = {}) {\n  model.keystore = Object.assign(model.keystore || {}, initialKeystore);\n\n  publicAPI.setKey = (key, value) => {\n    model.keystore[key] = value;\n  };\n  publicAPI.getKey = (key) => model.keystore[key];\n  publicAPI.getAllKeys = () => Object.keys(model.keystore);\n  publicAPI.deleteKey = (key) => delete model.keystore[key];\n  publicAPI.clearKeystore = () =>\n    publicAPI.getAllKeys().forEach((key) => delete model.keystore[key]);\n}\n\n// ----------------------------------------------------------------------------\n// proxy(publicAPI, model, sectionName, propertyUI)\n//\n//    - sectionName: Name of the section for UI\n//    - propertyUI: List of props with their UI description\n//\n// Generated API\n//  getProxyId() : String\n//  listProxyProperties() : [string]\n//  updateProxyProperty(name, prop)\n//  getProxySection() => List of properties for UI generation\n// ----------------------------------------------------------------------------\nlet nextProxyId = 1;\nconst ROOT_GROUP_NAME = '__root__';\n\nexport function proxy(publicAPI, model) {\n  // Proxies are keystores\n  keystore(publicAPI, model);\n\n  const parentDelete = publicAPI.delete;\n\n  // getProxyId\n  model.proxyId = `${nextProxyId++}`;\n\n  // ui handling\n  model.ui = JSON.parse(JSON.stringify(model.ui || [])); // deep copy\n  get(publicAPI, model, ['proxyId', 'proxyGroup', 'proxyName']);\n  setGet(publicAPI, model, ['proxyManager']);\n\n  // group properties\n  const propertyMap = {};\n  const groupChildrenNames = {};\n\n  function registerProperties(descriptionList, currentGroupName) {\n    if (!groupChildrenNames[currentGroupName]) {\n      groupChildrenNames[currentGroupName] = [];\n    }\n    const childrenNames = groupChildrenNames[currentGroupName];\n\n    for (let i = 0; i < descriptionList.length; i++) {\n      childrenNames.push(descriptionList[i].name);\n      propertyMap[descriptionList[i].name] = descriptionList[i];\n      if (descriptionList[i].children && descriptionList[i].children.length) {\n        registerProperties(\n          descriptionList[i].children,\n          descriptionList[i].name\n        );\n      }\n    }\n  }\n\n  registerProperties(model.ui, ROOT_GROUP_NAME);\n\n  publicAPI.updateUI = (ui) => {\n    model.ui = JSON.parse(JSON.stringify(ui || [])); // deep copy\n    Object.keys(propertyMap).forEach((k) => delete propertyMap[k]);\n    Object.keys(groupChildrenNames).forEach(\n      (k) => delete groupChildrenNames[k]\n    );\n    registerProperties(model.ui, ROOT_GROUP_NAME);\n    publicAPI.modified();\n  };\n\n  function listProxyProperties(gName = ROOT_GROUP_NAME) {\n    return groupChildrenNames[gName];\n  }\n\n  publicAPI.updateProxyProperty = (propertyName, propUI) => {\n    const prop = propertyMap[propertyName];\n    if (prop) {\n      Object.assign(prop, propUI);\n    } else {\n      propertyMap[propertyName] = { ...propUI };\n    }\n  };\n\n  publicAPI.activate = () => {\n    if (model.proxyManager) {\n      const setActiveMethod = `setActive${_capitalize(\n        publicAPI.getProxyGroup().slice(0, -1)\n      )}`;\n      if (model.proxyManager[setActiveMethod]) {\n        model.proxyManager[setActiveMethod](publicAPI);\n      }\n    }\n  };\n\n  // property link\n  model.propertyLinkSubscribers = {};\n  publicAPI.registerPropertyLinkForGC = (otherLink, type) => {\n    if (!(type in model.propertyLinkSubscribers)) {\n      model.propertyLinkSubscribers[type] = [];\n    }\n    model.propertyLinkSubscribers[type].push(otherLink);\n  };\n\n  publicAPI.gcPropertyLinks = (type) => {\n    const subscribers = model.propertyLinkSubscribers[type] || [];\n    while (subscribers.length) {\n      subscribers.pop().unbind(publicAPI);\n    }\n  };\n\n  model.propertyLinkMap = {};\n  publicAPI.getPropertyLink = (id, persistent = false) => {\n    if (model.propertyLinkMap[id]) {\n      return model.propertyLinkMap[id];\n    }\n    let value = null;\n    const links = [];\n    let count = 0;\n    let updateInProgress = false;\n\n    function update(source, force = false) {\n      if (updateInProgress) {\n        return null;\n      }\n\n      const needUpdate = [];\n      let sourceLink = null;\n      count = links.length;\n      while (count--) {\n        const link = links[count];\n        if (link.instance === source) {\n          sourceLink = link;\n        } else {\n          needUpdate.push(link);\n        }\n      }\n\n      if (!sourceLink) {\n        return null;\n      }\n\n      const newValue =\n        sourceLink.instance[`get${_capitalize(sourceLink.propertyName)}`]();\n      if (!shallowEquals(newValue, value) || force) {\n        value = newValue;\n        updateInProgress = true;\n        while (needUpdate.length) {\n          const linkToUpdate = needUpdate.pop();\n          linkToUpdate.instance.set({\n            [linkToUpdate.propertyName]: value,\n          });\n        }\n        updateInProgress = false;\n      }\n\n      if (model.propertyLinkMap[id].persistent) {\n        model.propertyLinkMap[id].value = newValue;\n      }\n\n      return newValue;\n    }\n\n    function unbind(instance, propertyName) {\n      const indexToDelete = [];\n      count = links.length;\n      while (count--) {\n        const link = links[count];\n        if (\n          link.instance === instance &&\n          (link.propertyName === propertyName || propertyName === undefined)\n        ) {\n          link.subscription.unsubscribe();\n          indexToDelete.push(count);\n        }\n      }\n      while (indexToDelete.length) {\n        links.splice(indexToDelete.pop(), 1);\n      }\n    }\n\n    function bind(instance, propertyName, updateMe = false) {\n      const subscription = instance.onModified(update);\n      const other = links[0];\n      links.push({\n        instance,\n        propertyName,\n        subscription,\n      });\n      if (updateMe) {\n        if (\n          model.propertyLinkMap[id].persistent &&\n          model.propertyLinkMap[id].value !== undefined\n        ) {\n          instance.set({\n            [propertyName]: model.propertyLinkMap[id].value,\n          });\n        } else if (other) {\n          update(other.instance, true);\n        }\n      }\n      return {\n        unsubscribe: () => unbind(instance, propertyName),\n      };\n    }\n\n    function unsubscribe() {\n      while (links.length) {\n        links.pop().subscription.unsubscribe();\n      }\n    }\n\n    const linkHandler = {\n      bind,\n      unbind,\n      unsubscribe,\n      persistent,\n    };\n    model.propertyLinkMap[id] = linkHandler;\n    return linkHandler;\n  };\n\n  // extract values\n  function getProperties(groupName = ROOT_GROUP_NAME) {\n    const values = [];\n    const id = model.proxyId;\n    const propertyNames = listProxyProperties(groupName) || [];\n    for (let i = 0; i < propertyNames.length; i++) {\n      const name = propertyNames[i];\n      const method = publicAPI[`get${_capitalize(name)}`];\n      const value = method ? method() : undefined;\n      const prop = {\n        id,\n        name,\n        value,\n      };\n      const children = getProperties(name);\n      if (children.length) {\n        prop.children = children;\n      }\n      values.push(prop);\n    }\n    return values;\n  }\n\n  publicAPI.listPropertyNames = () => getProperties().map((p) => p.name);\n\n  publicAPI.getPropertyByName = (name) =>\n    getProperties().find((p) => p.name === name);\n\n  publicAPI.getPropertyDomainByName = (name) =>\n    (propertyMap[name] || {}).domain;\n\n  // ui section\n  publicAPI.getProxySection = () => ({\n    id: model.proxyId,\n    name: model.proxyGroup,\n    ui: model.ui,\n    properties: getProperties(),\n  });\n\n  // free resources\n  publicAPI.delete = () => {\n    const list = Object.keys(model.propertyLinkMap);\n    let count = list.length;\n    while (count--) {\n      model.propertyLinkMap[list[count]].unsubscribe();\n    }\n    Object.keys(model.propertyLinkSubscribers).forEach(\n      publicAPI.gcPropertyLinks\n    );\n    parentDelete();\n  };\n\n  // @todo fix infinite recursion due to active source\n  publicAPI.getState = () => null;\n\n  function registerLinks() {\n    // Allow dynamic registration of links at the application level\n    if (model.links) {\n      for (let i = 0; i < model.links.length; i++) {\n        const { link, property, persistent, updateOnBind, type } =\n          model.links[i];\n        if (type === 'application') {\n          const sLink = model.proxyManager.getPropertyLink(link, persistent);\n          publicAPI.registerPropertyLinkForGC(sLink, 'application');\n          sLink.bind(publicAPI, property, updateOnBind);\n        }\n      }\n    }\n  }\n\n  setImmediateVTK(registerLinks);\n}\n\n// ----------------------------------------------------------------------------\n// proxyPropertyMapping(publicAPI, model, map)\n//\n//   map = {\n//      opacity: { modelKey: 'property', property: 'opacity' },\n//   }\n//\n// Generated API:\n//  Elevate set/get methods from internal object stored in the model to current one\n// ----------------------------------------------------------------------------\n\nexport function proxyPropertyMapping(publicAPI, model, map) {\n  const parentDelete = publicAPI.delete;\n  const subscriptions = [];\n\n  const propertyNames = Object.keys(map);\n  let count = propertyNames.length;\n  while (count--) {\n    const propertyName = propertyNames[count];\n    const { modelKey, property, modified = true } = map[propertyName];\n    const methodSrc = _capitalize(property);\n    const methodDst = _capitalize(propertyName);\n    publicAPI[`get${methodDst}`] = model[modelKey][`get${methodSrc}`];\n    publicAPI[`set${methodDst}`] = model[modelKey][`set${methodSrc}`];\n    if (modified) {\n      subscriptions.push(model[modelKey].onModified(publicAPI.modified));\n    }\n  }\n\n  publicAPI.delete = () => {\n    while (subscriptions.length) {\n      subscriptions.pop().unsubscribe();\n    }\n    parentDelete();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// proxyPropertyState(publicAPI, model, state, defaults)\n//\n//   state = {\n//     representation: {\n//       'Surface with edges': { property: { edgeVisibility: true, representation: 2 } },\n//       Surface: { property: { edgeVisibility: false, representation: 2 } },\n//       Wireframe: { property: { edgeVisibility: false, representation: 1 } },\n//       Points: { property: { edgeVisibility: false, representation: 0 } },\n//     },\n//   }\n//\n//   defaults = {\n//      representation: 'Surface',\n//   }\n//\n// Generated API\n//   get / set Representation ( string ) => push state to various internal objects\n// ----------------------------------------------------------------------------\n\nexport function proxyPropertyState(\n  publicAPI,\n  model,\n  state = {},\n  defaults = {}\n) {\n  model.this = publicAPI;\n\n  function applyState(map) {\n    const modelKeys = Object.keys(map);\n    let count = modelKeys.length;\n    while (count--) {\n      const modelKey = modelKeys[count];\n      model[modelKey].set(map[modelKey]);\n    }\n  }\n\n  const modelKeys = Object.keys(defaults);\n  let count = modelKeys.length;\n  while (count--) {\n    // Add default\n    const key = modelKeys[count];\n    model[key] = defaults[key];\n\n    // Add set method\n    const mapping = state[key];\n    publicAPI[`set${_capitalize(key)}`] = (value) => {\n      if (value !== model[key]) {\n        model[key] = value;\n        const propValues = mapping[value];\n        applyState(propValues);\n        publicAPI.modified();\n      }\n    };\n  }\n\n  // Add getter\n  if (modelKeys.length) {\n    get(publicAPI, model, modelKeys);\n  }\n}\n\n// ----------------------------------------------------------------------------\n// From : https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\n//\n//\n// Copyright (c) 2015, Facebook, Inc.\n// All rights reserved.\n//\n// This source code is licensed under the BSD-style license found in the\n// LICENSE file in the root directory of this source tree. An additional grant\n// of patent rights can be found in the PATENTS file in the same directory.\n//\n//\n// Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is\n// complicated, thus this doc is long and (hopefully) detailed enough to answer\n// your questions.\n//\n// If you need to react to the mouse wheel in a predictable way, this code is\n// like your bestest friend.// hugs//\n//\n// As of today, there are 4 DOM event types you can listen to:\n//\n//   'wheel'                -- Chrome(31+), FF(17+), IE(9+)\n//   'mousewheel'           -- Chrome, IE(6+), Opera, Safari\n//   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!\n//   'DOMMouseScroll'       -- FF(0.9.7+) since 2003\n//\n// So what to do?  The is the best:\n//\n//   normalizeWheel.getEventType();\n//\n// In your event callback, use this code to get sane interpretation of the\n// deltas.  This code will return an object with properties:\n//\n//   spinX   -- normalized spin speed (use for zoom) - x plane\n//   spinY   -- \" - y plane\n//   pixelX  -- normalized distance (to pixels) - x plane\n//   pixelY  -- \" - y plane\n//\n// Wheel values are provided by the browser assuming you are using the wheel to\n// scroll a web page by a number of lines or pixels (or pages).  Values can vary\n// significantly on different platforms and browsers, forgetting that you can\n// scroll at different speeds.  Some devices (like trackpads) emit more events\n// at smaller increments with fine granularity, and some emit massive jumps with\n// linear speed or acceleration.\n//\n// This code does its best to normalize the deltas for you:\n//\n//   - spin is trying to normalize how far the wheel was spun (or trackpad\n//     dragged).  This is super useful for zoom support where you want to\n//     throw away the chunky scroll steps on the PC and make those equal to\n//     the slow and smooth tiny steps on the Mac. Key data: This code tries to\n//     resolve a single slow step on a wheel to 1.\n//\n//   - pixel is normalizing the desired scroll delta in pixel units.  You'll\n//     get the crazy differences between browsers, but at least it'll be in\n//     pixels!\n//\n//   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This\n//     should translate to positive value zooming IN, negative zooming OUT.\n//     This matches the newer 'wheel' event.\n//\n// Why are there spinX, spinY (or pixels)?\n//\n//   - spinX is a 2-finger side drag on the trackpad, and a shift + wheel turn\n//     with a mouse.  It results in side-scrolling in the browser by default.\n//\n//   - spinY is what you expect -- it's the classic axis of a mouse wheel.\n//\n//   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and\n//     probably is by browsers in conjunction with fancy 3D controllers .. but\n//     you know.\n//\n// Implementation info:\n//\n// Examples of 'wheel' event if you scroll slowly (down) by one step with an\n// average mouse:\n//\n//   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)\n//   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)\n//   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)\n//   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)\n//   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)\n//\n// On the trackpad:\n//\n//   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)\n//   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)\n//\n// On other/older browsers.. it's more complicated as there can be multiple and\n// also missing delta values.\n//\n// The 'wheel' event is more standard:\n//\n// http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents\n//\n// The basics is that it includes a unit, deltaMode (pixels, lines, pages), and\n// deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain\n// backward compatibility with older events.  Those other values help us\n// better normalize spin speed.  Example of what the browsers provide:\n//\n//                          | event.wheelDelta | event.detail\n//        ------------------+------------------+--------------\n//          Safari v5/OS X  |       -120       |       0\n//          Safari v5/Win7  |       -120       |       0\n//         Chrome v17/OS X  |       -120       |       0\n//         Chrome v17/Win7  |       -120       |       0\n//                IE9/Win7  |       -120       |   undefined\n//         Firefox v4/OS X  |     undefined    |       1\n//         Firefox v4/Win7  |     undefined    |       3\n//\n// ----------------------------------------------------------------------------\n\n// Reasonable defaults\nconst PIXEL_STEP = 10;\nconst LINE_HEIGHT = 40;\nconst PAGE_HEIGHT = 800;\n\nexport function normalizeWheel(wheelEvent) {\n  let sX = 0; // spinX\n  let sY = 0; // spinY\n  let pX = 0; // pixelX\n  let pY = 0; // pixelY\n\n  // Legacy\n  if ('detail' in wheelEvent) {\n    sY = wheelEvent.detail;\n  }\n  if ('wheelDelta' in wheelEvent) {\n    sY = -wheelEvent.wheelDelta / 120;\n  }\n  if ('wheelDeltaY' in wheelEvent) {\n    sY = -wheelEvent.wheelDeltaY / 120;\n  }\n  if ('wheelDeltaX' in wheelEvent) {\n    sX = -wheelEvent.wheelDeltaX / 120;\n  }\n\n  // side scrolling on FF with DOMMouseScroll\n  if ('axis' in wheelEvent && wheelEvent.axis === wheelEvent.HORIZONTAL_AXIS) {\n    sX = sY;\n    sY = 0;\n  }\n\n  pX = sX * PIXEL_STEP;\n  pY = sY * PIXEL_STEP;\n\n  if ('deltaY' in wheelEvent) {\n    pY = wheelEvent.deltaY;\n  }\n  if ('deltaX' in wheelEvent) {\n    pX = wheelEvent.deltaX;\n  }\n\n  if ((pX || pY) && wheelEvent.deltaMode) {\n    if (wheelEvent.deltaMode === 1) {\n      // delta in LINE units\n      pX *= LINE_HEIGHT;\n      pY *= LINE_HEIGHT;\n    } else {\n      // delta in PAGE units\n      pX *= PAGE_HEIGHT;\n      pY *= PAGE_HEIGHT;\n    }\n  }\n\n  // Fall-back if spin cannot be determined\n  if (pX && !sX) {\n    sX = pX < 1 ? -1 : 1;\n  }\n  if (pY && !sY) {\n    sY = pY < 1 ? -1 : 1;\n  }\n\n  return {\n    spinX: sX,\n    spinY: sY,\n    pixelX: pX,\n    pixelY: pY,\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Default export\n// ----------------------------------------------------------------------------\n\nexport default {\n  algo,\n  capitalize,\n  chain,\n  debounce,\n  enumToString,\n  event,\n  EVENT_ABORT,\n  formatBytesToProperUnit,\n  formatNumbersWithThousandSeparator,\n  get,\n  getArray,\n  getCurrentGlobalMTime,\n  getStateArrayMapFunc,\n  isVtkObject,\n  keystore,\n  measurePromiseExecution,\n  moveToProtected,\n  newInstance,\n  newTypedArray,\n  newTypedArrayFrom,\n  normalizeWheel,\n  obj,\n  proxy,\n  proxyPropertyMapping,\n  proxyPropertyState,\n  safeArrays,\n  set,\n  setArray,\n  setGet,\n  setGetArray,\n  setImmediate: setImmediateVTK,\n  setLoggerFunction,\n  throttle,\n  traverseInstanceTree,\n  TYPED_ARRAYS, // deprecated todo remove on breaking API revision\n  uncapitalize,\n  VOID,\n  vtkDebugMacro,\n  vtkErrorMacro,\n  vtkInfoMacro,\n  vtkLogMacro,\n  vtkOnceErrorMacro,\n  vtkWarningMacro,\n};\n"],"mappings":"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AAG,GAAGoR,SAAS,CAACxO,KAAD,CAArB;IACA9C,KAAK,CAACE,GAAD,CAAL,GAAaiR,QAAQ,CAACjR,GAAD,CAArB,CAHc,CAKd;;IACA,MAAMqR,OAAO,GAAGL,KAAK,CAAChR,GAAD,CAArB;;IACA2B,SAAS,CAAE,MAAKpD,WAAW,CAACyB,GAAD,CAAM,EAAxB,CAAT,GAAuCjB,KAAD,IAAW;MAC/C,IAAIA,KAAK,KAAKe,KAAK,CAACE,GAAD,CAAnB,EAA0B;QACxBF,KAAK,CAACE,GAAD,CAAL,GAAajB,KAAb;QACA,MAAMuS,UAAU,GAAGD,OAAO,CAACtS,KAAD,CAA1B;QACAoS,UAAU,CAACG,UAAD,CAAV;QACA3P,SAAS,CAACY,QAAV;MACD;IACF,CAPD;EAQD,CA7BD,CA+BA;;;EACA,IAAI6O,SAAS,CAAC7Q,MAAd,EAAsB;IACpB8C,GAAG,CAAC1B,SAAD,EAAY7B,KAAZ,EAAmBsR,SAAnB,CAAH;EACD;AACF,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,MAAMG,UAAU,GAAG,EAAnB;AACA,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,WAAW,GAAG,GAApB;AAEA,OAA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"},"metadata":{},"sourceType":"module"}