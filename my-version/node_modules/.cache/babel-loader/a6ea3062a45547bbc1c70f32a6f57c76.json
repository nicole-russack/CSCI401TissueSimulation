{"ast":null,"code":"import macro from 'vtk.js/Sources/macros'; // ----------------------------------------------------------------------------\n\nfunction vtkRenderPass(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderPass');\n\n  publicAPI.getOperation = () => model.currentOperation;\n\n  publicAPI.setCurrentOperation = val => {\n    model.currentOperation = val;\n    model.currentTraverseOperation = `traverse${macro.capitalize(model.currentOperation)}`;\n  };\n\n  publicAPI.getTraverseOperation = () => model.currentTraverseOperation; // by default this class will traverse all of its\n  // preDelegateOperations, then call its delegate render passes\n  // the traverse all of its postDelegateOperations\n  // any of those three arrays can be empty\n\n\n  publicAPI.traverse = function (viewNode) {\n    let parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    if (model.deleted) {\n      return;\n    } // we just render our delegates in order\n\n\n    model.currentParent = parent;\n    model.preDelegateOperations.forEach(val => {\n      publicAPI.setCurrentOperation(val);\n      viewNode.traverse(publicAPI);\n    });\n    model.delegates.forEach(val => {\n      val.traverse(viewNode, publicAPI);\n    });\n    model.postDelegateOperations.forEach(val => {\n      publicAPI.setCurrentOperation(val);\n      viewNode.traverse(publicAPI);\n    });\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nconst DEFAULT_VALUES = {\n  delegates: [],\n  currentOperation: null,\n  preDelegateOperations: [],\n  postDelegateOperations: [],\n  currentParent: null\n}; // ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['currentOperation']);\n  macro.setGet(publicAPI, model, ['delegates', 'currentParent', 'preDelegateOperations', 'postDelegateOperations']); // Object methods\n\n  vtkRenderPass(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkRenderPass'); // ----------------------------------------------------------------------------\n\nexport default {\n  newInstance,\n  extend\n};","map":{"version":3,"names":["macro","vtkRenderPass","publicAPI","model","classHierarchy","push","getOperation","currentOperation","setCurrentOperation","val","currentTraverseOperation","capitalize","getTraverseOperation","traverse","viewNode","parent","deleted","currentParent","preDelegateOperations","forEach","delegates","postDelegateOperations","DEFAULT_VALUES","extend","initialValues","Object","assign","obj","get","setGet","newInstance"],"sources":["/Users/nicolerussack/CSCI401/CSCI401TissueSimulation/my-version/node_modules/vtk.js/Sources/Rendering/SceneGraph/RenderPass/index.js"],"sourcesContent":["import macro from 'vtk.js/Sources/macros';\n\n// ----------------------------------------------------------------------------\n\nfunction vtkRenderPass(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderPass');\n\n  publicAPI.getOperation = () => model.currentOperation;\n\n  publicAPI.setCurrentOperation = (val) => {\n    model.currentOperation = val;\n    model.currentTraverseOperation = `traverse${macro.capitalize(\n      model.currentOperation\n    )}`;\n  };\n\n  publicAPI.getTraverseOperation = () => model.currentTraverseOperation;\n\n  // by default this class will traverse all of its\n  // preDelegateOperations, then call its delegate render passes\n  // the traverse all of its postDelegateOperations\n  // any of those three arrays can be empty\n  publicAPI.traverse = (viewNode, parent = null) => {\n    if (model.deleted) {\n      return;\n    }\n\n    // we just render our delegates in order\n    model.currentParent = parent;\n\n    model.preDelegateOperations.forEach((val) => {\n      publicAPI.setCurrentOperation(val);\n      viewNode.traverse(publicAPI);\n    });\n    model.delegates.forEach((val) => {\n      val.traverse(viewNode, publicAPI);\n    });\n    model.postDelegateOperations.forEach((val) => {\n      publicAPI.setCurrentOperation(val);\n      viewNode.traverse(publicAPI);\n    });\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  delegates: [],\n  currentOperation: null,\n  preDelegateOperations: [],\n  postDelegateOperations: [],\n  currentParent: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['currentOperation']);\n  macro.setGet(publicAPI, model, [\n    'delegates',\n    'currentParent',\n    'preDelegateOperations',\n    'postDelegateOperations',\n  ]);\n\n  // Object methods\n  vtkRenderPass(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkRenderPass');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,uBAAlB,C,CAEA;;AAEA,SAASC,aAAT,CAAuBC,SAAvB,EAAkCC,KAAlC,EAAyC;EACvC;EACAA,KAAK,CAACC,cAAN,CAAqBC,IAArB,CAA0B,eAA1B;;EAEAH,SAAS,CAACI,YAAV,GAAyB,MAAMH,KAAK,CAACI,gBAArC;;EAEAL,SAAS,CAACM,mBAAV,GAAiCC,GAAD,IAAS;IACvCN,KAAK,CAACI,gBAAN,GAAyBE,GAAzB;IACAN,KAAK,CAACO,wBAAN,GAAkC,WAAUV,KAAK,CAACW,UAAN,CAC1CR,KAAK,CAACI,gBADoC,CAE1C,EAFF;EAGD,CALD;;EAOAL,SAAS,CAACU,oBAAV,GAAiC,MAAMT,KAAK,CAACO,wBAA7C,CAbuC,CAevC;EACA;EACA;EACA;;;EACAR,SAAS,CAACW,QAAV,GAAqB,UAACC,QAAD,EAA6B;IAAA,IAAlBC,MAAkB,uEAAT,IAAS;;IAChD,IAAIZ,KAAK,CAACa,OAAV,EAAmB;MACjB;IACD,CAH+C,CAKhD;;;IACAb,KAAK,CAACc,aAAN,GAAsBF,MAAtB;IAEAZ,KAAK,CAACe,qBAAN,CAA4BC,OAA5B,CAAqCV,GAAD,IAAS;MAC3CP,SAAS,CAACM,mBAAV,CAA8BC,GAA9B;MACAK,QAAQ,CAACD,QAAT,CAAkBX,SAAlB;IACD,CAHD;IAIAC,KAAK,CAACiB,SAAN,CAAgBD,OAAhB,CAAyBV,GAAD,IAAS;MAC/BA,GAAG,CAACI,QAAJ,CAAaC,QAAb,EAAuBZ,SAAvB;IACD,CAFD;IAGAC,KAAK,CAACkB,sBAAN,CAA6BF,OAA7B,CAAsCV,GAAD,IAAS;MAC5CP,SAAS,CAACM,mBAAV,CAA8BC,GAA9B;MACAK,QAAQ,CAACD,QAAT,CAAkBX,SAAlB;IACD,CAHD;EAID,CAnBD;AAoBD,C,CAED;AACA;AACA;;;AAEA,MAAMoB,cAAc,GAAG;EACrBF,SAAS,EAAE,EADU;EAErBb,gBAAgB,EAAE,IAFG;EAGrBW,qBAAqB,EAAE,EAHF;EAIrBG,sBAAsB,EAAE,EAJH;EAKrBJ,aAAa,EAAE;AALM,CAAvB,C,CAQA;;AAEA,OAAO,SAASM,MAAT,CAAgBrB,SAAhB,EAA2BC,KAA3B,EAAsD;EAAA,IAApBqB,aAAoB,uEAAJ,EAAI;EAC3DC,MAAM,CAACC,MAAP,CAAcvB,KAAd,EAAqBmB,cAArB,EAAqCE,aAArC,EAD2D,CAG3D;;EACAxB,KAAK,CAAC2B,GAAN,CAAUzB,SAAV,EAAqBC,KAArB;EACAH,KAAK,CAAC4B,GAAN,CAAU1B,SAAV,EAAqBC,KAArB,EAA4B,CAAC,kBAAD,CAA5B;EACAH,KAAK,CAAC6B,MAAN,CAAa3B,SAAb,EAAwBC,KAAxB,EAA+B,CAC7B,WAD6B,EAE7B,eAF6B,EAG7B,uBAH6B,EAI7B,wBAJ6B,CAA/B,EAN2D,CAa3D;;EACAF,aAAa,CAACC,SAAD,EAAYC,KAAZ,CAAb;AACD,C,CAED;;AAEA,OAAO,MAAM2B,WAAW,GAAG9B,KAAK,CAAC8B,WAAN,CAAkBP,MAAlB,EAA0B,eAA1B,CAApB,C,CAEP;;AAEA,eAAe;EAAEO,WAAF;EAAeP;AAAf,CAAf"},"metadata":{},"sourceType":"module"}