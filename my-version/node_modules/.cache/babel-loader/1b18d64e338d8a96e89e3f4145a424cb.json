{"ast":null,"code":"import { mat4 } from 'gl-matrix';\nimport macro from 'vtk.js/Sources/macros';\nimport vtkViewNode from 'vtk.js/Sources/Rendering/SceneGraph/ViewNode';\nimport { registerOverride } from 'vtk.js/Sources/Rendering/WebGPU/ViewNodeFactory'; // ----------------------------------------------------------------------------\n// vtkWebGPUVolume methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUVolume(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUVolume'); // Builds myself.\n\n  publicAPI.buildPass = prepass => {\n    if (!model.renderable || !model.renderable.getVisibility()) {\n      return;\n    }\n\n    if (prepass) {\n      model.WebGPURenderer = publicAPI.getFirstAncestorOfType('vtkWebGPURenderer');\n      model.WebGPURenderWindow = model.WebGPURenderer.getFirstAncestorOfType('vtkWebGPURenderWindow'); // for the future if we support hardware selection of volumes\n\n      if (model.propID === undefined) {\n        model.propID = model.WebGPURenderWindow.getUniquePropID();\n      }\n\n      model.renderable.getMapper().update();\n    }\n  };\n\n  publicAPI.queryPass = (prepass, renderPass) => {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      } // Check for the special case when the mapper's bounds are unknown\n\n\n      const bds = model.renderable.getMapper().getBounds();\n\n      if (!bds || bds.length !== 6 || bds[0] > bds[1]) {\n        return;\n      }\n\n      renderPass.addVolume(publicAPI);\n    }\n  }; // used in the method below\n\n\n  const idx = new Float64Array(3);\n  const vout = new Float64Array(3);\n\n  publicAPI.getBoundingCubePoints = (result, offset) => {\n    const input = model.renderable.getMapper().getInputData();\n\n    if (!input) {\n      return;\n    }\n\n    const extent = input.getExtent();\n    const m = model.renderable.getMatrix();\n    let count = 0;\n\n    for (let iz = 4; iz < 6; iz++) {\n      idx[2] = extent[iz];\n\n      for (let iy = 2; iy < 4; iy++) {\n        idx[1] = extent[iy];\n\n        for (let ix = 0; ix < 2; ix++) {\n          idx[0] = extent[ix];\n          input.indexToWorld(idx, vout);\n          let poffset = offset + count * 3;\n          result[poffset++] = m[0] * vout[0] + m[1] * vout[1] + m[2] * vout[2] + m[3];\n          result[poffset++] = m[4] * vout[0] + m[5] * vout[1] + m[6] * vout[2] + m[7];\n          result[poffset++] = m[8] * vout[0] + m[9] * vout[1] + m[10] * vout[2] + m[11];\n          count++;\n        }\n      }\n    }\n  };\n\n  publicAPI.getKeyMatrices = wgpuRen => {\n    // has the actor or stabilization center changed?\n    if (Math.max(model.renderable.getMTime(), wgpuRen.getStabilizedTime()) > model.keyMatricesTime.getMTime()) {\n      model.renderable.computeMatrix();\n      const mcwc = model.renderable.getMatrix(); // compute the net shift\n\n      const center = wgpuRen.getStabilizedCenterByReference();\n      mat4.transpose(model.keyMatrices.bcwc, mcwc); // to get to stabilized we also need the center\n\n      mat4.translate(model.keyMatrices.bcsc, model.keyMatrices.bcwc, [-center[0], -center[1], -center[2]]);\n      model.keyMatricesTime.modified();\n    }\n\n    return model.keyMatrices;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nconst DEFAULT_VALUES = {\n  propID: undefined,\n  keyMatricesTime: null\n}; // ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.keyMatricesTime = {};\n  macro.obj(model.keyMatricesTime, {\n    mtime: 0\n  });\n  model.keyMatrices = {\n    bcwc: new Float64Array(16),\n    bcsc: new Float64Array(16)\n  };\n  macro.get(publicAPI, model, ['propID', 'keyMatricesTime']); // Object methods\n\n  vtkWebGPUVolume(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkWebGPUVolume'); // ----------------------------------------------------------------------------\n\nexport default {\n  newInstance,\n  extend\n}; // Register ourself to WebGPU backend if imported\n\nregisterOverride('vtkVolume', newInstance);","map":{"version":3,"names":["mat4","macro","vtkViewNode","registerOverride","vtkWebGPUVolume","publicAPI","model","classHierarchy","push","buildPass","prepass","renderable","getVisibility","WebGPURenderer","getFirstAncestorOfType","WebGPURenderWindow","propID","undefined","getUniquePropID","getMapper","update","queryPass","renderPass","bds","getBounds","length","addVolume","idx","Float64Array","vout","getBoundingCubePoints","result","offset","input","getInputData","extent","getExtent","m","getMatrix","count","iz","iy","ix","indexToWorld","poffset","getKeyMatrices","wgpuRen","Math","max","getMTime","getStabilizedTime","keyMatricesTime","computeMatrix","mcwc","center","getStabilizedCenterByReference","transpose","keyMatrices","bcwc","translate","bcsc","modified","DEFAULT_VALUES","extend","initialValues","Object","assign","obj","mtime","get","newInstance"],"sources":["/Users/nicolerussack/CSCI401/CSCI401TissueSimulation/my-version/node_modules/vtk.js/Sources/Rendering/WebGPU/Volume/index.js"],"sourcesContent":["import { mat4 } from 'gl-matrix';\n\nimport macro from 'vtk.js/Sources/macros';\nimport vtkViewNode from 'vtk.js/Sources/Rendering/SceneGraph/ViewNode';\n\nimport { registerOverride } from 'vtk.js/Sources/Rendering/WebGPU/ViewNodeFactory';\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUVolume methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUVolume(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUVolume');\n\n  // Builds myself.\n  publicAPI.buildPass = (prepass) => {\n    if (!model.renderable || !model.renderable.getVisibility()) {\n      return;\n    }\n    if (prepass) {\n      model.WebGPURenderer =\n        publicAPI.getFirstAncestorOfType('vtkWebGPURenderer');\n      model.WebGPURenderWindow = model.WebGPURenderer.getFirstAncestorOfType(\n        'vtkWebGPURenderWindow'\n      );\n      // for the future if we support hardware selection of volumes\n      if (model.propID === undefined) {\n        model.propID = model.WebGPURenderWindow.getUniquePropID();\n      }\n      model.renderable.getMapper().update();\n    }\n  };\n\n  publicAPI.queryPass = (prepass, renderPass) => {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      }\n\n      // Check for the special case when the mapper's bounds are unknown\n      const bds = model.renderable.getMapper().getBounds();\n      if (!bds || bds.length !== 6 || bds[0] > bds[1]) {\n        return;\n      }\n\n      renderPass.addVolume(publicAPI);\n    }\n  };\n\n  // used in the method below\n  const idx = new Float64Array(3);\n  const vout = new Float64Array(3);\n\n  publicAPI.getBoundingCubePoints = (result, offset) => {\n    const input = model.renderable.getMapper().getInputData();\n    if (!input) {\n      return;\n    }\n    const extent = input.getExtent();\n    const m = model.renderable.getMatrix();\n\n    let count = 0;\n    for (let iz = 4; iz < 6; iz++) {\n      idx[2] = extent[iz];\n      for (let iy = 2; iy < 4; iy++) {\n        idx[1] = extent[iy];\n        for (let ix = 0; ix < 2; ix++) {\n          idx[0] = extent[ix];\n          input.indexToWorld(idx, vout);\n          let poffset = offset + count * 3;\n          result[poffset++] =\n            m[0] * vout[0] + m[1] * vout[1] + m[2] * vout[2] + m[3];\n          result[poffset++] =\n            m[4] * vout[0] + m[5] * vout[1] + m[6] * vout[2] + m[7];\n          result[poffset++] =\n            m[8] * vout[0] + m[9] * vout[1] + m[10] * vout[2] + m[11];\n          count++;\n        }\n      }\n    }\n  };\n\n  publicAPI.getKeyMatrices = (wgpuRen) => {\n    // has the actor or stabilization center changed?\n    if (\n      Math.max(model.renderable.getMTime(), wgpuRen.getStabilizedTime()) >\n      model.keyMatricesTime.getMTime()\n    ) {\n      model.renderable.computeMatrix();\n\n      const mcwc = model.renderable.getMatrix();\n\n      // compute the net shift\n      const center = wgpuRen.getStabilizedCenterByReference();\n      mat4.transpose(model.keyMatrices.bcwc, mcwc);\n\n      // to get to stabilized we also need the center\n      mat4.translate(model.keyMatrices.bcsc, model.keyMatrices.bcwc, [\n        -center[0],\n        -center[1],\n        -center[2],\n      ]);\n\n      model.keyMatricesTime.modified();\n    }\n\n    return model.keyMatrices;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  propID: undefined,\n  keyMatricesTime: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n\n  model.keyMatricesTime = {};\n  macro.obj(model.keyMatricesTime, { mtime: 0 });\n  model.keyMatrices = {\n    bcwc: new Float64Array(16),\n    bcsc: new Float64Array(16),\n  };\n\n  macro.get(publicAPI, model, ['propID', 'keyMatricesTime']);\n\n  // Object methods\n  vtkWebGPUVolume(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkWebGPUVolume');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n\n// Register ourself to WebGPU backend if imported\nregisterOverride('vtkVolume', newInstance);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}