{"ast":null,"code":"import * as macro from 'vtk.js/Sources/macros';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport vtkDataArray from 'vtk.js/Sources/Common/Core/DataArray';\nimport vtkWebGPUBuffer from 'vtk.js/Sources/Rendering/WebGPU/Buffer';\nimport vtkWebGPUIndexBuffer from 'vtk.js/Sources/Rendering/WebGPU/IndexBuffer';\nimport vtkWebGPUTypes from 'vtk.js/Sources/Rendering/WebGPU/Types';\nimport Constants from './Constants';\nconst {\n  BufferUsage\n} = Constants;\nconst {\n  vtkErrorMacro\n} = macro;\nconst {\n  VtkDataTypes\n} = vtkDataArray; // the webgpu constants all show up as undefined\n\n/* eslint-disable no-undef */\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nexport const STATIC = {};\n\nfunction _getFormatForDataArray(dataArray) {\n  let format;\n\n  switch (dataArray.getDataType()) {\n    case VtkDataTypes.UNSIGNED_CHAR:\n      format = 'uint8';\n      break;\n\n    case VtkDataTypes.FLOAT:\n      format = 'float32';\n      break;\n\n    case VtkDataTypes.UNSIGNED_INT:\n      format = 'uint32';\n      break;\n\n    case VtkDataTypes.INT:\n      format = 'sint32';\n      break;\n\n    case VtkDataTypes.DOUBLE:\n      format = 'float32';\n      break;\n\n    case VtkDataTypes.UNSIGNED_SHORT:\n      format = 'uint16';\n      break;\n\n    case VtkDataTypes.SHORT:\n      format = 'sin16';\n      break;\n\n    default:\n      format = 'float32';\n      break;\n  }\n\n  switch (dataArray.getNumberOfComponents()) {\n    case 2:\n      format += 'x2';\n      break;\n\n    case 3:\n      // only 32bit types support x3\n      if (!format.includes('32')) {\n        vtkErrorMacro(`unsupported x3 type for ${format}`);\n      }\n\n      format += 'x3';\n      break;\n\n    case 4:\n      format += 'x4';\n      break;\n\n    default:\n      break;\n  }\n\n  return format;\n}\n\nfunction packArray(indexBuffer, inArrayData, numComp, outputType, options) {\n  const result = {};\n  const flatSize = indexBuffer.getFlatSize();\n\n  if (!flatSize) {\n    return result;\n  } // setup shift and scale\n\n\n  let shift = [0.0, 0.0, 0.0, 0.0];\n\n  if (options.shift) {\n    if (options.shift.length) {\n      shift = options.shift;\n    } else {\n      shift.fill(options.shift);\n    }\n  }\n\n  let scale = [1.0, 1.0, 1.0, 1.0];\n\n  if (options.scale) {\n    if (options.scale.length) {\n      scale = options.scale;\n    } else {\n      scale.fill(options.scale);\n    }\n  }\n\n  const packExtra = Object.prototype.hasOwnProperty.call(options, 'packExtra') ? options.packExtra : false;\n  let addAPoint;\n  let vboidx = 0;\n  const stride = numComp + (packExtra ? 1 : 0);\n  const packedVBO = macro.newTypedArray(outputType, flatSize * stride); // pick the right function based on point versus cell data\n\n  let flatIdMap = indexBuffer.getFlatIdToPointId();\n\n  if (options.cellData) {\n    flatIdMap = indexBuffer.getFlatIdToCellId();\n  } // add data based on number of components\n\n\n  if (numComp === 1) {\n    addAPoint = function addAPointFunc(i) {\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\n    };\n  } else if (numComp === 2) {\n    addAPoint = function addAPointFunc(i) {\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\n      packedVBO[vboidx++] = scale[1] * inArrayData[i + 1] + shift[1];\n    };\n  } else if (numComp === 3 && !packExtra) {\n    addAPoint = function addAPointFunc(i) {\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\n      packedVBO[vboidx++] = scale[1] * inArrayData[i + 1] + shift[1];\n      packedVBO[vboidx++] = scale[2] * inArrayData[i + 2] + shift[2];\n    };\n  } else if (numComp === 3 && packExtra) {\n    addAPoint = function addAPointFunc(i) {\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\n      packedVBO[vboidx++] = scale[1] * inArrayData[i + 1] + shift[1];\n      packedVBO[vboidx++] = scale[2] * inArrayData[i + 2] + shift[2];\n      packedVBO[vboidx++] = scale[3] * 1.0 + shift[3];\n    };\n  } else if (numComp === 4) {\n    addAPoint = function addAPointFunc(i) {\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\n      packedVBO[vboidx++] = scale[1] * inArrayData[i + 1] + shift[1];\n      packedVBO[vboidx++] = scale[2] * inArrayData[i + 2] + shift[2];\n      packedVBO[vboidx++] = scale[3] * inArrayData[i + 3] + shift[3];\n    };\n  } // for each entry in the flat array process it\n\n\n  for (let index = 0; index < flatSize; index++) {\n    const inArrayId = numComp * flatIdMap[index];\n    addAPoint(inArrayId);\n  }\n\n  result.nativeArray = packedVBO;\n  return result;\n}\n\nfunction getNormal(pointData, i0, i1, i2) {\n  const v1 = [pointData[i2 * 3] - pointData[i1 * 3], pointData[i2 * 3 + 1] - pointData[i1 * 3 + 1], pointData[i2 * 3 + 2] - pointData[i1 * 3 + 2]];\n  const v2 = [pointData[i0 * 3] - pointData[i1 * 3], pointData[i0 * 3 + 1] - pointData[i1 * 3 + 1], pointData[i0 * 3 + 2] - pointData[i1 * 3 + 2]];\n  const result = [];\n  vtkMath.cross(v1, v2, result);\n  vtkMath.normalize(result);\n  return result;\n}\n\nfunction generateNormals(cellArray, pointArray) {\n  const pointData = pointArray.getData();\n  const cellArrayData = cellArray.getData();\n\n  if (!cellArrayData || !pointData) {\n    return null;\n  } // return a cellArray of normals\n\n\n  const packedVBO = new Int8Array(cellArray.getNumberOfCells() * 4);\n  const size = cellArrayData.length;\n  let vboidx = 0;\n\n  for (let index = 0; index < size;) {\n    const normal = getNormal(pointData, cellArrayData[index + 1], cellArrayData[index + 2], cellArrayData[index + 3]);\n    packedVBO[vboidx++] = 127 * normal[0];\n    packedVBO[vboidx++] = 127 * normal[1];\n    packedVBO[vboidx++] = 127 * normal[2];\n    packedVBO[vboidx++] = 127;\n    index += cellArrayData[index] + 1;\n  }\n\n  return packedVBO;\n} // ----------------------------------------------------------------------------\n// vtkWebGPUBufferManager methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkWebGPUBufferManager(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUBufferManager');\n\n  function _createBuffer(req) {\n    // if a dataArray is provided set the nativeArray\n    if (req.dataArray && !req.nativeArray) {\n      req.nativeArray = req.dataArray.getData();\n    }\n\n    let buffer;\n    let gpuUsage; // handle index buffers\n\n    if (req.usage === BufferUsage.Index) {\n      // todo change to FlattenedIndex to be more clear\n      buffer = vtkWebGPUIndexBuffer.newInstance({\n        label: req.label\n      });\n      buffer.setDevice(model.device);\n      /* eslint-disable no-bitwise */\n\n      gpuUsage = GPUBufferUsage.INDEX | GPUBufferUsage.COPY_DST;\n      /* eslint-enable no-bitwise */\n\n      buffer.buildIndexBuffer(req);\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n      buffer.setArrayInformation([{\n        format: req.format\n      }]);\n    } // create one if not done already\n\n\n    if (!buffer) {\n      buffer = vtkWebGPUBuffer.newInstance({\n        label: req.label\n      });\n      buffer.setDevice(model.device);\n    } // handle uniform buffers\n\n\n    if (req.usage === BufferUsage.UniformArray) {\n      /* eslint-disable no-bitwise */\n      gpuUsage = GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST;\n      /* eslint-enable no-bitwise */\n\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n    } // handle storage buffers\n\n\n    if (req.usage === BufferUsage.Storage) {\n      /* eslint-disable no-bitwise */\n      gpuUsage = GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST;\n      /* eslint-enable no-bitwise */\n\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n    } // handle textures\n\n\n    if (req.usage === BufferUsage.Texture) {\n      /* eslint-disable no-bitwise */\n      gpuUsage = GPUBufferUsage.COPY_SRC;\n      /* eslint-enable no-bitwise */\n\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n    } // all of the below types that have gpuUsage = VERTEX require format\n    // to be provided.\n    // handle point data\n\n\n    if (req.usage === BufferUsage.PointArray) {\n      gpuUsage = GPUBufferUsage.VERTEX;\n      const arrayType = vtkWebGPUTypes.getNativeTypeFromBufferFormat(req.format);\n      const result = packArray(req.indexBuffer, req.dataArray.getData(), req.dataArray.getNumberOfComponents(), arrayType, {\n        packExtra: req.packExtra,\n        shift: req.shift,\n        scale: req.scale,\n        cellData: req.cellData,\n        cellOffset: req.cellOffset\n      });\n      buffer.createAndWrite(result.nativeArray, gpuUsage);\n      buffer.setStrideInBytes(vtkWebGPUTypes.getByteStrideFromBufferFormat(req.format));\n      buffer.setArrayInformation([{\n        offset: 0,\n        format: req.format,\n        interpolation: req.cellData ? 'flat' : 'perspective'\n      }]);\n    } // handle normals from points, snorm8x4\n\n\n    if (req.usage === BufferUsage.NormalsFromPoints) {\n      gpuUsage = GPUBufferUsage.VERTEX;\n      const arrayType = vtkWebGPUTypes.getNativeTypeFromBufferFormat(req.format);\n      const normals = generateNormals(req.cells, req.dataArray);\n      const result = packArray(req.indexBuffer, normals, 4, arrayType, {\n        cellData: true\n      });\n      buffer.createAndWrite(result.nativeArray, gpuUsage);\n      buffer.setStrideInBytes(vtkWebGPUTypes.getByteStrideFromBufferFormat(req.format));\n      buffer.setArrayInformation([{\n        offset: 0,\n        format: req.format,\n        interpolation: 'flat'\n      }]);\n    }\n\n    if (req.usage === BufferUsage.RawVertex) {\n      gpuUsage = GPUBufferUsage.VERTEX;\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n      buffer.setStrideInBytes(vtkWebGPUTypes.getByteStrideFromBufferFormat(req.format));\n      buffer.setArrayInformation([{\n        offset: 0,\n        format: req.format\n      }]);\n    }\n\n    buffer.setSourceTime(req.time);\n    return buffer;\n  } // is the buffer already present?\n\n\n  publicAPI.hasBuffer = hash => model.device.hasCachedObject(hash);\n\n  publicAPI.getBuffer = req => {\n    // if we have a source the get/create/cache the buffer\n    if (req.hash) {\n      return model.device.getCachedObject(req.hash, _createBuffer, req);\n    }\n\n    return _createBuffer(req);\n  };\n\n  publicAPI.getBufferForPointArray = (dataArray, indexBuffer) => {\n    const format = _getFormatForDataArray(dataArray);\n\n    const buffRequest = {\n      hash: `${dataArray.getMTime()}I${indexBuffer.getMTime()}${format}`,\n      usage: BufferUsage.PointArray,\n      format,\n      dataArray,\n      indexBuffer\n    };\n    return publicAPI.getBuffer(buffRequest);\n  };\n\n  publicAPI.getFullScreenQuadBuffer = () => {\n    if (model.fullScreenQuadBuffer) {\n      return model.fullScreenQuadBuffer;\n    }\n\n    model.fullScreenQuadBuffer = vtkWebGPUBuffer.newInstance();\n    model.fullScreenQuadBuffer.setDevice(model.device); // prettier-ignore\n\n    const array = new Float32Array([-1.0, -1.0, 0.0, 1.0, -1.0, 0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, 0.0]);\n    model.fullScreenQuadBuffer.createAndWrite(array, GPUBufferUsage.VERTEX);\n    model.fullScreenQuadBuffer.setStrideInBytes(12);\n    model.fullScreenQuadBuffer.setArrayInformation([{\n      offset: 0,\n      format: 'float32x3'\n    }]);\n    return model.fullScreenQuadBuffer;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nconst DEFAULT_VALUES = {\n  device: null,\n  fullScreenQuadBuffer: null\n}; // ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['device']);\n  vtkWebGPUBufferManager(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend); // ----------------------------------------------------------------------------\n\nexport default {\n  newInstance,\n  extend,\n  ...STATIC,\n  ...Constants\n};","map":{"version":3,"names":["macro","vtkMath","vtkDataArray","vtkWebGPUBuffer","vtkWebGPUIndexBuffer","vtkWebGPUTypes","Constants","BufferUsage","vtkErrorMacro","VtkDataTypes","STATIC","_getFormatForDataArray","dataArray","format","getDataType","UNSIGNED_CHAR","FLOAT","UNSIGNED_INT","INT","DOUBLE","UNSIGNED_SHORT","SHORT","getNumberOfComponents","includes","packArray","indexBuffer","inArrayData","numComp","outputType","options","result","flatSize","getFlatSize","shift","length","fill","scale","packExtra","Object","prototype","hasOwnProperty","call","addAPoint","vboidx","stride","packedVBO","newTypedArray","flatIdMap","getFlatIdToPointId","cellData","getFlatIdToCellId","addAPointFunc","i","index","inArrayId","nativeArray","getNormal","pointData","i0","i1","i2","v1","v2","cross","normalize","generateNormals","cellArray","pointArray","getData","cellArrayData","Int8Array","getNumberOfCells","size","normal","vtkWebGPUBufferManager","publicAPI","model","classHierarchy","push","_createBuffer","req","buffer","gpuUsage","usage","Index","newInstance","label","setDevice","device","GPUBufferUsage","INDEX","COPY_DST","buildIndexBuffer","createAndWrite","setArrayInformation","UniformArray","UNIFORM","Storage","STORAGE","Texture","COPY_SRC","PointArray","VERTEX","arrayType","getNativeTypeFromBufferFormat","cellOffset","setStrideInBytes","getByteStrideFromBufferFormat","offset","interpolation","NormalsFromPoints","normals","cells","RawVertex","setSourceTime","time","hasBuffer","hash","hasCachedObject","getBuffer","getCachedObject","getBufferForPointArray","buffRequest","getMTime","getFullScreenQuadBuffer","fullScreenQuadBuffer","array","Float32Array","DEFAULT_VALUES","extend","initialValues","assign","obj","setGet"],"sources":["/Users/nicolerussack/CSCI401/CSCI401TissueSimulation/my-version/node_modules/vtk.js/Sources/Rendering/WebGPU/BufferManager/index.js"],"sourcesContent":["import * as macro from 'vtk.js/Sources/macros';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport vtkDataArray from 'vtk.js/Sources/Common/Core/DataArray';\nimport vtkWebGPUBuffer from 'vtk.js/Sources/Rendering/WebGPU/Buffer';\nimport vtkWebGPUIndexBuffer from 'vtk.js/Sources/Rendering/WebGPU/IndexBuffer';\nimport vtkWebGPUTypes from 'vtk.js/Sources/Rendering/WebGPU/Types';\nimport Constants from './Constants';\n\nconst { BufferUsage } = Constants;\nconst { vtkErrorMacro } = macro;\nconst { VtkDataTypes } = vtkDataArray;\n\n// the webgpu constants all show up as undefined\n/* eslint-disable no-undef */\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nexport const STATIC = {};\n\nfunction _getFormatForDataArray(dataArray) {\n  let format;\n  switch (dataArray.getDataType()) {\n    case VtkDataTypes.UNSIGNED_CHAR:\n      format = 'uint8';\n      break;\n    case VtkDataTypes.FLOAT:\n      format = 'float32';\n      break;\n    case VtkDataTypes.UNSIGNED_INT:\n      format = 'uint32';\n      break;\n    case VtkDataTypes.INT:\n      format = 'sint32';\n      break;\n    case VtkDataTypes.DOUBLE:\n      format = 'float32';\n      break;\n    case VtkDataTypes.UNSIGNED_SHORT:\n      format = 'uint16';\n      break;\n    case VtkDataTypes.SHORT:\n      format = 'sin16';\n      break;\n    default:\n      format = 'float32';\n      break;\n  }\n  switch (dataArray.getNumberOfComponents()) {\n    case 2:\n      format += 'x2';\n      break;\n    case 3:\n      // only 32bit types support x3\n      if (!format.includes('32')) {\n        vtkErrorMacro(`unsupported x3 type for ${format}`);\n      }\n      format += 'x3';\n      break;\n    case 4:\n      format += 'x4';\n      break;\n    default:\n      break;\n  }\n  return format;\n}\n\nfunction packArray(indexBuffer, inArrayData, numComp, outputType, options) {\n  const result = {};\n  const flatSize = indexBuffer.getFlatSize();\n  if (!flatSize) {\n    return result;\n  }\n\n  // setup shift and scale\n  let shift = [0.0, 0.0, 0.0, 0.0];\n  if (options.shift) {\n    if (options.shift.length) {\n      shift = options.shift;\n    } else {\n      shift.fill(options.shift);\n    }\n  }\n  let scale = [1.0, 1.0, 1.0, 1.0];\n  if (options.scale) {\n    if (options.scale.length) {\n      scale = options.scale;\n    } else {\n      scale.fill(options.scale);\n    }\n  }\n  const packExtra = Object.prototype.hasOwnProperty.call(options, 'packExtra')\n    ? options.packExtra\n    : false;\n\n  let addAPoint;\n\n  let vboidx = 0;\n  const stride = numComp + (packExtra ? 1 : 0);\n  const packedVBO = macro.newTypedArray(outputType, flatSize * stride);\n\n  // pick the right function based on point versus cell data\n  let flatIdMap = indexBuffer.getFlatIdToPointId();\n  if (options.cellData) {\n    flatIdMap = indexBuffer.getFlatIdToCellId();\n  }\n\n  // add data based on number of components\n  if (numComp === 1) {\n    addAPoint = function addAPointFunc(i) {\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\n    };\n  } else if (numComp === 2) {\n    addAPoint = function addAPointFunc(i) {\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\n      packedVBO[vboidx++] = scale[1] * inArrayData[i + 1] + shift[1];\n    };\n  } else if (numComp === 3 && !packExtra) {\n    addAPoint = function addAPointFunc(i) {\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\n      packedVBO[vboidx++] = scale[1] * inArrayData[i + 1] + shift[1];\n      packedVBO[vboidx++] = scale[2] * inArrayData[i + 2] + shift[2];\n    };\n  } else if (numComp === 3 && packExtra) {\n    addAPoint = function addAPointFunc(i) {\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\n      packedVBO[vboidx++] = scale[1] * inArrayData[i + 1] + shift[1];\n      packedVBO[vboidx++] = scale[2] * inArrayData[i + 2] + shift[2];\n      packedVBO[vboidx++] = scale[3] * 1.0 + shift[3];\n    };\n  } else if (numComp === 4) {\n    addAPoint = function addAPointFunc(i) {\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\n      packedVBO[vboidx++] = scale[1] * inArrayData[i + 1] + shift[1];\n      packedVBO[vboidx++] = scale[2] * inArrayData[i + 2] + shift[2];\n      packedVBO[vboidx++] = scale[3] * inArrayData[i + 3] + shift[3];\n    };\n  }\n\n  // for each entry in the flat array process it\n  for (let index = 0; index < flatSize; index++) {\n    const inArrayId = numComp * flatIdMap[index];\n    addAPoint(inArrayId);\n  }\n\n  result.nativeArray = packedVBO;\n  return result;\n}\n\nfunction getNormal(pointData, i0, i1, i2) {\n  const v1 = [\n    pointData[i2 * 3] - pointData[i1 * 3],\n    pointData[i2 * 3 + 1] - pointData[i1 * 3 + 1],\n    pointData[i2 * 3 + 2] - pointData[i1 * 3 + 2],\n  ];\n  const v2 = [\n    pointData[i0 * 3] - pointData[i1 * 3],\n    pointData[i0 * 3 + 1] - pointData[i1 * 3 + 1],\n    pointData[i0 * 3 + 2] - pointData[i1 * 3 + 2],\n  ];\n  const result = [];\n  vtkMath.cross(v1, v2, result);\n  vtkMath.normalize(result);\n  return result;\n}\n\nfunction generateNormals(cellArray, pointArray) {\n  const pointData = pointArray.getData();\n  const cellArrayData = cellArray.getData();\n  if (!cellArrayData || !pointData) {\n    return null;\n  }\n\n  // return a cellArray of normals\n  const packedVBO = new Int8Array(cellArray.getNumberOfCells() * 4);\n  const size = cellArrayData.length;\n  let vboidx = 0;\n\n  for (let index = 0; index < size; ) {\n    const normal = getNormal(\n      pointData,\n      cellArrayData[index + 1],\n      cellArrayData[index + 2],\n      cellArrayData[index + 3]\n    );\n    packedVBO[vboidx++] = 127 * normal[0];\n    packedVBO[vboidx++] = 127 * normal[1];\n    packedVBO[vboidx++] = 127 * normal[2];\n    packedVBO[vboidx++] = 127;\n    index += cellArrayData[index] + 1;\n  }\n\n  return packedVBO;\n}\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUBufferManager methods\n// ----------------------------------------------------------------------------\nfunction vtkWebGPUBufferManager(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUBufferManager');\n\n  function _createBuffer(req) {\n    // if a dataArray is provided set the nativeArray\n    if (req.dataArray && !req.nativeArray) {\n      req.nativeArray = req.dataArray.getData();\n    }\n\n    let buffer;\n    let gpuUsage;\n\n    // handle index buffers\n    if (req.usage === BufferUsage.Index) {\n      // todo change to FlattenedIndex to be more clear\n      buffer = vtkWebGPUIndexBuffer.newInstance({ label: req.label });\n      buffer.setDevice(model.device);\n      /* eslint-disable no-bitwise */\n      gpuUsage = GPUBufferUsage.INDEX | GPUBufferUsage.COPY_DST;\n      /* eslint-enable no-bitwise */\n      buffer.buildIndexBuffer(req);\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n      buffer.setArrayInformation([{ format: req.format }]);\n    }\n\n    // create one if not done already\n    if (!buffer) {\n      buffer = vtkWebGPUBuffer.newInstance({ label: req.label });\n      buffer.setDevice(model.device);\n    }\n\n    // handle uniform buffers\n    if (req.usage === BufferUsage.UniformArray) {\n      /* eslint-disable no-bitwise */\n      gpuUsage = GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST;\n      /* eslint-enable no-bitwise */\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n    }\n\n    // handle storage buffers\n    if (req.usage === BufferUsage.Storage) {\n      /* eslint-disable no-bitwise */\n      gpuUsage = GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST;\n      /* eslint-enable no-bitwise */\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n    }\n\n    // handle textures\n    if (req.usage === BufferUsage.Texture) {\n      /* eslint-disable no-bitwise */\n      gpuUsage = GPUBufferUsage.COPY_SRC;\n      /* eslint-enable no-bitwise */\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n    }\n\n    // all of the below types that have gpuUsage = VERTEX require format\n    // to be provided.\n\n    // handle point data\n    if (req.usage === BufferUsage.PointArray) {\n      gpuUsage = GPUBufferUsage.VERTEX;\n      const arrayType = vtkWebGPUTypes.getNativeTypeFromBufferFormat(\n        req.format\n      );\n      const result = packArray(\n        req.indexBuffer,\n        req.dataArray.getData(),\n        req.dataArray.getNumberOfComponents(),\n        arrayType,\n        {\n          packExtra: req.packExtra,\n          shift: req.shift,\n          scale: req.scale,\n          cellData: req.cellData,\n          cellOffset: req.cellOffset,\n        }\n      );\n      buffer.createAndWrite(result.nativeArray, gpuUsage);\n      buffer.setStrideInBytes(\n        vtkWebGPUTypes.getByteStrideFromBufferFormat(req.format)\n      );\n      buffer.setArrayInformation([\n        {\n          offset: 0,\n          format: req.format,\n          interpolation: req.cellData ? 'flat' : 'perspective',\n        },\n      ]);\n    }\n\n    // handle normals from points, snorm8x4\n    if (req.usage === BufferUsage.NormalsFromPoints) {\n      gpuUsage = GPUBufferUsage.VERTEX;\n      const arrayType = vtkWebGPUTypes.getNativeTypeFromBufferFormat(\n        req.format\n      );\n      const normals = generateNormals(req.cells, req.dataArray);\n      const result = packArray(req.indexBuffer, normals, 4, arrayType, {\n        cellData: true,\n      });\n      buffer.createAndWrite(result.nativeArray, gpuUsage);\n      buffer.setStrideInBytes(\n        vtkWebGPUTypes.getByteStrideFromBufferFormat(req.format)\n      );\n      buffer.setArrayInformation([\n        { offset: 0, format: req.format, interpolation: 'flat' },\n      ]);\n    }\n\n    if (req.usage === BufferUsage.RawVertex) {\n      gpuUsage = GPUBufferUsage.VERTEX;\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n      buffer.setStrideInBytes(\n        vtkWebGPUTypes.getByteStrideFromBufferFormat(req.format)\n      );\n      buffer.setArrayInformation([{ offset: 0, format: req.format }]);\n    }\n\n    buffer.setSourceTime(req.time);\n\n    return buffer;\n  }\n\n  // is the buffer already present?\n  publicAPI.hasBuffer = (hash) => model.device.hasCachedObject(hash);\n\n  publicAPI.getBuffer = (req) => {\n    // if we have a source the get/create/cache the buffer\n    if (req.hash) {\n      return model.device.getCachedObject(req.hash, _createBuffer, req);\n    }\n\n    return _createBuffer(req);\n  };\n\n  publicAPI.getBufferForPointArray = (dataArray, indexBuffer) => {\n    const format = _getFormatForDataArray(dataArray);\n    const buffRequest = {\n      hash: `${dataArray.getMTime()}I${indexBuffer.getMTime()}${format}`,\n      usage: BufferUsage.PointArray,\n      format,\n      dataArray,\n      indexBuffer,\n    };\n    return publicAPI.getBuffer(buffRequest);\n  };\n\n  publicAPI.getFullScreenQuadBuffer = () => {\n    if (model.fullScreenQuadBuffer) {\n      return model.fullScreenQuadBuffer;\n    }\n\n    model.fullScreenQuadBuffer = vtkWebGPUBuffer.newInstance();\n    model.fullScreenQuadBuffer.setDevice(model.device);\n\n    // prettier-ignore\n    const array = new Float32Array([\n      -1.0, -1.0, 0.0,\n       1.0, -1.0, 0.0,\n       1.0, 1.0, 0.0,\n      -1.0, -1.0, 0.0,\n       1.0, 1.0, 0.0,\n      -1.0, 1.0, 0.0,\n    ]);\n    model.fullScreenQuadBuffer.createAndWrite(array, GPUBufferUsage.VERTEX);\n    model.fullScreenQuadBuffer.setStrideInBytes(12);\n    model.fullScreenQuadBuffer.setArrayInformation([\n      { offset: 0, format: 'float32x3' },\n    ]);\n    return model.fullScreenQuadBuffer;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  device: null,\n  fullScreenQuadBuffer: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n\n  macro.setGet(publicAPI, model, ['device']);\n\n  vtkWebGPUBufferManager(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend, ...STATIC, ...Constants };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}