{"ast":null,"code":"export const AttributeTypes = {\n  SCALARS: 0,\n  VECTORS: 1,\n  NORMALS: 2,\n  TCOORDS: 3,\n  TENSORS: 4,\n  GLOBALIDS: 5,\n  PEDIGREEIDS: 6,\n  EDGEFLAG: 7,\n  NUM_ATTRIBUTES: 8\n};\nexport const AttributeLimitTypes = {\n  MAX: 0,\n  EXACT: 1,\n  NOLIMIT: 2\n};\nexport const CellGhostTypes = {\n  DUPLICATECELL: 1,\n  // the cell is present on multiple processors\n  HIGHCONNECTIVITYCELL: 2,\n  // the cell has more neighbors than in a regular mesh\n  LOWCONNECTIVITYCELL: 4,\n  // the cell has less neighbors than in a regular mesh\n  REFINEDCELL: 8,\n  // other cells are present that refines it.\n  EXTERIORCELL: 16,\n  // the cell is on the exterior of the data set\n  HIDDENCELL: 32 // the cell is needed to maintain connectivity, but the data values should be ignored.\n\n};\nexport const PointGhostTypes = {\n  DUPLICATEPOINT: 1,\n  // the cell is present on multiple processors\n  HIDDENPOINT: 2 // the point is needed to maintain connectivity, but the data values should be ignored.\n\n};\nexport const AttributeCopyOperations = {\n  COPYTUPLE: 0,\n  INTERPOLATE: 1,\n  PASSDATA: 2,\n  ALLCOPY: 3 // all of the above\n\n};\nexport const ghostArrayName = 'vtkGhostType';\nexport const DesiredOutputPrecision = {\n  DEFAULT: 0,\n  // use the point type that does not truncate any data\n  SINGLE: 1,\n  // use Float32Array\n  DOUBLE: 2 // use Float64Array\n\n};\nexport default {\n  AttributeCopyOperations,\n  AttributeLimitTypes,\n  AttributeTypes,\n  CellGhostTypes,\n  DesiredOutputPrecision,\n  PointGhostTypes,\n  ghostArrayName\n};","map":{"version":3,"names":["AttributeTypes","SCALARS","VECTORS","NORMALS","TCOORDS","TENSORS","GLOBALIDS","PEDIGREEIDS","EDGEFLAG","NUM_ATTRIBUTES","AttributeLimitTypes","MAX","EXACT","NOLIMIT","CellGhostTypes","DUPLICATECELL","HIGHCONNECTIVITYCELL","LOWCONNECTIVITYCELL","REFINEDCELL","EXTERIORCELL","HIDDENCELL","PointGhostTypes","DUPLICATEPOINT","HIDDENPOINT","AttributeCopyOperations","COPYTUPLE","INTERPOLATE","PASSDATA","ALLCOPY","ghostArrayName","DesiredOutputPrecision","DEFAULT","SINGLE","DOUBLE"],"sources":["/Users/nicolerussack/CSCI401/CSCI401TissueSimulation/my-version/node_modules/vtk.js/Sources/Common/DataModel/DataSetAttributes/Constants.js"],"sourcesContent":["export const AttributeTypes = {\n  SCALARS: 0,\n  VECTORS: 1,\n  NORMALS: 2,\n  TCOORDS: 3,\n  TENSORS: 4,\n  GLOBALIDS: 5,\n  PEDIGREEIDS: 6,\n  EDGEFLAG: 7,\n  NUM_ATTRIBUTES: 8,\n};\n\nexport const AttributeLimitTypes = {\n  MAX: 0,\n  EXACT: 1,\n  NOLIMIT: 2,\n};\n\nexport const CellGhostTypes = {\n  DUPLICATECELL: 1, // the cell is present on multiple processors\n  HIGHCONNECTIVITYCELL: 2, // the cell has more neighbors than in a regular mesh\n  LOWCONNECTIVITYCELL: 4, // the cell has less neighbors than in a regular mesh\n  REFINEDCELL: 8, // other cells are present that refines it.\n  EXTERIORCELL: 16, // the cell is on the exterior of the data set\n  HIDDENCELL: 32, // the cell is needed to maintain connectivity, but the data values should be ignored.\n};\n\nexport const PointGhostTypes = {\n  DUPLICATEPOINT: 1, // the cell is present on multiple processors\n  HIDDENPOINT: 2, // the point is needed to maintain connectivity, but the data values should be ignored.\n};\n\nexport const AttributeCopyOperations = {\n  COPYTUPLE: 0,\n  INTERPOLATE: 1,\n  PASSDATA: 2,\n  ALLCOPY: 3, // all of the above\n};\n\nexport const ghostArrayName = 'vtkGhostType';\n\nexport const DesiredOutputPrecision = {\n  DEFAULT: 0, // use the point type that does not truncate any data\n  SINGLE: 1, // use Float32Array\n  DOUBLE: 2, // use Float64Array\n};\n\nexport default {\n  AttributeCopyOperations,\n  AttributeLimitTypes,\n  AttributeTypes,\n  CellGhostTypes,\n  DesiredOutputPrecision,\n  PointGhostTypes,\n  ghostArrayName,\n};\n"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG;EAC5BC,OAAO,EAAE,CADmB;EAE5BC,OAAO,EAAE,CAFmB;EAG5BC,OAAO,EAAE,CAHmB;EAI5BC,OAAO,EAAE,CAJmB;EAK5BC,OAAO,EAAE,CALmB;EAM5BC,SAAS,EAAE,CANiB;EAO5BC,WAAW,EAAE,CAPe;EAQ5BC,QAAQ,EAAE,CARkB;EAS5BC,cAAc,EAAE;AATY,CAAvB;AAYP,OAAO,MAAMC,mBAAmB,GAAG;EACjCC,GAAG,EAAE,CAD4B;EAEjCC,KAAK,EAAE,CAF0B;EAGjCC,OAAO,EAAE;AAHwB,CAA5B;AAMP,OAAO,MAAMC,cAAc,GAAG;EAC5BC,aAAa,EAAE,CADa;EACV;EAClBC,oBAAoB,EAAE,CAFM;EAEH;EACzBC,mBAAmB,EAAE,CAHO;EAGJ;EACxBC,WAAW,EAAE,CAJe;EAIZ;EAChBC,YAAY,EAAE,EALc;EAKV;EAClBC,UAAU,EAAE,EANgB,CAMZ;;AANY,CAAvB;AASP,OAAO,MAAMC,eAAe,GAAG;EAC7BC,cAAc,EAAE,CADa;EACV;EACnBC,WAAW,EAAE,CAFgB,CAEb;;AAFa,CAAxB;AAKP,OAAO,MAAMC,uBAAuB,GAAG;EACrCC,SAAS,EAAE,CAD0B;EAErCC,WAAW,EAAE,CAFwB;EAGrCC,QAAQ,EAAE,CAH2B;EAIrCC,OAAO,EAAE,CAJ4B,CAIzB;;AAJyB,CAAhC;AAOP,OAAO,MAAMC,cAAc,GAAG,cAAvB;AAEP,OAAO,MAAMC,sBAAsB,GAAG;EACpCC,OAAO,EAAE,CAD2B;EACxB;EACZC,MAAM,EAAE,CAF4B;EAEzB;EACXC,MAAM,EAAE,CAH4B,CAGzB;;AAHyB,CAA/B;AAMP,eAAe;EACbT,uBADa;EAEbd,mBAFa;EAGbV,cAHa;EAIbc,cAJa;EAKbgB,sBALa;EAMbT,eANa;EAObQ;AAPa,CAAf"},"metadata":{},"sourceType":"module"}