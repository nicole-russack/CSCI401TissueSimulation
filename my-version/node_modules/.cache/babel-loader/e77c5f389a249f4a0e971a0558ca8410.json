{"ast":null,"code":"import Constants from 'vtk.js/Sources/Common/DataModel/StructuredData/Constants';\nconst {\n  StructuredType\n} = Constants;\nexport function getDataDescriptionFromExtent(inExt) {\n  let dataDim = 0;\n\n  for (let i = 0; i < 3; ++i) {\n    if (inExt[i * 2] < inExt[i * 2 + 1]) {\n      dataDim++;\n    }\n  }\n\n  if (inExt[0] > inExt[1] || inExt[2] > inExt[3] || inExt[4] > inExt[5]) {\n    return StructuredType.EMPTY;\n  }\n\n  if (dataDim === 3) {\n    return StructuredType.XYZ_GRID;\n  }\n\n  if (dataDim === 2) {\n    if (inExt[0] === inExt[1]) {\n      return StructuredType.YZ_PLANE;\n    }\n\n    if (inExt[2] === inExt[3]) {\n      return StructuredType.XZ_PLANE;\n    }\n\n    return StructuredType.XY_PLANE;\n  }\n\n  if (dataDim === 1) {\n    if (inExt[0] < inExt[1]) {\n      return StructuredType.X_LINE;\n    }\n\n    if (inExt[2] < inExt[3]) {\n      return StructuredType.Y_LINE;\n    }\n\n    return StructuredType.Z_LINE;\n  }\n\n  return StructuredType.SINGLE_POINT;\n}\nexport default {\n  getDataDescriptionFromExtent,\n  ...Constants\n};","map":{"version":3,"names":["Constants","StructuredType","getDataDescriptionFromExtent","inExt","dataDim","i","EMPTY","XYZ_GRID","YZ_PLANE","XZ_PLANE","XY_PLANE","X_LINE","Y_LINE","Z_LINE","SINGLE_POINT"],"sources":["/Users/nicolerussack/CSCI401/CSCI401TissueSimulation/my-version/node_modules/vtk.js/Sources/Common/DataModel/StructuredData/index.js"],"sourcesContent":["import Constants from 'vtk.js/Sources/Common/DataModel/StructuredData/Constants';\n\nconst { StructuredType } = Constants;\n\nexport function getDataDescriptionFromExtent(inExt) {\n  let dataDim = 0;\n  for (let i = 0; i < 3; ++i) {\n    if (inExt[i * 2] < inExt[i * 2 + 1]) {\n      dataDim++;\n    }\n  }\n\n  if (inExt[0] > inExt[1] || inExt[2] > inExt[3] || inExt[4] > inExt[5]) {\n    return StructuredType.EMPTY;\n  }\n\n  if (dataDim === 3) {\n    return StructuredType.XYZ_GRID;\n  }\n\n  if (dataDim === 2) {\n    if (inExt[0] === inExt[1]) {\n      return StructuredType.YZ_PLANE;\n    }\n\n    if (inExt[2] === inExt[3]) {\n      return StructuredType.XZ_PLANE;\n    }\n    return StructuredType.XY_PLANE;\n  }\n\n  if (dataDim === 1) {\n    if (inExt[0] < inExt[1]) {\n      return StructuredType.X_LINE;\n    }\n\n    if (inExt[2] < inExt[3]) {\n      return StructuredType.Y_LINE;\n    }\n\n    return StructuredType.Z_LINE;\n  }\n\n  return StructuredType.SINGLE_POINT;\n}\n\nexport default { getDataDescriptionFromExtent, ...Constants };\n"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,0DAAtB;AAEA,MAAM;EAAEC;AAAF,IAAqBD,SAA3B;AAEA,OAAO,SAASE,4BAAT,CAAsCC,KAAtC,EAA6C;EAClD,IAAIC,OAAO,GAAG,CAAd;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuB,EAAEA,CAAzB,EAA4B;IAC1B,IAAIF,KAAK,CAACE,CAAC,GAAG,CAAL,CAAL,GAAeF,KAAK,CAACE,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAxB,EAAqC;MACnCD,OAAO;IACR;EACF;;EAED,IAAID,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAAhB,IAAuBA,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAAvC,IAA8CA,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAAlE,EAAuE;IACrE,OAAOF,cAAc,CAACK,KAAtB;EACD;;EAED,IAAIF,OAAO,KAAK,CAAhB,EAAmB;IACjB,OAAOH,cAAc,CAACM,QAAtB;EACD;;EAED,IAAIH,OAAO,KAAK,CAAhB,EAAmB;IACjB,IAAID,KAAK,CAAC,CAAD,CAAL,KAAaA,KAAK,CAAC,CAAD,CAAtB,EAA2B;MACzB,OAAOF,cAAc,CAACO,QAAtB;IACD;;IAED,IAAIL,KAAK,CAAC,CAAD,CAAL,KAAaA,KAAK,CAAC,CAAD,CAAtB,EAA2B;MACzB,OAAOF,cAAc,CAACQ,QAAtB;IACD;;IACD,OAAOR,cAAc,CAACS,QAAtB;EACD;;EAED,IAAIN,OAAO,KAAK,CAAhB,EAAmB;IACjB,IAAID,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAApB,EAAyB;MACvB,OAAOF,cAAc,CAACU,MAAtB;IACD;;IAED,IAAIR,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAApB,EAAyB;MACvB,OAAOF,cAAc,CAACW,MAAtB;IACD;;IAED,OAAOX,cAAc,CAACY,MAAtB;EACD;;EAED,OAAOZ,cAAc,CAACa,YAAtB;AACD;AAED,eAAe;EAAEZ,4BAAF;EAAgC,GAAGF;AAAnC,CAAf"},"metadata":{},"sourceType":"module"}