{"ast":null,"code":"import macro from 'vtk.js/Sources/macros';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport vtkScalarsToColors from 'vtk.js/Sources/Common/Core/ScalarsToColors';\nimport { ScalarMappingTarget } from 'vtk.js/Sources/Common/Core/ScalarsToColors/Constants';\nimport { VtkDataTypes } from 'vtk.js/Sources/Common/Core/DataArray/Constants';\nconst {\n  vtkErrorMacro\n} = macro; // ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n// Add module-level functions or api that you want to expose statically via\n// the next section...\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nconst BELOW_RANGE_COLOR_INDEX = 0;\nconst ABOVE_RANGE_COLOR_INDEX = 1;\nconst NAN_COLOR_INDEX = 2; // ----------------------------------------------------------------------------\n// vtkMyClass methods\n// ----------------------------------------------------------------------------\n\nfunction vtkLookupTable(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkLookupTable'); //----------------------------------------------------------------------------\n  // Description:\n  // Return true if all of the values defining the mapping have an opacity\n  // equal to 1. Default implementation return true.\n\n  publicAPI.isOpaque = () => {\n    if (model.opaqueFlagBuildTime.getMTime() < publicAPI.getMTime()) {\n      let opaque = true;\n\n      if (model.nanColor[3] < 1.0) {\n        opaque = 0;\n      }\n\n      if (model.useBelowRangeColor && model.belowRangeColor[3] < 1.0) {\n        opaque = 0;\n      }\n\n      if (model.useAboveRangeColor && model.aboveRangeColor[3] < 1.0) {\n        opaque = 0;\n      }\n\n      for (let i = 3; i < model.table.length && opaque; i += 4) {\n        if (model.table[i] < 255) {\n          opaque = false;\n        }\n      }\n\n      model.opaqueFlag = opaque;\n      model.opaqueFlagBuildTime.modified();\n    }\n\n    return model.opaqueFlag;\n  };\n\n  publicAPI.usingLogScale = () => false; //----------------------------------------------------------------------------\n\n\n  publicAPI.getNumberOfAvailableColors = () => model.table.length; //----------------------------------------------------------------------------\n  // Apply shift/scale to the scalar value v and return the index.\n\n\n  publicAPI.linearIndexLookup = (v, p) => {\n    let dIndex = 0;\n\n    if (v < p.range[0]) {\n      dIndex = p.maxIndex + BELOW_RANGE_COLOR_INDEX + 1.5;\n    } else if (v > p.range[1]) {\n      dIndex = p.maxIndex + ABOVE_RANGE_COLOR_INDEX + 1.5;\n    } else {\n      dIndex = (v + p.shift) * p.scale; // This conditional is needed because when v is very close to\n      // p.Range[1], it may map above p.MaxIndex in the linear mapping\n      // above.\n\n      dIndex = dIndex < p.maxIndex ? dIndex : p.maxIndex;\n    }\n\n    return Math.floor(dIndex);\n  };\n\n  publicAPI.linearLookup = (v, table, p) => {\n    let index = 0;\n\n    if (vtkMath.isNan(v)) {\n      index = Math.floor(p.maxIndex + 1.5 + NAN_COLOR_INDEX);\n    } else {\n      index = publicAPI.linearIndexLookup(v, p);\n    }\n\n    const offset = 4 * index;\n    return [table[offset], table[offset + 1], table[offset + 2], table[offset + 3]];\n  };\n\n  publicAPI.indexedLookupFunction = (v, table, p) => {\n    let index = publicAPI.getAnnotatedValueIndexInternal(v);\n\n    if (index === -1) {\n      index = model.numberOfColors + NAN_COLOR_INDEX;\n    }\n\n    const offset = 4 * index;\n    return [table[offset], table[offset + 1], table[offset + 2], table[offset + 3]];\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.lookupShiftAndScale = (range, p) => {\n    p.shift = -range[0];\n    p.scale = Number.MAX_VALUE;\n\n    if (range[1] > range[0]) {\n      p.scale = (p.maxIndex + 1) / (range[1] - range[0]);\n    }\n  }; // Public API methods\n\n\n  publicAPI.mapScalarsThroughTable = (input, output, outFormat, inputOffset) => {\n    let lookupFunc = publicAPI.linearLookup;\n\n    if (model.indexedLookup) {\n      lookupFunc = publicAPI.indexedLookupFunction;\n    }\n\n    const trange = publicAPI.getMappingRange();\n    const p = {\n      maxIndex: publicAPI.getNumberOfColors() - 1,\n      range: trange,\n      shift: 0.0,\n      scale: 0.0\n    };\n    publicAPI.lookupShiftAndScale(trange, p);\n    const alpha = publicAPI.getAlpha();\n    const length = input.getNumberOfTuples();\n    const inIncr = input.getNumberOfComponents();\n    const outputV = output.getData();\n    const inputV = input.getData();\n\n    if (alpha >= 1.0) {\n      if (outFormat === ScalarMappingTarget.RGBA) {\n        for (let i = 0; i < length; i++) {\n          const cptr = lookupFunc(inputV[i * inIncr + inputOffset], model.table, p);\n          outputV[i * 4] = cptr[0];\n          outputV[i * 4 + 1] = cptr[1];\n          outputV[i * 4 + 2] = cptr[2];\n          outputV[i * 4 + 3] = cptr[3];\n        }\n      }\n    } else {\n      /* eslint-disable no-lonely-if */\n      if (outFormat === ScalarMappingTarget.RGBA) {\n        for (let i = 0; i < length; i++) {\n          const cptr = lookupFunc(inputV[i * inIncr + inputOffset], model.table, p);\n          outputV[i * 4] = cptr[0];\n          outputV[i * 4 + 1] = cptr[1];\n          outputV[i * 4 + 2] = cptr[2];\n          outputV[i * 4 + 3] = Math.floor(cptr[3] * alpha + 0.5);\n        }\n      }\n    } // alpha blending\n\n  };\n\n  publicAPI.forceBuild = () => {\n    let hinc = 0.0;\n    let sinc = 0.0;\n    let vinc = 0.0;\n    let ainc = 0.0;\n    const maxIndex = model.numberOfColors - 1;\n\n    if (maxIndex) {\n      hinc = (model.hueRange[1] - model.hueRange[0]) / maxIndex;\n      sinc = (model.saturationRange[1] - model.saturationRange[0]) / maxIndex;\n      vinc = (model.valueRange[1] - model.valueRange[0]) / maxIndex;\n      ainc = (model.alphaRange[1] - model.alphaRange[0]) / maxIndex;\n    }\n\n    const hsv = [];\n    const rgba = [];\n\n    for (let i = 0; i <= maxIndex; i++) {\n      hsv[0] = model.hueRange[0] + i * hinc;\n      hsv[1] = model.saturationRange[0] + i * sinc;\n      hsv[2] = model.valueRange[0] + i * vinc;\n      vtkMath.hsv2rgb(hsv, rgba);\n      rgba[3] = model.alphaRange[0] + i * ainc; //  case VTK_RAMP_LINEAR:\n\n      model.table[i * 4] = rgba[0] * 255.0 + 0.5;\n      model.table[i * 4 + 1] = rgba[1] * 255.0 + 0.5;\n      model.table[i * 4 + 2] = rgba[2] * 255.0 + 0.5;\n      model.table[i * 4 + 3] = rgba[3] * 255.0 + 0.5;\n    }\n\n    publicAPI.buildSpecialColors();\n    model.buildTime.modified();\n  };\n\n  publicAPI.setTable = table => {\n    if (table.getNumberOfComponents() !== 4) {\n      vtkErrorMacro('Expected 4 components for RGBA colors');\n      return;\n    }\n\n    if (table.getDataType() !== VtkDataTypes.UNSIGNED_CHAR) {\n      vtkErrorMacro('Expected unsigned char values for RGBA colors');\n      return;\n    }\n\n    model.numberOfColors = table.getNumberOfTuples();\n    const data = table.getData();\n\n    for (let i = 0; i < data.length; i++) {\n      model.table[i] = data[i];\n    }\n\n    publicAPI.buildSpecialColors();\n    model.insertTime.modified();\n    publicAPI.modified();\n  };\n\n  publicAPI.buildSpecialColors = () => {\n    // Add \"special\" colors (NaN, below range, above range) to table here.\n    const {\n      numberOfColors\n    } = model;\n    const tptr = model.table;\n    let base = (numberOfColors + BELOW_RANGE_COLOR_INDEX) * 4; // Below range color\n\n    if (model.useBelowRangeColor || numberOfColors === 0) {\n      tptr[base] = model.belowRangeColor[0] * 255.0 + 0.5;\n      tptr[base + 1] = model.belowRangeColor[1] * 255.0 + 0.5;\n      tptr[base + 2] = model.belowRangeColor[2] * 255.0 + 0.5;\n      tptr[base + 3] = model.belowRangeColor[3] * 255.0 + 0.5;\n    } else {\n      // Duplicate the first color in the table.\n      tptr[base] = tptr[0];\n      tptr[base + 1] = tptr[1];\n      tptr[base + 2] = tptr[2];\n      tptr[base + 3] = tptr[3];\n    } // Above range color\n\n\n    base = (numberOfColors + ABOVE_RANGE_COLOR_INDEX) * 4;\n\n    if (model.useAboveRangeColor || numberOfColors === 0) {\n      tptr[base] = model.aboveRangeColor[0] * 255.0 + 0.5;\n      tptr[base + 1] = model.aboveRangeColor[1] * 255.0 + 0.5;\n      tptr[base + 2] = model.aboveRangeColor[2] * 255.0 + 0.5;\n      tptr[base + 3] = model.aboveRangeColor[3] * 255.0 + 0.5;\n    } else {\n      // Duplicate the last color in the table.\n      tptr[base] = tptr[4 * (numberOfColors - 1) + 0];\n      tptr[base + 1] = tptr[4 * (numberOfColors - 1) + 1];\n      tptr[base + 2] = tptr[4 * (numberOfColors - 1) + 2];\n      tptr[base + 3] = tptr[4 * (numberOfColors - 1) + 3];\n    } // Always use NanColor\n\n\n    base = (numberOfColors + NAN_COLOR_INDEX) * 4;\n    tptr[base] = model.nanColor[0] * 255.0 + 0.5;\n    tptr[base + 1] = model.nanColor[1] * 255.0 + 0.5;\n    tptr[base + 2] = model.nanColor[2] * 255.0 + 0.5;\n    tptr[base + 3] = model.nanColor[3] * 255.0 + 0.5;\n  };\n\n  publicAPI.build = () => {\n    if (model.table.length < 1 || publicAPI.getMTime() > model.buildTime.getMTime() && model.insertTime.getMTime() <= model.buildTime.getMTime()) {\n      publicAPI.forceBuild();\n    }\n  };\n\n  if (model.table.length > 0) {\n    // ensure insertTime is more recently modified than buildTime if\n    // a table is provided via the constructor\n    model.insertTime.modified();\n  }\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nconst DEFAULT_VALUES = {\n  numberOfColors: 256,\n  // table: null,\n  hueRange: [0.0, 0.66667],\n  saturationRange: [1.0, 1.0],\n  valueRange: [1.0, 1.0],\n  alphaRange: [1.0, 1.0],\n  nanColor: [0.5, 0.0, 0.0, 1.0],\n  belowRangeColor: [0.0, 0.0, 0.0, 1.0],\n  aboveRangeColor: [1.0, 1.0, 1.0, 1.0],\n  useAboveRangeColor: false,\n  useBelowRangeColor: false,\n  alpha: 1.0 // buildTime: null,\n  // opaqueFlagBuildTime: null,\n  // insertTime: null,\n\n}; // ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkScalarsToColors.extend(publicAPI, model, initialValues); // Internal objects initialization\n\n  if (!model.table) {\n    model.table = [];\n  }\n\n  model.buildTime = {};\n  macro.obj(model.buildTime);\n  model.opaqueFlagBuildTime = {};\n  macro.obj(model.opaqueFlagBuildTime, {\n    mtime: 0\n  });\n  model.insertTime = {};\n  macro.obj(model.insertTime, {\n    mtime: 0\n  }); // Create get-only macros\n\n  macro.get(publicAPI, model, ['buildTime']); // Create get-set macros\n\n  macro.setGet(publicAPI, model, ['numberOfColors', 'useAboveRangeColor', 'useBelowRangeColor']); // Create set macros for array (needs to know size)\n\n  macro.setArray(publicAPI, model, ['alphaRange', 'hueRange', 'saturationRange', 'valueRange'], 2);\n  macro.setArray(publicAPI, model, ['nanColor', 'belowRangeColor', 'aboveRangeColor'], 4); // Create get macros for array\n\n  macro.getArray(publicAPI, model, ['hueRange', 'saturationRange', 'valueRange', 'alphaRange', 'nanColor', 'belowRangeColor', 'aboveRangeColor']); // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n\n  vtkLookupTable(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkLookupTable'); // ----------------------------------------------------------------------------\n\nexport default {\n  newInstance,\n  extend\n};","map":{"version":3,"names":["macro","vtkMath","vtkScalarsToColors","ScalarMappingTarget","VtkDataTypes","vtkErrorMacro","BELOW_RANGE_COLOR_INDEX","ABOVE_RANGE_COLOR_INDEX","NAN_COLOR_INDEX","vtkLookupTable","publicAPI","model","classHierarchy","push","isOpaque","opaqueFlagBuildTime","getMTime","opaque","nanColor","useBelowRangeColor","belowRangeColor","useAboveRangeColor","aboveRangeColor","i","table","length","opaqueFlag","modified","usingLogScale","getNumberOfAvailableColors","linearIndexLookup","v","p","dIndex","range","maxIndex","shift","scale","Math","floor","linearLookup","index","isNan","offset","indexedLookupFunction","getAnnotatedValueIndexInternal","numberOfColors","lookupShiftAndScale","Number","MAX_VALUE","mapScalarsThroughTable","input","output","outFormat","inputOffset","lookupFunc","indexedLookup","trange","getMappingRange","getNumberOfColors","alpha","getAlpha","getNumberOfTuples","inIncr","getNumberOfComponents","outputV","getData","inputV","RGBA","cptr","forceBuild","hinc","sinc","vinc","ainc","hueRange","saturationRange","valueRange","alphaRange","hsv","rgba","hsv2rgb","buildSpecialColors","buildTime","setTable","getDataType","UNSIGNED_CHAR","data","insertTime","tptr","base","build","DEFAULT_VALUES","extend","initialValues","Object","assign","obj","mtime","get","setGet","setArray","getArray","newInstance"],"sources":["/Users/nicolerussack/CSCI401/CSCI401TissueSimulation/my-version/node_modules/vtk.js/Sources/Common/Core/LookupTable/index.js"],"sourcesContent":["import macro from 'vtk.js/Sources/macros';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport vtkScalarsToColors from 'vtk.js/Sources/Common/Core/ScalarsToColors';\nimport { ScalarMappingTarget } from 'vtk.js/Sources/Common/Core/ScalarsToColors/Constants';\n\nimport { VtkDataTypes } from 'vtk.js/Sources/Common/Core/DataArray/Constants';\n\nconst { vtkErrorMacro } = macro;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n// Add module-level functions or api that you want to expose statically via\n// the next section...\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nconst BELOW_RANGE_COLOR_INDEX = 0;\nconst ABOVE_RANGE_COLOR_INDEX = 1;\nconst NAN_COLOR_INDEX = 2;\n\n// ----------------------------------------------------------------------------\n// vtkMyClass methods\n// ----------------------------------------------------------------------------\n\nfunction vtkLookupTable(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkLookupTable');\n\n  //----------------------------------------------------------------------------\n  // Description:\n  // Return true if all of the values defining the mapping have an opacity\n  // equal to 1. Default implementation return true.\n  publicAPI.isOpaque = () => {\n    if (model.opaqueFlagBuildTime.getMTime() < publicAPI.getMTime()) {\n      let opaque = true;\n      if (model.nanColor[3] < 1.0) {\n        opaque = 0;\n      }\n      if (model.useBelowRangeColor && model.belowRangeColor[3] < 1.0) {\n        opaque = 0;\n      }\n      if (model.useAboveRangeColor && model.aboveRangeColor[3] < 1.0) {\n        opaque = 0;\n      }\n      for (let i = 3; i < model.table.length && opaque; i += 4) {\n        if (model.table[i] < 255) {\n          opaque = false;\n        }\n      }\n      model.opaqueFlag = opaque;\n      model.opaqueFlagBuildTime.modified();\n    }\n\n    return model.opaqueFlag;\n  };\n\n  publicAPI.usingLogScale = () => false;\n\n  //----------------------------------------------------------------------------\n  publicAPI.getNumberOfAvailableColors = () => model.table.length;\n\n  //----------------------------------------------------------------------------\n  // Apply shift/scale to the scalar value v and return the index.\n  publicAPI.linearIndexLookup = (v, p) => {\n    let dIndex = 0;\n\n    if (v < p.range[0]) {\n      dIndex = p.maxIndex + BELOW_RANGE_COLOR_INDEX + 1.5;\n    } else if (v > p.range[1]) {\n      dIndex = p.maxIndex + ABOVE_RANGE_COLOR_INDEX + 1.5;\n    } else {\n      dIndex = (v + p.shift) * p.scale;\n\n      // This conditional is needed because when v is very close to\n      // p.Range[1], it may map above p.MaxIndex in the linear mapping\n      // above.\n      dIndex = dIndex < p.maxIndex ? dIndex : p.maxIndex;\n    }\n\n    return Math.floor(dIndex);\n  };\n\n  publicAPI.linearLookup = (v, table, p) => {\n    let index = 0;\n    if (vtkMath.isNan(v)) {\n      index = Math.floor(p.maxIndex + 1.5 + NAN_COLOR_INDEX);\n    } else {\n      index = publicAPI.linearIndexLookup(v, p);\n    }\n    const offset = 4 * index;\n    return [\n      table[offset],\n      table[offset + 1],\n      table[offset + 2],\n      table[offset + 3],\n    ];\n  };\n\n  publicAPI.indexedLookupFunction = (v, table, p) => {\n    let index = publicAPI.getAnnotatedValueIndexInternal(v);\n    if (index === -1) {\n      index = model.numberOfColors + NAN_COLOR_INDEX;\n    }\n    const offset = 4 * index;\n    return [\n      table[offset],\n      table[offset + 1],\n      table[offset + 2],\n      table[offset + 3],\n    ];\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.lookupShiftAndScale = (range, p) => {\n    p.shift = -range[0];\n    p.scale = Number.MAX_VALUE;\n    if (range[1] > range[0]) {\n      p.scale = (p.maxIndex + 1) / (range[1] - range[0]);\n    }\n  };\n\n  // Public API methods\n  publicAPI.mapScalarsThroughTable = (\n    input,\n    output,\n    outFormat,\n    inputOffset\n  ) => {\n    let lookupFunc = publicAPI.linearLookup;\n    if (model.indexedLookup) {\n      lookupFunc = publicAPI.indexedLookupFunction;\n    }\n\n    const trange = publicAPI.getMappingRange();\n\n    const p = {\n      maxIndex: publicAPI.getNumberOfColors() - 1,\n      range: trange,\n      shift: 0.0,\n      scale: 0.0,\n    };\n    publicAPI.lookupShiftAndScale(trange, p);\n\n    const alpha = publicAPI.getAlpha();\n    const length = input.getNumberOfTuples();\n    const inIncr = input.getNumberOfComponents();\n\n    const outputV = output.getData();\n    const inputV = input.getData();\n\n    if (alpha >= 1.0) {\n      if (outFormat === ScalarMappingTarget.RGBA) {\n        for (let i = 0; i < length; i++) {\n          const cptr = lookupFunc(\n            inputV[i * inIncr + inputOffset],\n            model.table,\n            p\n          );\n          outputV[i * 4] = cptr[0];\n          outputV[i * 4 + 1] = cptr[1];\n          outputV[i * 4 + 2] = cptr[2];\n          outputV[i * 4 + 3] = cptr[3];\n        }\n      }\n    } else {\n      /* eslint-disable no-lonely-if */\n      if (outFormat === ScalarMappingTarget.RGBA) {\n        for (let i = 0; i < length; i++) {\n          const cptr = lookupFunc(\n            inputV[i * inIncr + inputOffset],\n            model.table,\n            p\n          );\n          outputV[i * 4] = cptr[0];\n          outputV[i * 4 + 1] = cptr[1];\n          outputV[i * 4 + 2] = cptr[2];\n          outputV[i * 4 + 3] = Math.floor(cptr[3] * alpha + 0.5);\n        }\n      }\n    } // alpha blending\n  };\n\n  publicAPI.forceBuild = () => {\n    let hinc = 0.0;\n    let sinc = 0.0;\n    let vinc = 0.0;\n    let ainc = 0.0;\n\n    const maxIndex = model.numberOfColors - 1;\n\n    if (maxIndex) {\n      hinc = (model.hueRange[1] - model.hueRange[0]) / maxIndex;\n      sinc = (model.saturationRange[1] - model.saturationRange[0]) / maxIndex;\n      vinc = (model.valueRange[1] - model.valueRange[0]) / maxIndex;\n      ainc = (model.alphaRange[1] - model.alphaRange[0]) / maxIndex;\n    }\n\n    const hsv = [];\n    const rgba = [];\n    for (let i = 0; i <= maxIndex; i++) {\n      hsv[0] = model.hueRange[0] + i * hinc;\n      hsv[1] = model.saturationRange[0] + i * sinc;\n      hsv[2] = model.valueRange[0] + i * vinc;\n\n      vtkMath.hsv2rgb(hsv, rgba);\n      rgba[3] = model.alphaRange[0] + i * ainc;\n\n      //  case VTK_RAMP_LINEAR:\n      model.table[i * 4] = rgba[0] * 255.0 + 0.5;\n      model.table[i * 4 + 1] = rgba[1] * 255.0 + 0.5;\n      model.table[i * 4 + 2] = rgba[2] * 255.0 + 0.5;\n      model.table[i * 4 + 3] = rgba[3] * 255.0 + 0.5;\n    }\n\n    publicAPI.buildSpecialColors();\n\n    model.buildTime.modified();\n  };\n\n  publicAPI.setTable = (table) => {\n    if (table.getNumberOfComponents() !== 4) {\n      vtkErrorMacro('Expected 4 components for RGBA colors');\n      return;\n    }\n    if (table.getDataType() !== VtkDataTypes.UNSIGNED_CHAR) {\n      vtkErrorMacro('Expected unsigned char values for RGBA colors');\n      return;\n    }\n    model.numberOfColors = table.getNumberOfTuples();\n    const data = table.getData();\n    for (let i = 0; i < data.length; i++) {\n      model.table[i] = data[i];\n    }\n\n    publicAPI.buildSpecialColors();\n    model.insertTime.modified();\n    publicAPI.modified();\n  };\n\n  publicAPI.buildSpecialColors = () => {\n    // Add \"special\" colors (NaN, below range, above range) to table here.\n    const { numberOfColors } = model;\n\n    const tptr = model.table;\n    let base = (numberOfColors + BELOW_RANGE_COLOR_INDEX) * 4;\n\n    // Below range color\n    if (model.useBelowRangeColor || numberOfColors === 0) {\n      tptr[base] = model.belowRangeColor[0] * 255.0 + 0.5;\n      tptr[base + 1] = model.belowRangeColor[1] * 255.0 + 0.5;\n      tptr[base + 2] = model.belowRangeColor[2] * 255.0 + 0.5;\n      tptr[base + 3] = model.belowRangeColor[3] * 255.0 + 0.5;\n    } else {\n      // Duplicate the first color in the table.\n      tptr[base] = tptr[0];\n      tptr[base + 1] = tptr[1];\n      tptr[base + 2] = tptr[2];\n      tptr[base + 3] = tptr[3];\n    }\n\n    // Above range color\n    base = (numberOfColors + ABOVE_RANGE_COLOR_INDEX) * 4;\n    if (model.useAboveRangeColor || numberOfColors === 0) {\n      tptr[base] = model.aboveRangeColor[0] * 255.0 + 0.5;\n      tptr[base + 1] = model.aboveRangeColor[1] * 255.0 + 0.5;\n      tptr[base + 2] = model.aboveRangeColor[2] * 255.0 + 0.5;\n      tptr[base + 3] = model.aboveRangeColor[3] * 255.0 + 0.5;\n    } else {\n      // Duplicate the last color in the table.\n      tptr[base] = tptr[4 * (numberOfColors - 1) + 0];\n      tptr[base + 1] = tptr[4 * (numberOfColors - 1) + 1];\n      tptr[base + 2] = tptr[4 * (numberOfColors - 1) + 2];\n      tptr[base + 3] = tptr[4 * (numberOfColors - 1) + 3];\n    }\n\n    // Always use NanColor\n    base = (numberOfColors + NAN_COLOR_INDEX) * 4;\n    tptr[base] = model.nanColor[0] * 255.0 + 0.5;\n    tptr[base + 1] = model.nanColor[1] * 255.0 + 0.5;\n    tptr[base + 2] = model.nanColor[2] * 255.0 + 0.5;\n    tptr[base + 3] = model.nanColor[3] * 255.0 + 0.5;\n  };\n\n  publicAPI.build = () => {\n    if (\n      model.table.length < 1 ||\n      (publicAPI.getMTime() > model.buildTime.getMTime() &&\n        model.insertTime.getMTime() <= model.buildTime.getMTime())\n    ) {\n      publicAPI.forceBuild();\n    }\n  };\n\n  if (model.table.length > 0) {\n    // ensure insertTime is more recently modified than buildTime if\n    // a table is provided via the constructor\n    model.insertTime.modified();\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  numberOfColors: 256,\n  // table: null,\n\n  hueRange: [0.0, 0.66667],\n  saturationRange: [1.0, 1.0],\n  valueRange: [1.0, 1.0],\n  alphaRange: [1.0, 1.0],\n\n  nanColor: [0.5, 0.0, 0.0, 1.0],\n  belowRangeColor: [0.0, 0.0, 0.0, 1.0],\n  aboveRangeColor: [1.0, 1.0, 1.0, 1.0],\n  useAboveRangeColor: false,\n  useBelowRangeColor: false,\n\n  alpha: 1.0,\n  // buildTime: null,\n  // opaqueFlagBuildTime: null,\n  // insertTime: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkScalarsToColors.extend(publicAPI, model, initialValues);\n\n  // Internal objects initialization\n  if (!model.table) {\n    model.table = [];\n  }\n\n  model.buildTime = {};\n  macro.obj(model.buildTime);\n\n  model.opaqueFlagBuildTime = {};\n  macro.obj(model.opaqueFlagBuildTime, { mtime: 0 });\n\n  model.insertTime = {};\n  macro.obj(model.insertTime, { mtime: 0 });\n\n  // Create get-only macros\n  macro.get(publicAPI, model, ['buildTime']);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, [\n    'numberOfColors',\n    'useAboveRangeColor',\n    'useBelowRangeColor',\n  ]);\n\n  // Create set macros for array (needs to know size)\n  macro.setArray(\n    publicAPI,\n    model,\n    ['alphaRange', 'hueRange', 'saturationRange', 'valueRange'],\n    2\n  );\n\n  macro.setArray(\n    publicAPI,\n    model,\n    ['nanColor', 'belowRangeColor', 'aboveRangeColor'],\n    4\n  );\n\n  // Create get macros for array\n  macro.getArray(publicAPI, model, [\n    'hueRange',\n    'saturationRange',\n    'valueRange',\n    'alphaRange',\n    'nanColor',\n    'belowRangeColor',\n    'aboveRangeColor',\n  ]);\n\n  // For more macro methods, see \"Sources/macros.js\"\n\n  // Object specific methods\n  vtkLookupTable(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkLookupTable');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}