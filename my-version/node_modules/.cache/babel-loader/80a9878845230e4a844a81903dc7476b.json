{"ast":null,"code":"import macro from 'vtk.js/Sources/macros';\nimport vtkWebGPUShaderModule from 'vtk.js/Sources/Rendering/WebGPU/ShaderModule'; // perform in place string substitutions, indicate if a substitution was done\n// this is useful for building up shader strings which typically involve\n// lots of string substitutions. Return true if a substitution was done.\n\nfunction substitute(source, search, replace) {\n  let all = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  const replaceStr = Array.isArray(replace) ? replace.join('\\n') : replace;\n  let replaced = false;\n\n  if (source.search(search) !== -1) {\n    replaced = true;\n  }\n\n  let gflag = '';\n\n  if (all) {\n    gflag = 'g';\n  }\n\n  const regex = new RegExp(search, gflag);\n  const resultstr = source.replace(regex, replaceStr);\n  return {\n    replace: replaced,\n    result: resultstr\n  };\n} // ----------------------------------------------------------------------------\n// vtkWebGPUShaderCache methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkWebGPUShaderCache(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUShaderCache');\n\n  publicAPI.getShaderModule = shaderDesc => {\n    // has it already been created?\n    const sType = shaderDesc.getType();\n    const sHash = shaderDesc.getHash();\n\n    const keys = model._shaderModules.keys();\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n\n      if (key.getHash() === sHash && key.getType() === sType) {\n        return model._shaderModules.get(key);\n      }\n    } // console.log(JSON.stringify(shaderDesc));\n\n\n    const sm = vtkWebGPUShaderModule.newInstance();\n    sm.initialize(model.device, shaderDesc);\n\n    model._shaderModules.set(shaderDesc, sm);\n\n    return sm;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nconst DEFAULT_VALUES = {\n  shaderModules: null,\n  device: null,\n  window: null\n}; // ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Internal objects\n\n  model._shaderModules = new Map(); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['device', 'window']); // Object methods\n\n  vtkWebGPUShaderCache(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkWebGPUShaderCache'); // ----------------------------------------------------------------------------\n\nexport default {\n  newInstance,\n  extend,\n  substitute\n};","map":{"version":3,"names":["macro","vtkWebGPUShaderModule","substitute","source","search","replace","all","replaceStr","Array","isArray","join","replaced","gflag","regex","RegExp","resultstr","result","vtkWebGPUShaderCache","publicAPI","model","classHierarchy","push","getShaderModule","shaderDesc","sType","getType","sHash","getHash","keys","_shaderModules","i","length","key","get","sm","newInstance","initialize","device","set","DEFAULT_VALUES","shaderModules","window","extend","initialValues","Object","assign","Map","obj","setGet"],"sources":["/Users/nicolerussack/CSCI401/CSCI401TissueSimulation/my-version/node_modules/vtk.js/Sources/Rendering/WebGPU/ShaderCache/index.js"],"sourcesContent":["import macro from 'vtk.js/Sources/macros';\nimport vtkWebGPUShaderModule from 'vtk.js/Sources/Rendering/WebGPU/ShaderModule';\n\n// perform in place string substitutions, indicate if a substitution was done\n// this is useful for building up shader strings which typically involve\n// lots of string substitutions. Return true if a substitution was done.\nfunction substitute(source, search, replace, all = true) {\n  const replaceStr = Array.isArray(replace) ? replace.join('\\n') : replace;\n  let replaced = false;\n  if (source.search(search) !== -1) {\n    replaced = true;\n  }\n  let gflag = '';\n  if (all) {\n    gflag = 'g';\n  }\n  const regex = new RegExp(search, gflag);\n  const resultstr = source.replace(regex, replaceStr);\n  return { replace: replaced, result: resultstr };\n}\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUShaderCache methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUShaderCache(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUShaderCache');\n\n  publicAPI.getShaderModule = (shaderDesc) => {\n    // has it already been created?\n    const sType = shaderDesc.getType();\n    const sHash = shaderDesc.getHash();\n    const keys = model._shaderModules.keys();\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (key.getHash() === sHash && key.getType() === sType) {\n        return model._shaderModules.get(key);\n      }\n    }\n\n    // console.log(JSON.stringify(shaderDesc));\n\n    const sm = vtkWebGPUShaderModule.newInstance();\n    sm.initialize(model.device, shaderDesc);\n    model._shaderModules.set(shaderDesc, sm);\n    return sm;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  shaderModules: null,\n  device: null,\n  window: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Internal objects\n  model._shaderModules = new Map();\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['device', 'window']);\n\n  // Object methods\n  vtkWebGPUShaderCache(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkWebGPUShaderCache');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend, substitute };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}