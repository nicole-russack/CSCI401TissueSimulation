{"ast":null,"code":"export function getEndianness() {\n  const a = new ArrayBuffer(4);\n  const b = new Uint8Array(a);\n  const c = new Uint32Array(a);\n  b[0] = 0xa1;\n  b[1] = 0xb2;\n  b[2] = 0xc3;\n  b[3] = 0xd4;\n  if (c[0] === 0xd4c3b2a1) return 'LittleEndian';\n  if (c[0] === 0xa1b2c3d4) return 'BigEndian';\n  return null;\n}\nexport const ENDIANNESS = getEndianness();\nexport function swapBytes(buffer, wordSize) {\n  if (wordSize < 2) {\n    return;\n  }\n\n  const bytes = new Int8Array(buffer);\n  const size = bytes.length;\n  const tempBuffer = [];\n\n  for (let i = 0; i < size; i += wordSize) {\n    for (let j = 0; j < wordSize; j++) {\n      tempBuffer.push(bytes[i + j]);\n    }\n\n    for (let j = 0; j < wordSize; j++) {\n      bytes[i + j] = tempBuffer.pop();\n    }\n  }\n}\nexport default {\n  ENDIANNESS,\n  getEndianness,\n  swapBytes\n};","map":{"version":3,"names":["getEndianness","a","ArrayBuffer","b","Uint8Array","c","Uint32Array","ENDIANNESS","swapBytes","buffer","wordSize","bytes","Int8Array","size","length","tempBuffer","i","j","push","pop"],"sources":["/Users/nicolerussack/CSCI401/CSCI401TissueSimulation/my-version/node_modules/vtk.js/Sources/Common/Core/Endian/index.js"],"sourcesContent":["export function getEndianness() {\n  const a = new ArrayBuffer(4);\n  const b = new Uint8Array(a);\n  const c = new Uint32Array(a);\n  b[0] = 0xa1;\n  b[1] = 0xb2;\n  b[2] = 0xc3;\n  b[3] = 0xd4;\n  if (c[0] === 0xd4c3b2a1) return 'LittleEndian';\n  if (c[0] === 0xa1b2c3d4) return 'BigEndian';\n  return null;\n}\n\nexport const ENDIANNESS = getEndianness();\n\nexport function swapBytes(buffer, wordSize) {\n  if (wordSize < 2) {\n    return;\n  }\n\n  const bytes = new Int8Array(buffer);\n  const size = bytes.length;\n  const tempBuffer = [];\n\n  for (let i = 0; i < size; i += wordSize) {\n    for (let j = 0; j < wordSize; j++) {\n      tempBuffer.push(bytes[i + j]);\n    }\n    for (let j = 0; j < wordSize; j++) {\n      bytes[i + j] = tempBuffer.pop();\n    }\n  }\n}\n\nexport default {\n  ENDIANNESS,\n  getEndianness,\n  swapBytes,\n};\n"],"mappings":"AAAA,OAAO,SAASA,aAAT,GAAyB;EAC9B,MAAMC,CAAC,GAAG,IAAIC,WAAJ,CAAgB,CAAhB,CAAV;EACA,MAAMC,CAAC,GAAG,IAAIC,UAAJ,CAAeH,CAAf,CAAV;EACA,MAAMI,CAAC,GAAG,IAAIC,WAAJ,CAAgBL,CAAhB,CAAV;EACAE,CAAC,CAAC,CAAD,CAAD,GAAO,IAAP;EACAA,CAAC,CAAC,CAAD,CAAD,GAAO,IAAP;EACAA,CAAC,CAAC,CAAD,CAAD,GAAO,IAAP;EACAA,CAAC,CAAC,CAAD,CAAD,GAAO,IAAP;EACA,IAAIE,CAAC,CAAC,CAAD,CAAD,KAAS,UAAb,EAAyB,OAAO,cAAP;EACzB,IAAIA,CAAC,CAAC,CAAD,CAAD,KAAS,UAAb,EAAyB,OAAO,WAAP;EACzB,OAAO,IAAP;AACD;AAED,OAAO,MAAME,UAAU,GAAGP,aAAa,EAAhC;AAEP,OAAO,SAASQ,SAAT,CAAmBC,MAAnB,EAA2BC,QAA3B,EAAqC;EAC1C,IAAIA,QAAQ,GAAG,CAAf,EAAkB;IAChB;EACD;;EAED,MAAMC,KAAK,GAAG,IAAIC,SAAJ,CAAcH,MAAd,CAAd;EACA,MAAMI,IAAI,GAAGF,KAAK,CAACG,MAAnB;EACA,MAAMC,UAAU,GAAG,EAAnB;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAApB,EAA0BG,CAAC,IAAIN,QAA/B,EAAyC;IACvC,KAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,QAApB,EAA8BO,CAAC,EAA/B,EAAmC;MACjCF,UAAU,CAACG,IAAX,CAAgBP,KAAK,CAACK,CAAC,GAAGC,CAAL,CAArB;IACD;;IACD,KAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,QAApB,EAA8BO,CAAC,EAA/B,EAAmC;MACjCN,KAAK,CAACK,CAAC,GAAGC,CAAL,CAAL,GAAeF,UAAU,CAACI,GAAX,EAAf;IACD;EACF;AACF;AAED,eAAe;EACbZ,UADa;EAEbP,aAFa;EAGbQ;AAHa,CAAf"},"metadata":{},"sourceType":"module"}